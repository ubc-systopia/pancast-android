// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pancast/dongle/gaen/covidshield.proto

package com.pancast.dongle.gaen;

public final class Covidshield {
  private Covidshield() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface KeyClaimRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.pancast.dongle.gaen.KeyClaimRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * one_time_code is the code received from the testing portal.
     * </pre>
     *
     * <code>optional string one_time_code = 1;</code>
     */
    boolean hasOneTimeCode();
    /**
     * <pre>
     * one_time_code is the code received from the testing portal.
     * </pre>
     *
     * <code>optional string one_time_code = 1;</code>
     */
    java.lang.String getOneTimeCode();
    /**
     * <pre>
     * one_time_code is the code received from the testing portal.
     * </pre>
     *
     * <code>optional string one_time_code = 1;</code>
     */
    com.google.protobuf.ByteString
        getOneTimeCodeBytes();

    /**
     * <pre>
     * app_public_key is generated locally and saved upon successful request
     * completion.
     * </pre>
     *
     * <code>optional bytes app_public_key = 2;</code>
     */
    boolean hasAppPublicKey();
    /**
     * <pre>
     * app_public_key is generated locally and saved upon successful request
     * completion.
     * </pre>
     *
     * <code>optional bytes app_public_key = 2;</code>
     */
    com.google.protobuf.ByteString getAppPublicKey();
  }
  /**
   * <pre>
   * Clients will receive a One Time Code via some external channel (i.e. SMS or
   * verbal). Then, upon issuing THIS request, they will generate a new keypair.
   * If the response comes back successful, the app_public_key (and the
   * corresponding private key) and the returned server_public_key will be kept in
   * local storage for the duration of this reporting window (the next 14 days).
   *
   * app_public_keys must not be re-used for new KeyClaimRequests, or the requests
   * will fail.
   * </pre>
   *
   * Protobuf type {@code com.pancast.dongle.gaen.KeyClaimRequest}
   */
  public  static final class KeyClaimRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.pancast.dongle.gaen.KeyClaimRequest)
      KeyClaimRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use KeyClaimRequest.newBuilder() to construct.
    private KeyClaimRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private KeyClaimRequest() {
      oneTimeCode_ = "";
      appPublicKey_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private KeyClaimRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              oneTimeCode_ = bs;
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              appPublicKey_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_KeyClaimRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_KeyClaimRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pancast.dongle.gaen.Covidshield.KeyClaimRequest.class, com.pancast.dongle.gaen.Covidshield.KeyClaimRequest.Builder.class);
    }

    private int bitField0_;
    public static final int ONE_TIME_CODE_FIELD_NUMBER = 1;
    private volatile java.lang.Object oneTimeCode_;
    /**
     * <pre>
     * one_time_code is the code received from the testing portal.
     * </pre>
     *
     * <code>optional string one_time_code = 1;</code>
     */
    public boolean hasOneTimeCode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * one_time_code is the code received from the testing portal.
     * </pre>
     *
     * <code>optional string one_time_code = 1;</code>
     */
    public java.lang.String getOneTimeCode() {
      java.lang.Object ref = oneTimeCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          oneTimeCode_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * one_time_code is the code received from the testing portal.
     * </pre>
     *
     * <code>optional string one_time_code = 1;</code>
     */
    public com.google.protobuf.ByteString
        getOneTimeCodeBytes() {
      java.lang.Object ref = oneTimeCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        oneTimeCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int APP_PUBLIC_KEY_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString appPublicKey_;
    /**
     * <pre>
     * app_public_key is generated locally and saved upon successful request
     * completion.
     * </pre>
     *
     * <code>optional bytes app_public_key = 2;</code>
     */
    public boolean hasAppPublicKey() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * app_public_key is generated locally and saved upon successful request
     * completion.
     * </pre>
     *
     * <code>optional bytes app_public_key = 2;</code>
     */
    public com.google.protobuf.ByteString getAppPublicKey() {
      return appPublicKey_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, oneTimeCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, appPublicKey_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, oneTimeCode_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, appPublicKey_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.pancast.dongle.gaen.Covidshield.KeyClaimRequest)) {
        return super.equals(obj);
      }
      com.pancast.dongle.gaen.Covidshield.KeyClaimRequest other = (com.pancast.dongle.gaen.Covidshield.KeyClaimRequest) obj;

      boolean result = true;
      result = result && (hasOneTimeCode() == other.hasOneTimeCode());
      if (hasOneTimeCode()) {
        result = result && getOneTimeCode()
            .equals(other.getOneTimeCode());
      }
      result = result && (hasAppPublicKey() == other.hasAppPublicKey());
      if (hasAppPublicKey()) {
        result = result && getAppPublicKey()
            .equals(other.getAppPublicKey());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasOneTimeCode()) {
        hash = (37 * hash) + ONE_TIME_CODE_FIELD_NUMBER;
        hash = (53 * hash) + getOneTimeCode().hashCode();
      }
      if (hasAppPublicKey()) {
        hash = (37 * hash) + APP_PUBLIC_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getAppPublicKey().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.pancast.dongle.gaen.Covidshield.KeyClaimRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.KeyClaimRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.KeyClaimRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.KeyClaimRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.KeyClaimRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.KeyClaimRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.KeyClaimRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.KeyClaimRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.KeyClaimRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.KeyClaimRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.KeyClaimRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.KeyClaimRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.pancast.dongle.gaen.Covidshield.KeyClaimRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Clients will receive a One Time Code via some external channel (i.e. SMS or
     * verbal). Then, upon issuing THIS request, they will generate a new keypair.
     * If the response comes back successful, the app_public_key (and the
     * corresponding private key) and the returned server_public_key will be kept in
     * local storage for the duration of this reporting window (the next 14 days).
     *
     * app_public_keys must not be re-used for new KeyClaimRequests, or the requests
     * will fail.
     * </pre>
     *
     * Protobuf type {@code com.pancast.dongle.gaen.KeyClaimRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.pancast.dongle.gaen.KeyClaimRequest)
        com.pancast.dongle.gaen.Covidshield.KeyClaimRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_KeyClaimRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_KeyClaimRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.pancast.dongle.gaen.Covidshield.KeyClaimRequest.class, com.pancast.dongle.gaen.Covidshield.KeyClaimRequest.Builder.class);
      }

      // Construct using com.pancast.dongle.gaen.Covidshield.KeyClaimRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        oneTimeCode_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        appPublicKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_KeyClaimRequest_descriptor;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.KeyClaimRequest getDefaultInstanceForType() {
        return com.pancast.dongle.gaen.Covidshield.KeyClaimRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.KeyClaimRequest build() {
        com.pancast.dongle.gaen.Covidshield.KeyClaimRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.KeyClaimRequest buildPartial() {
        com.pancast.dongle.gaen.Covidshield.KeyClaimRequest result = new com.pancast.dongle.gaen.Covidshield.KeyClaimRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.oneTimeCode_ = oneTimeCode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.appPublicKey_ = appPublicKey_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pancast.dongle.gaen.Covidshield.KeyClaimRequest) {
          return mergeFrom((com.pancast.dongle.gaen.Covidshield.KeyClaimRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.pancast.dongle.gaen.Covidshield.KeyClaimRequest other) {
        if (other == com.pancast.dongle.gaen.Covidshield.KeyClaimRequest.getDefaultInstance()) return this;
        if (other.hasOneTimeCode()) {
          bitField0_ |= 0x00000001;
          oneTimeCode_ = other.oneTimeCode_;
          onChanged();
        }
        if (other.hasAppPublicKey()) {
          setAppPublicKey(other.getAppPublicKey());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.pancast.dongle.gaen.Covidshield.KeyClaimRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.pancast.dongle.gaen.Covidshield.KeyClaimRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object oneTimeCode_ = "";
      /**
       * <pre>
       * one_time_code is the code received from the testing portal.
       * </pre>
       *
       * <code>optional string one_time_code = 1;</code>
       */
      public boolean hasOneTimeCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * one_time_code is the code received from the testing portal.
       * </pre>
       *
       * <code>optional string one_time_code = 1;</code>
       */
      public java.lang.String getOneTimeCode() {
        java.lang.Object ref = oneTimeCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            oneTimeCode_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * one_time_code is the code received from the testing portal.
       * </pre>
       *
       * <code>optional string one_time_code = 1;</code>
       */
      public com.google.protobuf.ByteString
          getOneTimeCodeBytes() {
        java.lang.Object ref = oneTimeCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          oneTimeCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * one_time_code is the code received from the testing portal.
       * </pre>
       *
       * <code>optional string one_time_code = 1;</code>
       */
      public Builder setOneTimeCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        oneTimeCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * one_time_code is the code received from the testing portal.
       * </pre>
       *
       * <code>optional string one_time_code = 1;</code>
       */
      public Builder clearOneTimeCode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oneTimeCode_ = getDefaultInstance().getOneTimeCode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * one_time_code is the code received from the testing portal.
       * </pre>
       *
       * <code>optional string one_time_code = 1;</code>
       */
      public Builder setOneTimeCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        oneTimeCode_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString appPublicKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * app_public_key is generated locally and saved upon successful request
       * completion.
       * </pre>
       *
       * <code>optional bytes app_public_key = 2;</code>
       */
      public boolean hasAppPublicKey() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * app_public_key is generated locally and saved upon successful request
       * completion.
       * </pre>
       *
       * <code>optional bytes app_public_key = 2;</code>
       */
      public com.google.protobuf.ByteString getAppPublicKey() {
        return appPublicKey_;
      }
      /**
       * <pre>
       * app_public_key is generated locally and saved upon successful request
       * completion.
       * </pre>
       *
       * <code>optional bytes app_public_key = 2;</code>
       */
      public Builder setAppPublicKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        appPublicKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * app_public_key is generated locally and saved upon successful request
       * completion.
       * </pre>
       *
       * <code>optional bytes app_public_key = 2;</code>
       */
      public Builder clearAppPublicKey() {
        bitField0_ = (bitField0_ & ~0x00000002);
        appPublicKey_ = getDefaultInstance().getAppPublicKey();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.pancast.dongle.gaen.KeyClaimRequest)
    }

    // @@protoc_insertion_point(class_scope:com.pancast.dongle.gaen.KeyClaimRequest)
    private static final com.pancast.dongle.gaen.Covidshield.KeyClaimRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.pancast.dongle.gaen.Covidshield.KeyClaimRequest();
    }

    public static com.pancast.dongle.gaen.Covidshield.KeyClaimRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<KeyClaimRequest>
        PARSER = new com.google.protobuf.AbstractParser<KeyClaimRequest>() {
      @java.lang.Override
      public KeyClaimRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KeyClaimRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<KeyClaimRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KeyClaimRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.pancast.dongle.gaen.Covidshield.KeyClaimRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface KeyClaimResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.pancast.dongle.gaen.KeyClaimResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .com.pancast.dongle.gaen.KeyClaimResponse.ErrorCode error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .com.pancast.dongle.gaen.KeyClaimResponse.ErrorCode error = 1;</code>
     */
    com.pancast.dongle.gaen.Covidshield.KeyClaimResponse.ErrorCode getError();

    /**
     * <pre>
     * 32 bytes
     * </pre>
     *
     * <code>optional bytes server_public_key = 2;</code>
     */
    boolean hasServerPublicKey();
    /**
     * <pre>
     * 32 bytes
     * </pre>
     *
     * <code>optional bytes server_public_key = 2;</code>
     */
    com.google.protobuf.ByteString getServerPublicKey();

    /**
     * <code>optional uint32 tries_remaining = 3;</code>
     */
    boolean hasTriesRemaining();
    /**
     * <code>optional uint32 tries_remaining = 3;</code>
     */
    int getTriesRemaining();

    /**
     * <code>optional .google.protobuf.Duration remaining_ban_duration = 4;</code>
     */
    boolean hasRemainingBanDuration();
    /**
     * <code>optional .google.protobuf.Duration remaining_ban_duration = 4;</code>
     */
    com.google.protobuf.Duration getRemainingBanDuration();
    /**
     * <code>optional .google.protobuf.Duration remaining_ban_duration = 4;</code>
     */
    com.google.protobuf.DurationOrBuilder getRemainingBanDurationOrBuilder();
  }
  /**
   * <pre>
   * KeyClaimResponse is received from the server in response to a
   * KeyClaimRequest. If the request was successful, error will be NONE and
   * server_public_key will be set.
   * </pre>
   *
   * Protobuf type {@code com.pancast.dongle.gaen.KeyClaimResponse}
   */
  public  static final class KeyClaimResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.pancast.dongle.gaen.KeyClaimResponse)
      KeyClaimResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use KeyClaimResponse.newBuilder() to construct.
    private KeyClaimResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private KeyClaimResponse() {
      error_ = 0;
      serverPublicKey_ = com.google.protobuf.ByteString.EMPTY;
      triesRemaining_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private KeyClaimResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              com.pancast.dongle.gaen.Covidshield.KeyClaimResponse.ErrorCode value = com.pancast.dongle.gaen.Covidshield.KeyClaimResponse.ErrorCode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                error_ = rawValue;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              serverPublicKey_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              triesRemaining_ = input.readUInt32();
              break;
            }
            case 34: {
              com.google.protobuf.Duration.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = remainingBanDuration_.toBuilder();
              }
              remainingBanDuration_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(remainingBanDuration_);
                remainingBanDuration_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_KeyClaimResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_KeyClaimResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pancast.dongle.gaen.Covidshield.KeyClaimResponse.class, com.pancast.dongle.gaen.Covidshield.KeyClaimResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code com.pancast.dongle.gaen.KeyClaimResponse.ErrorCode}
     */
    public enum ErrorCode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NONE = 0;</code>
       */
      NONE(0),
      /**
       * <code>UNKNOWN = 1;</code>
       */
      UNKNOWN(1),
      /**
       * <code>INVALID_ONE_TIME_CODE = 2;</code>
       */
      INVALID_ONE_TIME_CODE(2),
      /**
       * <code>SERVER_ERROR = 3;</code>
       */
      SERVER_ERROR(3),
      /**
       * <pre>
       * Indicates the key is invalid, or already registered.
       * </pre>
       *
       * <code>INVALID_KEY = 4;</code>
       */
      INVALID_KEY(4),
      /**
       * <code>TEMPORARY_BAN = 5;</code>
       */
      TEMPORARY_BAN(5),
      ;

      /**
       * <code>NONE = 0;</code>
       */
      public static final int NONE_VALUE = 0;
      /**
       * <code>UNKNOWN = 1;</code>
       */
      public static final int UNKNOWN_VALUE = 1;
      /**
       * <code>INVALID_ONE_TIME_CODE = 2;</code>
       */
      public static final int INVALID_ONE_TIME_CODE_VALUE = 2;
      /**
       * <code>SERVER_ERROR = 3;</code>
       */
      public static final int SERVER_ERROR_VALUE = 3;
      /**
       * <pre>
       * Indicates the key is invalid, or already registered.
       * </pre>
       *
       * <code>INVALID_KEY = 4;</code>
       */
      public static final int INVALID_KEY_VALUE = 4;
      /**
       * <code>TEMPORARY_BAN = 5;</code>
       */
      public static final int TEMPORARY_BAN_VALUE = 5;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ErrorCode valueOf(int value) {
        return forNumber(value);
      }

      public static ErrorCode forNumber(int value) {
        switch (value) {
          case 0: return NONE;
          case 1: return UNKNOWN;
          case 2: return INVALID_ONE_TIME_CODE;
          case 3: return SERVER_ERROR;
          case 4: return INVALID_KEY;
          case 5: return TEMPORARY_BAN;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ErrorCode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ErrorCode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ErrorCode>() {
              public ErrorCode findValueByNumber(int number) {
                return ErrorCode.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.pancast.dongle.gaen.Covidshield.KeyClaimResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final ErrorCode[] VALUES = values();

      public static ErrorCode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ErrorCode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.pancast.dongle.gaen.KeyClaimResponse.ErrorCode)
    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private int error_;
    /**
     * <code>optional .com.pancast.dongle.gaen.KeyClaimResponse.ErrorCode error = 1;</code>
     */
    public boolean hasError() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .com.pancast.dongle.gaen.KeyClaimResponse.ErrorCode error = 1;</code>
     */
    public com.pancast.dongle.gaen.Covidshield.KeyClaimResponse.ErrorCode getError() {
      @SuppressWarnings("deprecation")
      com.pancast.dongle.gaen.Covidshield.KeyClaimResponse.ErrorCode result = com.pancast.dongle.gaen.Covidshield.KeyClaimResponse.ErrorCode.valueOf(error_);
      return result == null ? com.pancast.dongle.gaen.Covidshield.KeyClaimResponse.ErrorCode.NONE : result;
    }

    public static final int SERVER_PUBLIC_KEY_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString serverPublicKey_;
    /**
     * <pre>
     * 32 bytes
     * </pre>
     *
     * <code>optional bytes server_public_key = 2;</code>
     */
    public boolean hasServerPublicKey() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * 32 bytes
     * </pre>
     *
     * <code>optional bytes server_public_key = 2;</code>
     */
    public com.google.protobuf.ByteString getServerPublicKey() {
      return serverPublicKey_;
    }

    public static final int TRIES_REMAINING_FIELD_NUMBER = 3;
    private int triesRemaining_;
    /**
     * <code>optional uint32 tries_remaining = 3;</code>
     */
    public boolean hasTriesRemaining() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 tries_remaining = 3;</code>
     */
    public int getTriesRemaining() {
      return triesRemaining_;
    }

    public static final int REMAINING_BAN_DURATION_FIELD_NUMBER = 4;
    private com.google.protobuf.Duration remainingBanDuration_;
    /**
     * <code>optional .google.protobuf.Duration remaining_ban_duration = 4;</code>
     */
    public boolean hasRemainingBanDuration() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .google.protobuf.Duration remaining_ban_duration = 4;</code>
     */
    public com.google.protobuf.Duration getRemainingBanDuration() {
      return remainingBanDuration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : remainingBanDuration_;
    }
    /**
     * <code>optional .google.protobuf.Duration remaining_ban_duration = 4;</code>
     */
    public com.google.protobuf.DurationOrBuilder getRemainingBanDurationOrBuilder() {
      return remainingBanDuration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : remainingBanDuration_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, error_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, serverPublicKey_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, triesRemaining_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getRemainingBanDuration());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, error_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, serverPublicKey_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, triesRemaining_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getRemainingBanDuration());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.pancast.dongle.gaen.Covidshield.KeyClaimResponse)) {
        return super.equals(obj);
      }
      com.pancast.dongle.gaen.Covidshield.KeyClaimResponse other = (com.pancast.dongle.gaen.Covidshield.KeyClaimResponse) obj;

      boolean result = true;
      result = result && (hasError() == other.hasError());
      if (hasError()) {
        result = result && error_ == other.error_;
      }
      result = result && (hasServerPublicKey() == other.hasServerPublicKey());
      if (hasServerPublicKey()) {
        result = result && getServerPublicKey()
            .equals(other.getServerPublicKey());
      }
      result = result && (hasTriesRemaining() == other.hasTriesRemaining());
      if (hasTriesRemaining()) {
        result = result && (getTriesRemaining()
            == other.getTriesRemaining());
      }
      result = result && (hasRemainingBanDuration() == other.hasRemainingBanDuration());
      if (hasRemainingBanDuration()) {
        result = result && getRemainingBanDuration()
            .equals(other.getRemainingBanDuration());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasError()) {
        hash = (37 * hash) + ERROR_FIELD_NUMBER;
        hash = (53 * hash) + error_;
      }
      if (hasServerPublicKey()) {
        hash = (37 * hash) + SERVER_PUBLIC_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getServerPublicKey().hashCode();
      }
      if (hasTriesRemaining()) {
        hash = (37 * hash) + TRIES_REMAINING_FIELD_NUMBER;
        hash = (53 * hash) + getTriesRemaining();
      }
      if (hasRemainingBanDuration()) {
        hash = (37 * hash) + REMAINING_BAN_DURATION_FIELD_NUMBER;
        hash = (53 * hash) + getRemainingBanDuration().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.pancast.dongle.gaen.Covidshield.KeyClaimResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.KeyClaimResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.KeyClaimResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.KeyClaimResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.KeyClaimResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.KeyClaimResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.KeyClaimResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.KeyClaimResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.KeyClaimResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.KeyClaimResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.KeyClaimResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.KeyClaimResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.pancast.dongle.gaen.Covidshield.KeyClaimResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * KeyClaimResponse is received from the server in response to a
     * KeyClaimRequest. If the request was successful, error will be NONE and
     * server_public_key will be set.
     * </pre>
     *
     * Protobuf type {@code com.pancast.dongle.gaen.KeyClaimResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.pancast.dongle.gaen.KeyClaimResponse)
        com.pancast.dongle.gaen.Covidshield.KeyClaimResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_KeyClaimResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_KeyClaimResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.pancast.dongle.gaen.Covidshield.KeyClaimResponse.class, com.pancast.dongle.gaen.Covidshield.KeyClaimResponse.Builder.class);
      }

      // Construct using com.pancast.dongle.gaen.Covidshield.KeyClaimResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRemainingBanDurationFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        error_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        serverPublicKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        triesRemaining_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (remainingBanDurationBuilder_ == null) {
          remainingBanDuration_ = null;
        } else {
          remainingBanDurationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_KeyClaimResponse_descriptor;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.KeyClaimResponse getDefaultInstanceForType() {
        return com.pancast.dongle.gaen.Covidshield.KeyClaimResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.KeyClaimResponse build() {
        com.pancast.dongle.gaen.Covidshield.KeyClaimResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.KeyClaimResponse buildPartial() {
        com.pancast.dongle.gaen.Covidshield.KeyClaimResponse result = new com.pancast.dongle.gaen.Covidshield.KeyClaimResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.error_ = error_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.serverPublicKey_ = serverPublicKey_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.triesRemaining_ = triesRemaining_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (remainingBanDurationBuilder_ == null) {
          result.remainingBanDuration_ = remainingBanDuration_;
        } else {
          result.remainingBanDuration_ = remainingBanDurationBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pancast.dongle.gaen.Covidshield.KeyClaimResponse) {
          return mergeFrom((com.pancast.dongle.gaen.Covidshield.KeyClaimResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.pancast.dongle.gaen.Covidshield.KeyClaimResponse other) {
        if (other == com.pancast.dongle.gaen.Covidshield.KeyClaimResponse.getDefaultInstance()) return this;
        if (other.hasError()) {
          setError(other.getError());
        }
        if (other.hasServerPublicKey()) {
          setServerPublicKey(other.getServerPublicKey());
        }
        if (other.hasTriesRemaining()) {
          setTriesRemaining(other.getTriesRemaining());
        }
        if (other.hasRemainingBanDuration()) {
          mergeRemainingBanDuration(other.getRemainingBanDuration());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.pancast.dongle.gaen.Covidshield.KeyClaimResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.pancast.dongle.gaen.Covidshield.KeyClaimResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int error_ = 0;
      /**
       * <code>optional .com.pancast.dongle.gaen.KeyClaimResponse.ErrorCode error = 1;</code>
       */
      public boolean hasError() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .com.pancast.dongle.gaen.KeyClaimResponse.ErrorCode error = 1;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.KeyClaimResponse.ErrorCode getError() {
        @SuppressWarnings("deprecation")
        com.pancast.dongle.gaen.Covidshield.KeyClaimResponse.ErrorCode result = com.pancast.dongle.gaen.Covidshield.KeyClaimResponse.ErrorCode.valueOf(error_);
        return result == null ? com.pancast.dongle.gaen.Covidshield.KeyClaimResponse.ErrorCode.NONE : result;
      }
      /**
       * <code>optional .com.pancast.dongle.gaen.KeyClaimResponse.ErrorCode error = 1;</code>
       */
      public Builder setError(com.pancast.dongle.gaen.Covidshield.KeyClaimResponse.ErrorCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        error_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.pancast.dongle.gaen.KeyClaimResponse.ErrorCode error = 1;</code>
       */
      public Builder clearError() {
        bitField0_ = (bitField0_ & ~0x00000001);
        error_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString serverPublicKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * 32 bytes
       * </pre>
       *
       * <code>optional bytes server_public_key = 2;</code>
       */
      public boolean hasServerPublicKey() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * 32 bytes
       * </pre>
       *
       * <code>optional bytes server_public_key = 2;</code>
       */
      public com.google.protobuf.ByteString getServerPublicKey() {
        return serverPublicKey_;
      }
      /**
       * <pre>
       * 32 bytes
       * </pre>
       *
       * <code>optional bytes server_public_key = 2;</code>
       */
      public Builder setServerPublicKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        serverPublicKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 32 bytes
       * </pre>
       *
       * <code>optional bytes server_public_key = 2;</code>
       */
      public Builder clearServerPublicKey() {
        bitField0_ = (bitField0_ & ~0x00000002);
        serverPublicKey_ = getDefaultInstance().getServerPublicKey();
        onChanged();
        return this;
      }

      private int triesRemaining_ ;
      /**
       * <code>optional uint32 tries_remaining = 3;</code>
       */
      public boolean hasTriesRemaining() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 tries_remaining = 3;</code>
       */
      public int getTriesRemaining() {
        return triesRemaining_;
      }
      /**
       * <code>optional uint32 tries_remaining = 3;</code>
       */
      public Builder setTriesRemaining(int value) {
        bitField0_ |= 0x00000004;
        triesRemaining_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tries_remaining = 3;</code>
       */
      public Builder clearTriesRemaining() {
        bitField0_ = (bitField0_ & ~0x00000004);
        triesRemaining_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Duration remainingBanDuration_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> remainingBanDurationBuilder_;
      /**
       * <code>optional .google.protobuf.Duration remaining_ban_duration = 4;</code>
       */
      public boolean hasRemainingBanDuration() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .google.protobuf.Duration remaining_ban_duration = 4;</code>
       */
      public com.google.protobuf.Duration getRemainingBanDuration() {
        if (remainingBanDurationBuilder_ == null) {
          return remainingBanDuration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : remainingBanDuration_;
        } else {
          return remainingBanDurationBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .google.protobuf.Duration remaining_ban_duration = 4;</code>
       */
      public Builder setRemainingBanDuration(com.google.protobuf.Duration value) {
        if (remainingBanDurationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          remainingBanDuration_ = value;
          onChanged();
        } else {
          remainingBanDurationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .google.protobuf.Duration remaining_ban_duration = 4;</code>
       */
      public Builder setRemainingBanDuration(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (remainingBanDurationBuilder_ == null) {
          remainingBanDuration_ = builderForValue.build();
          onChanged();
        } else {
          remainingBanDurationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .google.protobuf.Duration remaining_ban_duration = 4;</code>
       */
      public Builder mergeRemainingBanDuration(com.google.protobuf.Duration value) {
        if (remainingBanDurationBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              remainingBanDuration_ != null &&
              remainingBanDuration_ != com.google.protobuf.Duration.getDefaultInstance()) {
            remainingBanDuration_ =
              com.google.protobuf.Duration.newBuilder(remainingBanDuration_).mergeFrom(value).buildPartial();
          } else {
            remainingBanDuration_ = value;
          }
          onChanged();
        } else {
          remainingBanDurationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .google.protobuf.Duration remaining_ban_duration = 4;</code>
       */
      public Builder clearRemainingBanDuration() {
        if (remainingBanDurationBuilder_ == null) {
          remainingBanDuration_ = null;
          onChanged();
        } else {
          remainingBanDurationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .google.protobuf.Duration remaining_ban_duration = 4;</code>
       */
      public com.google.protobuf.Duration.Builder getRemainingBanDurationBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getRemainingBanDurationFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .google.protobuf.Duration remaining_ban_duration = 4;</code>
       */
      public com.google.protobuf.DurationOrBuilder getRemainingBanDurationOrBuilder() {
        if (remainingBanDurationBuilder_ != null) {
          return remainingBanDurationBuilder_.getMessageOrBuilder();
        } else {
          return remainingBanDuration_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : remainingBanDuration_;
        }
      }
      /**
       * <code>optional .google.protobuf.Duration remaining_ban_duration = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getRemainingBanDurationFieldBuilder() {
        if (remainingBanDurationBuilder_ == null) {
          remainingBanDurationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getRemainingBanDuration(),
                  getParentForChildren(),
                  isClean());
          remainingBanDuration_ = null;
        }
        return remainingBanDurationBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.pancast.dongle.gaen.KeyClaimResponse)
    }

    // @@protoc_insertion_point(class_scope:com.pancast.dongle.gaen.KeyClaimResponse)
    private static final com.pancast.dongle.gaen.Covidshield.KeyClaimResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.pancast.dongle.gaen.Covidshield.KeyClaimResponse();
    }

    public static com.pancast.dongle.gaen.Covidshield.KeyClaimResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<KeyClaimResponse>
        PARSER = new com.google.protobuf.AbstractParser<KeyClaimResponse>() {
      @java.lang.Override
      public KeyClaimResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new KeyClaimResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<KeyClaimResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<KeyClaimResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.pancast.dongle.gaen.Covidshield.KeyClaimResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EncryptedUploadRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.pancast.dongle.gaen.EncryptedUploadRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * server_public_key is provided by the Diagnosis Server to the App, and is
     * used to encrypt the payload. This key should be stored locally for 14
     * days, and used to submit the follow-up Diagnosis Key.
     * </pre>
     *
     * <code>optional bytes server_public_key = 1;</code>
     */
    boolean hasServerPublicKey();
    /**
     * <pre>
     * server_public_key is provided by the Diagnosis Server to the App, and is
     * used to encrypt the payload. This key should be stored locally for 14
     * days, and used to submit the follow-up Diagnosis Key.
     * </pre>
     *
     * <code>optional bytes server_public_key = 1;</code>
     */
    com.google.protobuf.ByteString getServerPublicKey();

    /**
     * <pre>
     * app_public_key is the public side of a keypair generated once by the
     * application and linked to the server_public_key. These are linked in the
     * Diagnosis Server, so that only one app_public_key is authorized to upload
     * for a given server_public_key. If a new server_public_key is issued to an App
     * (e.g. months later), a new app_public_key should be generated.
     * </pre>
     *
     * <code>optional bytes app_public_key = 2;</code>
     */
    boolean hasAppPublicKey();
    /**
     * <pre>
     * app_public_key is the public side of a keypair generated once by the
     * application and linked to the server_public_key. These are linked in the
     * Diagnosis Server, so that only one app_public_key is authorized to upload
     * for a given server_public_key. If a new server_public_key is issued to an App
     * (e.g. months later), a new app_public_key should be generated.
     * </pre>
     *
     * <code>optional bytes app_public_key = 2;</code>
     */
    com.google.protobuf.ByteString getAppPublicKey();

    /**
     * <pre>
     * nonce must be 24 random bytes, and absolutely must NOT be re-used between
     * subsequent submissions of Diagnosis Keys. This nonce is passed to the
     * encryption library to generate the ciphertext.
     * </pre>
     *
     * <code>optional bytes nonce = 3;</code>
     */
    boolean hasNonce();
    /**
     * <pre>
     * nonce must be 24 random bytes, and absolutely must NOT be re-used between
     * subsequent submissions of Diagnosis Keys. This nonce is passed to the
     * encryption library to generate the ciphertext.
     * </pre>
     *
     * <code>optional bytes nonce = 3;</code>
     */
    com.google.protobuf.ByteString getNonce();

    /**
     * <pre>
     * payload is the result of encoding/marshalling, and then encrypting, an
     * `Upload` message. It is done this way rather than as an embedded message
     * field, because we need to encrypt a byte stream, not an object.
     * </pre>
     *
     * <code>optional bytes payload = 4;</code>
     */
    boolean hasPayload();
    /**
     * <pre>
     * payload is the result of encoding/marshalling, and then encrypting, an
     * `Upload` message. It is done this way rather than as an embedded message
     * field, because we need to encrypt a byte stream, not an object.
     * </pre>
     *
     * <code>optional bytes payload = 4;</code>
     */
    com.google.protobuf.ByteString getPayload();
  }
  /**
   * <pre>
   * We are using a NaCl Box (Curve25519+XSalsa20+Poly1305) to encrypt and
   * authorize messages.
   *
   * Note that we are not *explicitly* signing the payload: NaCl Box provides
   * non-repudiability for the receiving party.  The receiving party (and only
   * the receiving party) could forge the sender's signature on this message, but
   * we there's no need or possibility for third-party verification in this
   * scheme.
   *
   * See "Security Model" at https://nacl.cr.yp.to/box.html
   * </pre>
   *
   * Protobuf type {@code com.pancast.dongle.gaen.EncryptedUploadRequest}
   */
  public  static final class EncryptedUploadRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.pancast.dongle.gaen.EncryptedUploadRequest)
      EncryptedUploadRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EncryptedUploadRequest.newBuilder() to construct.
    private EncryptedUploadRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EncryptedUploadRequest() {
      serverPublicKey_ = com.google.protobuf.ByteString.EMPTY;
      appPublicKey_ = com.google.protobuf.ByteString.EMPTY;
      nonce_ = com.google.protobuf.ByteString.EMPTY;
      payload_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EncryptedUploadRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              bitField0_ |= 0x00000001;
              serverPublicKey_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              appPublicKey_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              nonce_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              payload_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_EncryptedUploadRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_EncryptedUploadRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest.class, com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest.Builder.class);
    }

    private int bitField0_;
    public static final int SERVER_PUBLIC_KEY_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString serverPublicKey_;
    /**
     * <pre>
     * server_public_key is provided by the Diagnosis Server to the App, and is
     * used to encrypt the payload. This key should be stored locally for 14
     * days, and used to submit the follow-up Diagnosis Key.
     * </pre>
     *
     * <code>optional bytes server_public_key = 1;</code>
     */
    public boolean hasServerPublicKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * server_public_key is provided by the Diagnosis Server to the App, and is
     * used to encrypt the payload. This key should be stored locally for 14
     * days, and used to submit the follow-up Diagnosis Key.
     * </pre>
     *
     * <code>optional bytes server_public_key = 1;</code>
     */
    public com.google.protobuf.ByteString getServerPublicKey() {
      return serverPublicKey_;
    }

    public static final int APP_PUBLIC_KEY_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString appPublicKey_;
    /**
     * <pre>
     * app_public_key is the public side of a keypair generated once by the
     * application and linked to the server_public_key. These are linked in the
     * Diagnosis Server, so that only one app_public_key is authorized to upload
     * for a given server_public_key. If a new server_public_key is issued to an App
     * (e.g. months later), a new app_public_key should be generated.
     * </pre>
     *
     * <code>optional bytes app_public_key = 2;</code>
     */
    public boolean hasAppPublicKey() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * app_public_key is the public side of a keypair generated once by the
     * application and linked to the server_public_key. These are linked in the
     * Diagnosis Server, so that only one app_public_key is authorized to upload
     * for a given server_public_key. If a new server_public_key is issued to an App
     * (e.g. months later), a new app_public_key should be generated.
     * </pre>
     *
     * <code>optional bytes app_public_key = 2;</code>
     */
    public com.google.protobuf.ByteString getAppPublicKey() {
      return appPublicKey_;
    }

    public static final int NONCE_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString nonce_;
    /**
     * <pre>
     * nonce must be 24 random bytes, and absolutely must NOT be re-used between
     * subsequent submissions of Diagnosis Keys. This nonce is passed to the
     * encryption library to generate the ciphertext.
     * </pre>
     *
     * <code>optional bytes nonce = 3;</code>
     */
    public boolean hasNonce() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * nonce must be 24 random bytes, and absolutely must NOT be re-used between
     * subsequent submissions of Diagnosis Keys. This nonce is passed to the
     * encryption library to generate the ciphertext.
     * </pre>
     *
     * <code>optional bytes nonce = 3;</code>
     */
    public com.google.protobuf.ByteString getNonce() {
      return nonce_;
    }

    public static final int PAYLOAD_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString payload_;
    /**
     * <pre>
     * payload is the result of encoding/marshalling, and then encrypting, an
     * `Upload` message. It is done this way rather than as an embedded message
     * field, because we need to encrypt a byte stream, not an object.
     * </pre>
     *
     * <code>optional bytes payload = 4;</code>
     */
    public boolean hasPayload() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * payload is the result of encoding/marshalling, and then encrypting, an
     * `Upload` message. It is done this way rather than as an embedded message
     * field, because we need to encrypt a byte stream, not an object.
     * </pre>
     *
     * <code>optional bytes payload = 4;</code>
     */
    public com.google.protobuf.ByteString getPayload() {
      return payload_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, serverPublicKey_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, appPublicKey_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, nonce_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, payload_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, serverPublicKey_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, appPublicKey_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, nonce_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, payload_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest)) {
        return super.equals(obj);
      }
      com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest other = (com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest) obj;

      boolean result = true;
      result = result && (hasServerPublicKey() == other.hasServerPublicKey());
      if (hasServerPublicKey()) {
        result = result && getServerPublicKey()
            .equals(other.getServerPublicKey());
      }
      result = result && (hasAppPublicKey() == other.hasAppPublicKey());
      if (hasAppPublicKey()) {
        result = result && getAppPublicKey()
            .equals(other.getAppPublicKey());
      }
      result = result && (hasNonce() == other.hasNonce());
      if (hasNonce()) {
        result = result && getNonce()
            .equals(other.getNonce());
      }
      result = result && (hasPayload() == other.hasPayload());
      if (hasPayload()) {
        result = result && getPayload()
            .equals(other.getPayload());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasServerPublicKey()) {
        hash = (37 * hash) + SERVER_PUBLIC_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getServerPublicKey().hashCode();
      }
      if (hasAppPublicKey()) {
        hash = (37 * hash) + APP_PUBLIC_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getAppPublicKey().hashCode();
      }
      if (hasNonce()) {
        hash = (37 * hash) + NONCE_FIELD_NUMBER;
        hash = (53 * hash) + getNonce().hashCode();
      }
      if (hasPayload()) {
        hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
        hash = (53 * hash) + getPayload().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * We are using a NaCl Box (Curve25519+XSalsa20+Poly1305) to encrypt and
     * authorize messages.
     *
     * Note that we are not *explicitly* signing the payload: NaCl Box provides
     * non-repudiability for the receiving party.  The receiving party (and only
     * the receiving party) could forge the sender's signature on this message, but
     * we there's no need or possibility for third-party verification in this
     * scheme.
     *
     * See "Security Model" at https://nacl.cr.yp.to/box.html
     * </pre>
     *
     * Protobuf type {@code com.pancast.dongle.gaen.EncryptedUploadRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.pancast.dongle.gaen.EncryptedUploadRequest)
        com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_EncryptedUploadRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_EncryptedUploadRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest.class, com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest.Builder.class);
      }

      // Construct using com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        serverPublicKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        appPublicKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        nonce_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        payload_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_EncryptedUploadRequest_descriptor;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest getDefaultInstanceForType() {
        return com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest build() {
        com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest buildPartial() {
        com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest result = new com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.serverPublicKey_ = serverPublicKey_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.appPublicKey_ = appPublicKey_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.nonce_ = nonce_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.payload_ = payload_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest) {
          return mergeFrom((com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest other) {
        if (other == com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest.getDefaultInstance()) return this;
        if (other.hasServerPublicKey()) {
          setServerPublicKey(other.getServerPublicKey());
        }
        if (other.hasAppPublicKey()) {
          setAppPublicKey(other.getAppPublicKey());
        }
        if (other.hasNonce()) {
          setNonce(other.getNonce());
        }
        if (other.hasPayload()) {
          setPayload(other.getPayload());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString serverPublicKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * server_public_key is provided by the Diagnosis Server to the App, and is
       * used to encrypt the payload. This key should be stored locally for 14
       * days, and used to submit the follow-up Diagnosis Key.
       * </pre>
       *
       * <code>optional bytes server_public_key = 1;</code>
       */
      public boolean hasServerPublicKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * server_public_key is provided by the Diagnosis Server to the App, and is
       * used to encrypt the payload. This key should be stored locally for 14
       * days, and used to submit the follow-up Diagnosis Key.
       * </pre>
       *
       * <code>optional bytes server_public_key = 1;</code>
       */
      public com.google.protobuf.ByteString getServerPublicKey() {
        return serverPublicKey_;
      }
      /**
       * <pre>
       * server_public_key is provided by the Diagnosis Server to the App, and is
       * used to encrypt the payload. This key should be stored locally for 14
       * days, and used to submit the follow-up Diagnosis Key.
       * </pre>
       *
       * <code>optional bytes server_public_key = 1;</code>
       */
      public Builder setServerPublicKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        serverPublicKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * server_public_key is provided by the Diagnosis Server to the App, and is
       * used to encrypt the payload. This key should be stored locally for 14
       * days, and used to submit the follow-up Diagnosis Key.
       * </pre>
       *
       * <code>optional bytes server_public_key = 1;</code>
       */
      public Builder clearServerPublicKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        serverPublicKey_ = getDefaultInstance().getServerPublicKey();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString appPublicKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * app_public_key is the public side of a keypair generated once by the
       * application and linked to the server_public_key. These are linked in the
       * Diagnosis Server, so that only one app_public_key is authorized to upload
       * for a given server_public_key. If a new server_public_key is issued to an App
       * (e.g. months later), a new app_public_key should be generated.
       * </pre>
       *
       * <code>optional bytes app_public_key = 2;</code>
       */
      public boolean hasAppPublicKey() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * app_public_key is the public side of a keypair generated once by the
       * application and linked to the server_public_key. These are linked in the
       * Diagnosis Server, so that only one app_public_key is authorized to upload
       * for a given server_public_key. If a new server_public_key is issued to an App
       * (e.g. months later), a new app_public_key should be generated.
       * </pre>
       *
       * <code>optional bytes app_public_key = 2;</code>
       */
      public com.google.protobuf.ByteString getAppPublicKey() {
        return appPublicKey_;
      }
      /**
       * <pre>
       * app_public_key is the public side of a keypair generated once by the
       * application and linked to the server_public_key. These are linked in the
       * Diagnosis Server, so that only one app_public_key is authorized to upload
       * for a given server_public_key. If a new server_public_key is issued to an App
       * (e.g. months later), a new app_public_key should be generated.
       * </pre>
       *
       * <code>optional bytes app_public_key = 2;</code>
       */
      public Builder setAppPublicKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        appPublicKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * app_public_key is the public side of a keypair generated once by the
       * application and linked to the server_public_key. These are linked in the
       * Diagnosis Server, so that only one app_public_key is authorized to upload
       * for a given server_public_key. If a new server_public_key is issued to an App
       * (e.g. months later), a new app_public_key should be generated.
       * </pre>
       *
       * <code>optional bytes app_public_key = 2;</code>
       */
      public Builder clearAppPublicKey() {
        bitField0_ = (bitField0_ & ~0x00000002);
        appPublicKey_ = getDefaultInstance().getAppPublicKey();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString nonce_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * nonce must be 24 random bytes, and absolutely must NOT be re-used between
       * subsequent submissions of Diagnosis Keys. This nonce is passed to the
       * encryption library to generate the ciphertext.
       * </pre>
       *
       * <code>optional bytes nonce = 3;</code>
       */
      public boolean hasNonce() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * nonce must be 24 random bytes, and absolutely must NOT be re-used between
       * subsequent submissions of Diagnosis Keys. This nonce is passed to the
       * encryption library to generate the ciphertext.
       * </pre>
       *
       * <code>optional bytes nonce = 3;</code>
       */
      public com.google.protobuf.ByteString getNonce() {
        return nonce_;
      }
      /**
       * <pre>
       * nonce must be 24 random bytes, and absolutely must NOT be re-used between
       * subsequent submissions of Diagnosis Keys. This nonce is passed to the
       * encryption library to generate the ciphertext.
       * </pre>
       *
       * <code>optional bytes nonce = 3;</code>
       */
      public Builder setNonce(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        nonce_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * nonce must be 24 random bytes, and absolutely must NOT be re-used between
       * subsequent submissions of Diagnosis Keys. This nonce is passed to the
       * encryption library to generate the ciphertext.
       * </pre>
       *
       * <code>optional bytes nonce = 3;</code>
       */
      public Builder clearNonce() {
        bitField0_ = (bitField0_ & ~0x00000004);
        nonce_ = getDefaultInstance().getNonce();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * payload is the result of encoding/marshalling, and then encrypting, an
       * `Upload` message. It is done this way rather than as an embedded message
       * field, because we need to encrypt a byte stream, not an object.
       * </pre>
       *
       * <code>optional bytes payload = 4;</code>
       */
      public boolean hasPayload() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * payload is the result of encoding/marshalling, and then encrypting, an
       * `Upload` message. It is done this way rather than as an embedded message
       * field, because we need to encrypt a byte stream, not an object.
       * </pre>
       *
       * <code>optional bytes payload = 4;</code>
       */
      public com.google.protobuf.ByteString getPayload() {
        return payload_;
      }
      /**
       * <pre>
       * payload is the result of encoding/marshalling, and then encrypting, an
       * `Upload` message. It is done this way rather than as an embedded message
       * field, because we need to encrypt a byte stream, not an object.
       * </pre>
       *
       * <code>optional bytes payload = 4;</code>
       */
      public Builder setPayload(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * payload is the result of encoding/marshalling, and then encrypting, an
       * `Upload` message. It is done this way rather than as an embedded message
       * field, because we need to encrypt a byte stream, not an object.
       * </pre>
       *
       * <code>optional bytes payload = 4;</code>
       */
      public Builder clearPayload() {
        bitField0_ = (bitField0_ & ~0x00000008);
        payload_ = getDefaultInstance().getPayload();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.pancast.dongle.gaen.EncryptedUploadRequest)
    }

    // @@protoc_insertion_point(class_scope:com.pancast.dongle.gaen.EncryptedUploadRequest)
    private static final com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest();
    }

    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<EncryptedUploadRequest>
        PARSER = new com.google.protobuf.AbstractParser<EncryptedUploadRequest>() {
      @java.lang.Override
      public EncryptedUploadRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EncryptedUploadRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EncryptedUploadRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EncryptedUploadRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.pancast.dongle.gaen.Covidshield.EncryptedUploadRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EncryptedUploadResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.pancast.dongle.gaen.EncryptedUploadResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .com.pancast.dongle.gaen.EncryptedUploadResponse.ErrorCode error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .com.pancast.dongle.gaen.EncryptedUploadResponse.ErrorCode error = 1;</code>
     */
    com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse.ErrorCode getError();
  }
  /**
   * <pre>
   * EncryptedUploadResponse is received from the server in response to a
   * EncryptedUploadRequest. If the request was successful, error will be NONE.
   * </pre>
   *
   * Protobuf type {@code com.pancast.dongle.gaen.EncryptedUploadResponse}
   */
  public  static final class EncryptedUploadResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.pancast.dongle.gaen.EncryptedUploadResponse)
      EncryptedUploadResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EncryptedUploadResponse.newBuilder() to construct.
    private EncryptedUploadResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EncryptedUploadResponse() {
      error_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EncryptedUploadResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse.ErrorCode value = com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse.ErrorCode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                error_ = rawValue;
              }
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_EncryptedUploadResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_EncryptedUploadResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse.class, com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code com.pancast.dongle.gaen.EncryptedUploadResponse.ErrorCode}
     */
    public enum ErrorCode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NONE = 0;</code>
       */
      NONE(0),
      /**
       * <code>UNKNOWN = 1;</code>
       */
      UNKNOWN(1),
      /**
       * <code>INVALID_KEYPAIR = 2;</code>
       */
      INVALID_KEYPAIR(2),
      /**
       * <code>DECRYPTION_FAILED = 3;</code>
       */
      DECRYPTION_FAILED(3),
      /**
       * <code>INVALID_PAYLOAD = 4;</code>
       */
      INVALID_PAYLOAD(4),
      /**
       * <code>SERVER_ERROR = 5;</code>
       */
      SERVER_ERROR(5),
      /**
       * <code>INVALID_CRYPTO_PARAMETERS = 6;</code>
       */
      INVALID_CRYPTO_PARAMETERS(6),
      /**
       * <code>TOO_MANY_KEYS = 7;</code>
       */
      TOO_MANY_KEYS(7),
      /**
       * <pre>
       * The timestamp in the Upload message must be no more than one hour old,
       * otherwise this error is generated.
       * </pre>
       *
       * <code>INVALID_TIMESTAMP = 8;</code>
       */
      INVALID_TIMESTAMP(8),
      /**
       * <code>INVALID_ROLLING_PERIOD = 10;</code>
       */
      INVALID_ROLLING_PERIOD(10),
      /**
       * <code>INVALID_KEY_DATA = 11;</code>
       */
      INVALID_KEY_DATA(11),
      /**
       * <code>INVALID_ROLLING_START_INTERVAL_NUMBER = 12;</code>
       */
      INVALID_ROLLING_START_INTERVAL_NUMBER(12),
      /**
       * <code>INVALID_TRANSMISSION_RISK_LEVEL = 13;</code>
       */
      INVALID_TRANSMISSION_RISK_LEVEL(13),
      /**
       * <code>NO_KEYS_IN_PAYLOAD = 14;</code>
       */
      NO_KEYS_IN_PAYLOAD(14),
      ;

      /**
       * <code>NONE = 0;</code>
       */
      public static final int NONE_VALUE = 0;
      /**
       * <code>UNKNOWN = 1;</code>
       */
      public static final int UNKNOWN_VALUE = 1;
      /**
       * <code>INVALID_KEYPAIR = 2;</code>
       */
      public static final int INVALID_KEYPAIR_VALUE = 2;
      /**
       * <code>DECRYPTION_FAILED = 3;</code>
       */
      public static final int DECRYPTION_FAILED_VALUE = 3;
      /**
       * <code>INVALID_PAYLOAD = 4;</code>
       */
      public static final int INVALID_PAYLOAD_VALUE = 4;
      /**
       * <code>SERVER_ERROR = 5;</code>
       */
      public static final int SERVER_ERROR_VALUE = 5;
      /**
       * <code>INVALID_CRYPTO_PARAMETERS = 6;</code>
       */
      public static final int INVALID_CRYPTO_PARAMETERS_VALUE = 6;
      /**
       * <code>TOO_MANY_KEYS = 7;</code>
       */
      public static final int TOO_MANY_KEYS_VALUE = 7;
      /**
       * <pre>
       * The timestamp in the Upload message must be no more than one hour old,
       * otherwise this error is generated.
       * </pre>
       *
       * <code>INVALID_TIMESTAMP = 8;</code>
       */
      public static final int INVALID_TIMESTAMP_VALUE = 8;
      /**
       * <code>INVALID_ROLLING_PERIOD = 10;</code>
       */
      public static final int INVALID_ROLLING_PERIOD_VALUE = 10;
      /**
       * <code>INVALID_KEY_DATA = 11;</code>
       */
      public static final int INVALID_KEY_DATA_VALUE = 11;
      /**
       * <code>INVALID_ROLLING_START_INTERVAL_NUMBER = 12;</code>
       */
      public static final int INVALID_ROLLING_START_INTERVAL_NUMBER_VALUE = 12;
      /**
       * <code>INVALID_TRANSMISSION_RISK_LEVEL = 13;</code>
       */
      public static final int INVALID_TRANSMISSION_RISK_LEVEL_VALUE = 13;
      /**
       * <code>NO_KEYS_IN_PAYLOAD = 14;</code>
       */
      public static final int NO_KEYS_IN_PAYLOAD_VALUE = 14;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ErrorCode valueOf(int value) {
        return forNumber(value);
      }

      public static ErrorCode forNumber(int value) {
        switch (value) {
          case 0: return NONE;
          case 1: return UNKNOWN;
          case 2: return INVALID_KEYPAIR;
          case 3: return DECRYPTION_FAILED;
          case 4: return INVALID_PAYLOAD;
          case 5: return SERVER_ERROR;
          case 6: return INVALID_CRYPTO_PARAMETERS;
          case 7: return TOO_MANY_KEYS;
          case 8: return INVALID_TIMESTAMP;
          case 10: return INVALID_ROLLING_PERIOD;
          case 11: return INVALID_KEY_DATA;
          case 12: return INVALID_ROLLING_START_INTERVAL_NUMBER;
          case 13: return INVALID_TRANSMISSION_RISK_LEVEL;
          case 14: return NO_KEYS_IN_PAYLOAD;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ErrorCode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ErrorCode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ErrorCode>() {
              public ErrorCode findValueByNumber(int number) {
                return ErrorCode.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final ErrorCode[] VALUES = values();

      public static ErrorCode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ErrorCode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.pancast.dongle.gaen.EncryptedUploadResponse.ErrorCode)
    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private int error_;
    /**
     * <code>optional .com.pancast.dongle.gaen.EncryptedUploadResponse.ErrorCode error = 1;</code>
     */
    public boolean hasError() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .com.pancast.dongle.gaen.EncryptedUploadResponse.ErrorCode error = 1;</code>
     */
    public com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse.ErrorCode getError() {
      @SuppressWarnings("deprecation")
      com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse.ErrorCode result = com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse.ErrorCode.valueOf(error_);
      return result == null ? com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse.ErrorCode.NONE : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, error_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, error_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse)) {
        return super.equals(obj);
      }
      com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse other = (com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse) obj;

      boolean result = true;
      result = result && (hasError() == other.hasError());
      if (hasError()) {
        result = result && error_ == other.error_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasError()) {
        hash = (37 * hash) + ERROR_FIELD_NUMBER;
        hash = (53 * hash) + error_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * EncryptedUploadResponse is received from the server in response to a
     * EncryptedUploadRequest. If the request was successful, error will be NONE.
     * </pre>
     *
     * Protobuf type {@code com.pancast.dongle.gaen.EncryptedUploadResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.pancast.dongle.gaen.EncryptedUploadResponse)
        com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_EncryptedUploadResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_EncryptedUploadResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse.class, com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse.Builder.class);
      }

      // Construct using com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        error_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_EncryptedUploadResponse_descriptor;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse getDefaultInstanceForType() {
        return com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse build() {
        com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse buildPartial() {
        com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse result = new com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.error_ = error_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse) {
          return mergeFrom((com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse other) {
        if (other == com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse.getDefaultInstance()) return this;
        if (other.hasError()) {
          setError(other.getError());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int error_ = 0;
      /**
       * <code>optional .com.pancast.dongle.gaen.EncryptedUploadResponse.ErrorCode error = 1;</code>
       */
      public boolean hasError() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .com.pancast.dongle.gaen.EncryptedUploadResponse.ErrorCode error = 1;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse.ErrorCode getError() {
        @SuppressWarnings("deprecation")
        com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse.ErrorCode result = com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse.ErrorCode.valueOf(error_);
        return result == null ? com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse.ErrorCode.NONE : result;
      }
      /**
       * <code>optional .com.pancast.dongle.gaen.EncryptedUploadResponse.ErrorCode error = 1;</code>
       */
      public Builder setError(com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse.ErrorCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        error_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.pancast.dongle.gaen.EncryptedUploadResponse.ErrorCode error = 1;</code>
       */
      public Builder clearError() {
        bitField0_ = (bitField0_ & ~0x00000001);
        error_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.pancast.dongle.gaen.EncryptedUploadResponse)
    }

    // @@protoc_insertion_point(class_scope:com.pancast.dongle.gaen.EncryptedUploadResponse)
    private static final com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse();
    }

    public static com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<EncryptedUploadResponse>
        PARSER = new com.google.protobuf.AbstractParser<EncryptedUploadResponse>() {
      @java.lang.Override
      public EncryptedUploadResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EncryptedUploadResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EncryptedUploadResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EncryptedUploadResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.pancast.dongle.gaen.Covidshield.EncryptedUploadResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OutbreakEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.pancast.dongle.gaen.OutbreakEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * location ID references the ID in the portal
     * </pre>
     *
     * <code>optional string location_id = 1;</code>
     */
    boolean hasLocationId();
    /**
     * <pre>
     * location ID references the ID in the portal
     * </pre>
     *
     * <code>optional string location_id = 1;</code>
     */
    java.lang.String getLocationId();
    /**
     * <pre>
     * location ID references the ID in the portal
     * </pre>
     *
     * <code>optional string location_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getLocationIdBytes();

    /**
     * <code>optional .google.protobuf.Timestamp start_time = 2;</code>
     */
    boolean hasStartTime();
    /**
     * <code>optional .google.protobuf.Timestamp start_time = 2;</code>
     */
    com.google.protobuf.Timestamp getStartTime();
    /**
     * <code>optional .google.protobuf.Timestamp start_time = 2;</code>
     */
    com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder();

    /**
     * <code>optional .google.protobuf.Timestamp end_time = 3;</code>
     */
    boolean hasEndTime();
    /**
     * <code>optional .google.protobuf.Timestamp end_time = 3;</code>
     */
    com.google.protobuf.Timestamp getEndTime();
    /**
     * <code>optional .google.protobuf.Timestamp end_time = 3;</code>
     */
    com.google.protobuf.TimestampOrBuilder getEndTimeOrBuilder();

    /**
     * <code>optional uint32 severity = 4;</code>
     */
    boolean hasSeverity();
    /**
     * <code>optional uint32 severity = 4;</code>
     */
    int getSeverity();
  }
  /**
   * Protobuf type {@code com.pancast.dongle.gaen.OutbreakEvent}
   */
  public  static final class OutbreakEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.pancast.dongle.gaen.OutbreakEvent)
      OutbreakEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OutbreakEvent.newBuilder() to construct.
    private OutbreakEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OutbreakEvent() {
      locationId_ = "";
      severity_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OutbreakEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              locationId_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = startTime_.toBuilder();
              }
              startTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(startTime_);
                startTime_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = endTime_.toBuilder();
              }
              endTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(endTime_);
                endTime_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              severity_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_OutbreakEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_OutbreakEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pancast.dongle.gaen.Covidshield.OutbreakEvent.class, com.pancast.dongle.gaen.Covidshield.OutbreakEvent.Builder.class);
    }

    private int bitField0_;
    public static final int LOCATION_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object locationId_;
    /**
     * <pre>
     * location ID references the ID in the portal
     * </pre>
     *
     * <code>optional string location_id = 1;</code>
     */
    public boolean hasLocationId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * location ID references the ID in the portal
     * </pre>
     *
     * <code>optional string location_id = 1;</code>
     */
    public java.lang.String getLocationId() {
      java.lang.Object ref = locationId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          locationId_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * location ID references the ID in the portal
     * </pre>
     *
     * <code>optional string location_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getLocationIdBytes() {
      java.lang.Object ref = locationId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        locationId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int START_TIME_FIELD_NUMBER = 2;
    private com.google.protobuf.Timestamp startTime_;
    /**
     * <code>optional .google.protobuf.Timestamp start_time = 2;</code>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .google.protobuf.Timestamp start_time = 2;</code>
     */
    public com.google.protobuf.Timestamp getStartTime() {
      return startTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
    }
    /**
     * <code>optional .google.protobuf.Timestamp start_time = 2;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder() {
      return startTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
    }

    public static final int END_TIME_FIELD_NUMBER = 3;
    private com.google.protobuf.Timestamp endTime_;
    /**
     * <code>optional .google.protobuf.Timestamp end_time = 3;</code>
     */
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .google.protobuf.Timestamp end_time = 3;</code>
     */
    public com.google.protobuf.Timestamp getEndTime() {
      return endTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endTime_;
    }
    /**
     * <code>optional .google.protobuf.Timestamp end_time = 3;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getEndTimeOrBuilder() {
      return endTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endTime_;
    }

    public static final int SEVERITY_FIELD_NUMBER = 4;
    private int severity_;
    /**
     * <code>optional uint32 severity = 4;</code>
     */
    public boolean hasSeverity() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 severity = 4;</code>
     */
    public int getSeverity() {
      return severity_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, locationId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getStartTime());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getEndTime());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, severity_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, locationId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getStartTime());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getEndTime());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, severity_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.pancast.dongle.gaen.Covidshield.OutbreakEvent)) {
        return super.equals(obj);
      }
      com.pancast.dongle.gaen.Covidshield.OutbreakEvent other = (com.pancast.dongle.gaen.Covidshield.OutbreakEvent) obj;

      boolean result = true;
      result = result && (hasLocationId() == other.hasLocationId());
      if (hasLocationId()) {
        result = result && getLocationId()
            .equals(other.getLocationId());
      }
      result = result && (hasStartTime() == other.hasStartTime());
      if (hasStartTime()) {
        result = result && getStartTime()
            .equals(other.getStartTime());
      }
      result = result && (hasEndTime() == other.hasEndTime());
      if (hasEndTime()) {
        result = result && getEndTime()
            .equals(other.getEndTime());
      }
      result = result && (hasSeverity() == other.hasSeverity());
      if (hasSeverity()) {
        result = result && (getSeverity()
            == other.getSeverity());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLocationId()) {
        hash = (37 * hash) + LOCATION_ID_FIELD_NUMBER;
        hash = (53 * hash) + getLocationId().hashCode();
      }
      if (hasStartTime()) {
        hash = (37 * hash) + START_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getStartTime().hashCode();
      }
      if (hasEndTime()) {
        hash = (37 * hash) + END_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getEndTime().hashCode();
      }
      if (hasSeverity()) {
        hash = (37 * hash) + SEVERITY_FIELD_NUMBER;
        hash = (53 * hash) + getSeverity();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.pancast.dongle.gaen.Covidshield.OutbreakEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.pancast.dongle.gaen.Covidshield.OutbreakEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.pancast.dongle.gaen.OutbreakEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.pancast.dongle.gaen.OutbreakEvent)
        com.pancast.dongle.gaen.Covidshield.OutbreakEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_OutbreakEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_OutbreakEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.pancast.dongle.gaen.Covidshield.OutbreakEvent.class, com.pancast.dongle.gaen.Covidshield.OutbreakEvent.Builder.class);
      }

      // Construct using com.pancast.dongle.gaen.Covidshield.OutbreakEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getStartTimeFieldBuilder();
          getEndTimeFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        locationId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (startTimeBuilder_ == null) {
          startTime_ = null;
        } else {
          startTimeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (endTimeBuilder_ == null) {
          endTime_ = null;
        } else {
          endTimeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        severity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_OutbreakEvent_descriptor;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.OutbreakEvent getDefaultInstanceForType() {
        return com.pancast.dongle.gaen.Covidshield.OutbreakEvent.getDefaultInstance();
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.OutbreakEvent build() {
        com.pancast.dongle.gaen.Covidshield.OutbreakEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.OutbreakEvent buildPartial() {
        com.pancast.dongle.gaen.Covidshield.OutbreakEvent result = new com.pancast.dongle.gaen.Covidshield.OutbreakEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.locationId_ = locationId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (startTimeBuilder_ == null) {
          result.startTime_ = startTime_;
        } else {
          result.startTime_ = startTimeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (endTimeBuilder_ == null) {
          result.endTime_ = endTime_;
        } else {
          result.endTime_ = endTimeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.severity_ = severity_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pancast.dongle.gaen.Covidshield.OutbreakEvent) {
          return mergeFrom((com.pancast.dongle.gaen.Covidshield.OutbreakEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.pancast.dongle.gaen.Covidshield.OutbreakEvent other) {
        if (other == com.pancast.dongle.gaen.Covidshield.OutbreakEvent.getDefaultInstance()) return this;
        if (other.hasLocationId()) {
          bitField0_ |= 0x00000001;
          locationId_ = other.locationId_;
          onChanged();
        }
        if (other.hasStartTime()) {
          mergeStartTime(other.getStartTime());
        }
        if (other.hasEndTime()) {
          mergeEndTime(other.getEndTime());
        }
        if (other.hasSeverity()) {
          setSeverity(other.getSeverity());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.pancast.dongle.gaen.Covidshield.OutbreakEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.pancast.dongle.gaen.Covidshield.OutbreakEvent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object locationId_ = "";
      /**
       * <pre>
       * location ID references the ID in the portal
       * </pre>
       *
       * <code>optional string location_id = 1;</code>
       */
      public boolean hasLocationId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * location ID references the ID in the portal
       * </pre>
       *
       * <code>optional string location_id = 1;</code>
       */
      public java.lang.String getLocationId() {
        java.lang.Object ref = locationId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            locationId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * location ID references the ID in the portal
       * </pre>
       *
       * <code>optional string location_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getLocationIdBytes() {
        java.lang.Object ref = locationId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          locationId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * location ID references the ID in the portal
       * </pre>
       *
       * <code>optional string location_id = 1;</code>
       */
      public Builder setLocationId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        locationId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * location ID references the ID in the portal
       * </pre>
       *
       * <code>optional string location_id = 1;</code>
       */
      public Builder clearLocationId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        locationId_ = getDefaultInstance().getLocationId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * location ID references the ID in the portal
       * </pre>
       *
       * <code>optional string location_id = 1;</code>
       */
      public Builder setLocationIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        locationId_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.Timestamp startTime_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> startTimeBuilder_;
      /**
       * <code>optional .google.protobuf.Timestamp start_time = 2;</code>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .google.protobuf.Timestamp start_time = 2;</code>
       */
      public com.google.protobuf.Timestamp getStartTime() {
        if (startTimeBuilder_ == null) {
          return startTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
        } else {
          return startTimeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .google.protobuf.Timestamp start_time = 2;</code>
       */
      public Builder setStartTime(com.google.protobuf.Timestamp value) {
        if (startTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          startTime_ = value;
          onChanged();
        } else {
          startTimeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .google.protobuf.Timestamp start_time = 2;</code>
       */
      public Builder setStartTime(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (startTimeBuilder_ == null) {
          startTime_ = builderForValue.build();
          onChanged();
        } else {
          startTimeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .google.protobuf.Timestamp start_time = 2;</code>
       */
      public Builder mergeStartTime(com.google.protobuf.Timestamp value) {
        if (startTimeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              startTime_ != null &&
              startTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            startTime_ =
              com.google.protobuf.Timestamp.newBuilder(startTime_).mergeFrom(value).buildPartial();
          } else {
            startTime_ = value;
          }
          onChanged();
        } else {
          startTimeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .google.protobuf.Timestamp start_time = 2;</code>
       */
      public Builder clearStartTime() {
        if (startTimeBuilder_ == null) {
          startTime_ = null;
          onChanged();
        } else {
          startTimeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .google.protobuf.Timestamp start_time = 2;</code>
       */
      public com.google.protobuf.Timestamp.Builder getStartTimeBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getStartTimeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .google.protobuf.Timestamp start_time = 2;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getStartTimeOrBuilder() {
        if (startTimeBuilder_ != null) {
          return startTimeBuilder_.getMessageOrBuilder();
        } else {
          return startTime_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
        }
      }
      /**
       * <code>optional .google.protobuf.Timestamp start_time = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getStartTimeFieldBuilder() {
        if (startTimeBuilder_ == null) {
          startTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getStartTime(),
                  getParentForChildren(),
                  isClean());
          startTime_ = null;
        }
        return startTimeBuilder_;
      }

      private com.google.protobuf.Timestamp endTime_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> endTimeBuilder_;
      /**
       * <code>optional .google.protobuf.Timestamp end_time = 3;</code>
       */
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .google.protobuf.Timestamp end_time = 3;</code>
       */
      public com.google.protobuf.Timestamp getEndTime() {
        if (endTimeBuilder_ == null) {
          return endTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endTime_;
        } else {
          return endTimeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .google.protobuf.Timestamp end_time = 3;</code>
       */
      public Builder setEndTime(com.google.protobuf.Timestamp value) {
        if (endTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          endTime_ = value;
          onChanged();
        } else {
          endTimeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .google.protobuf.Timestamp end_time = 3;</code>
       */
      public Builder setEndTime(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (endTimeBuilder_ == null) {
          endTime_ = builderForValue.build();
          onChanged();
        } else {
          endTimeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .google.protobuf.Timestamp end_time = 3;</code>
       */
      public Builder mergeEndTime(com.google.protobuf.Timestamp value) {
        if (endTimeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              endTime_ != null &&
              endTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            endTime_ =
              com.google.protobuf.Timestamp.newBuilder(endTime_).mergeFrom(value).buildPartial();
          } else {
            endTime_ = value;
          }
          onChanged();
        } else {
          endTimeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .google.protobuf.Timestamp end_time = 3;</code>
       */
      public Builder clearEndTime() {
        if (endTimeBuilder_ == null) {
          endTime_ = null;
          onChanged();
        } else {
          endTimeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .google.protobuf.Timestamp end_time = 3;</code>
       */
      public com.google.protobuf.Timestamp.Builder getEndTimeBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getEndTimeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .google.protobuf.Timestamp end_time = 3;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getEndTimeOrBuilder() {
        if (endTimeBuilder_ != null) {
          return endTimeBuilder_.getMessageOrBuilder();
        } else {
          return endTime_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : endTime_;
        }
      }
      /**
       * <code>optional .google.protobuf.Timestamp end_time = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getEndTimeFieldBuilder() {
        if (endTimeBuilder_ == null) {
          endTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getEndTime(),
                  getParentForChildren(),
                  isClean());
          endTime_ = null;
        }
        return endTimeBuilder_;
      }

      private int severity_ ;
      /**
       * <code>optional uint32 severity = 4;</code>
       */
      public boolean hasSeverity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 severity = 4;</code>
       */
      public int getSeverity() {
        return severity_;
      }
      /**
       * <code>optional uint32 severity = 4;</code>
       */
      public Builder setSeverity(int value) {
        bitField0_ |= 0x00000008;
        severity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 severity = 4;</code>
       */
      public Builder clearSeverity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        severity_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.pancast.dongle.gaen.OutbreakEvent)
    }

    // @@protoc_insertion_point(class_scope:com.pancast.dongle.gaen.OutbreakEvent)
    private static final com.pancast.dongle.gaen.Covidshield.OutbreakEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.pancast.dongle.gaen.Covidshield.OutbreakEvent();
    }

    public static com.pancast.dongle.gaen.Covidshield.OutbreakEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<OutbreakEvent>
        PARSER = new com.google.protobuf.AbstractParser<OutbreakEvent>() {
      @java.lang.Override
      public OutbreakEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OutbreakEvent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OutbreakEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OutbreakEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.pancast.dongle.gaen.Covidshield.OutbreakEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OutbreakEventResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.pancast.dongle.gaen.OutbreakEventResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .com.pancast.dongle.gaen.OutbreakEventResponse.ErrorCode error = 1;</code>
     */
    boolean hasError();
    /**
     * <code>optional .com.pancast.dongle.gaen.OutbreakEventResponse.ErrorCode error = 1;</code>
     */
    com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse.ErrorCode getError();
  }
  /**
   * Protobuf type {@code com.pancast.dongle.gaen.OutbreakEventResponse}
   */
  public  static final class OutbreakEventResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.pancast.dongle.gaen.OutbreakEventResponse)
      OutbreakEventResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OutbreakEventResponse.newBuilder() to construct.
    private OutbreakEventResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OutbreakEventResponse() {
      error_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OutbreakEventResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse.ErrorCode value = com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse.ErrorCode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                error_ = rawValue;
              }
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_OutbreakEventResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_OutbreakEventResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse.class, com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code com.pancast.dongle.gaen.OutbreakEventResponse.ErrorCode}
     */
    public enum ErrorCode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NONE = 0;</code>
       */
      NONE(0),
      /**
       * <code>UNKNOWN = 1;</code>
       */
      UNKNOWN(1),
      /**
       * <code>INVALID_ID = 2;</code>
       */
      INVALID_ID(2),
      /**
       * <code>MISSING_TIMESTAMP = 3;</code>
       */
      MISSING_TIMESTAMP(3),
      /**
       * <code>PERIOD_INVALID = 4;</code>
       */
      PERIOD_INVALID(4),
      /**
       * <code>SERVER_ERROR = 5;</code>
       */
      SERVER_ERROR(5),
      ;

      /**
       * <code>NONE = 0;</code>
       */
      public static final int NONE_VALUE = 0;
      /**
       * <code>UNKNOWN = 1;</code>
       */
      public static final int UNKNOWN_VALUE = 1;
      /**
       * <code>INVALID_ID = 2;</code>
       */
      public static final int INVALID_ID_VALUE = 2;
      /**
       * <code>MISSING_TIMESTAMP = 3;</code>
       */
      public static final int MISSING_TIMESTAMP_VALUE = 3;
      /**
       * <code>PERIOD_INVALID = 4;</code>
       */
      public static final int PERIOD_INVALID_VALUE = 4;
      /**
       * <code>SERVER_ERROR = 5;</code>
       */
      public static final int SERVER_ERROR_VALUE = 5;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ErrorCode valueOf(int value) {
        return forNumber(value);
      }

      public static ErrorCode forNumber(int value) {
        switch (value) {
          case 0: return NONE;
          case 1: return UNKNOWN;
          case 2: return INVALID_ID;
          case 3: return MISSING_TIMESTAMP;
          case 4: return PERIOD_INVALID;
          case 5: return SERVER_ERROR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ErrorCode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ErrorCode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ErrorCode>() {
              public ErrorCode findValueByNumber(int number) {
                return ErrorCode.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final ErrorCode[] VALUES = values();

      public static ErrorCode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ErrorCode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.pancast.dongle.gaen.OutbreakEventResponse.ErrorCode)
    }

    private int bitField0_;
    public static final int ERROR_FIELD_NUMBER = 1;
    private int error_;
    /**
     * <code>optional .com.pancast.dongle.gaen.OutbreakEventResponse.ErrorCode error = 1;</code>
     */
    public boolean hasError() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .com.pancast.dongle.gaen.OutbreakEventResponse.ErrorCode error = 1;</code>
     */
    public com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse.ErrorCode getError() {
      @SuppressWarnings("deprecation")
      com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse.ErrorCode result = com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse.ErrorCode.valueOf(error_);
      return result == null ? com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse.ErrorCode.NONE : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, error_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, error_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse)) {
        return super.equals(obj);
      }
      com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse other = (com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse) obj;

      boolean result = true;
      result = result && (hasError() == other.hasError());
      if (hasError()) {
        result = result && error_ == other.error_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasError()) {
        hash = (37 * hash) + ERROR_FIELD_NUMBER;
        hash = (53 * hash) + error_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.pancast.dongle.gaen.OutbreakEventResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.pancast.dongle.gaen.OutbreakEventResponse)
        com.pancast.dongle.gaen.Covidshield.OutbreakEventResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_OutbreakEventResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_OutbreakEventResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse.class, com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse.Builder.class);
      }

      // Construct using com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        error_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_OutbreakEventResponse_descriptor;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse getDefaultInstanceForType() {
        return com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse build() {
        com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse buildPartial() {
        com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse result = new com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.error_ = error_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse) {
          return mergeFrom((com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse other) {
        if (other == com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse.getDefaultInstance()) return this;
        if (other.hasError()) {
          setError(other.getError());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int error_ = 0;
      /**
       * <code>optional .com.pancast.dongle.gaen.OutbreakEventResponse.ErrorCode error = 1;</code>
       */
      public boolean hasError() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .com.pancast.dongle.gaen.OutbreakEventResponse.ErrorCode error = 1;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse.ErrorCode getError() {
        @SuppressWarnings("deprecation")
        com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse.ErrorCode result = com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse.ErrorCode.valueOf(error_);
        return result == null ? com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse.ErrorCode.NONE : result;
      }
      /**
       * <code>optional .com.pancast.dongle.gaen.OutbreakEventResponse.ErrorCode error = 1;</code>
       */
      public Builder setError(com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse.ErrorCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        error_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.pancast.dongle.gaen.OutbreakEventResponse.ErrorCode error = 1;</code>
       */
      public Builder clearError() {
        bitField0_ = (bitField0_ & ~0x00000001);
        error_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.pancast.dongle.gaen.OutbreakEventResponse)
    }

    // @@protoc_insertion_point(class_scope:com.pancast.dongle.gaen.OutbreakEventResponse)
    private static final com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse();
    }

    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<OutbreakEventResponse>
        PARSER = new com.google.protobuf.AbstractParser<OutbreakEventResponse>() {
      @java.lang.Override
      public OutbreakEventResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OutbreakEventResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OutbreakEventResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OutbreakEventResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.pancast.dongle.gaen.Covidshield.OutbreakEventResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OutbreakEventExportOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.pancast.dongle.gaen.OutbreakEventExport)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed64 start_timestamp = 1;</code>
     */
    boolean hasStartTimestamp();
    /**
     * <code>optional fixed64 start_timestamp = 1;</code>
     */
    long getStartTimestamp();

    /**
     * <code>optional fixed64 end_timestamp = 2;</code>
     */
    boolean hasEndTimestamp();
    /**
     * <code>optional fixed64 end_timestamp = 2;</code>
     */
    long getEndTimestamp();

    /**
     * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
     */
    java.util.List<com.pancast.dongle.gaen.Covidshield.OutbreakEvent> 
        getLocationsList();
    /**
     * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
     */
    com.pancast.dongle.gaen.Covidshield.OutbreakEvent getLocations(int index);
    /**
     * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
     */
    int getLocationsCount();
    /**
     * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
     */
    java.util.List<? extends com.pancast.dongle.gaen.Covidshield.OutbreakEventOrBuilder> 
        getLocationsOrBuilderList();
    /**
     * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
     */
    com.pancast.dongle.gaen.Covidshield.OutbreakEventOrBuilder getLocationsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.pancast.dongle.gaen.OutbreakEventExport}
   */
  public  static final class OutbreakEventExport extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.pancast.dongle.gaen.OutbreakEventExport)
      OutbreakEventExportOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OutbreakEventExport.newBuilder() to construct.
    private OutbreakEventExport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OutbreakEventExport() {
      startTimestamp_ = 0L;
      endTimestamp_ = 0L;
      locations_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OutbreakEventExport(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {
              bitField0_ |= 0x00000001;
              startTimestamp_ = input.readFixed64();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              endTimestamp_ = input.readFixed64();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                locations_ = new java.util.ArrayList<com.pancast.dongle.gaen.Covidshield.OutbreakEvent>();
                mutable_bitField0_ |= 0x00000004;
              }
              locations_.add(
                  input.readMessage(com.pancast.dongle.gaen.Covidshield.OutbreakEvent.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          locations_ = java.util.Collections.unmodifiableList(locations_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_OutbreakEventExport_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_OutbreakEventExport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pancast.dongle.gaen.Covidshield.OutbreakEventExport.class, com.pancast.dongle.gaen.Covidshield.OutbreakEventExport.Builder.class);
    }

    private int bitField0_;
    public static final int START_TIMESTAMP_FIELD_NUMBER = 1;
    private long startTimestamp_;
    /**
     * <code>optional fixed64 start_timestamp = 1;</code>
     */
    public boolean hasStartTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional fixed64 start_timestamp = 1;</code>
     */
    public long getStartTimestamp() {
      return startTimestamp_;
    }

    public static final int END_TIMESTAMP_FIELD_NUMBER = 2;
    private long endTimestamp_;
    /**
     * <code>optional fixed64 end_timestamp = 2;</code>
     */
    public boolean hasEndTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional fixed64 end_timestamp = 2;</code>
     */
    public long getEndTimestamp() {
      return endTimestamp_;
    }

    public static final int LOCATIONS_FIELD_NUMBER = 3;
    private java.util.List<com.pancast.dongle.gaen.Covidshield.OutbreakEvent> locations_;
    /**
     * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
     */
    public java.util.List<com.pancast.dongle.gaen.Covidshield.OutbreakEvent> getLocationsList() {
      return locations_;
    }
    /**
     * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
     */
    public java.util.List<? extends com.pancast.dongle.gaen.Covidshield.OutbreakEventOrBuilder> 
        getLocationsOrBuilderList() {
      return locations_;
    }
    /**
     * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
     */
    public int getLocationsCount() {
      return locations_.size();
    }
    /**
     * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
     */
    public com.pancast.dongle.gaen.Covidshield.OutbreakEvent getLocations(int index) {
      return locations_.get(index);
    }
    /**
     * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
     */
    public com.pancast.dongle.gaen.Covidshield.OutbreakEventOrBuilder getLocationsOrBuilder(
        int index) {
      return locations_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed64(1, startTimestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed64(2, endTimestamp_);
      }
      for (int i = 0; i < locations_.size(); i++) {
        output.writeMessage(3, locations_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, startTimestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, endTimestamp_);
      }
      for (int i = 0; i < locations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, locations_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.pancast.dongle.gaen.Covidshield.OutbreakEventExport)) {
        return super.equals(obj);
      }
      com.pancast.dongle.gaen.Covidshield.OutbreakEventExport other = (com.pancast.dongle.gaen.Covidshield.OutbreakEventExport) obj;

      boolean result = true;
      result = result && (hasStartTimestamp() == other.hasStartTimestamp());
      if (hasStartTimestamp()) {
        result = result && (getStartTimestamp()
            == other.getStartTimestamp());
      }
      result = result && (hasEndTimestamp() == other.hasEndTimestamp());
      if (hasEndTimestamp()) {
        result = result && (getEndTimestamp()
            == other.getEndTimestamp());
      }
      result = result && getLocationsList()
          .equals(other.getLocationsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStartTimestamp()) {
        hash = (37 * hash) + START_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getStartTimestamp());
      }
      if (hasEndTimestamp()) {
        hash = (37 * hash) + END_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getEndTimestamp());
      }
      if (getLocationsCount() > 0) {
        hash = (37 * hash) + LOCATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getLocationsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExport parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExport parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExport parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExport parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExport parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExport parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExport parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExport parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExport parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExport parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExport parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExport parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.pancast.dongle.gaen.Covidshield.OutbreakEventExport prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.pancast.dongle.gaen.OutbreakEventExport}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.pancast.dongle.gaen.OutbreakEventExport)
        com.pancast.dongle.gaen.Covidshield.OutbreakEventExportOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_OutbreakEventExport_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_OutbreakEventExport_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.pancast.dongle.gaen.Covidshield.OutbreakEventExport.class, com.pancast.dongle.gaen.Covidshield.OutbreakEventExport.Builder.class);
      }

      // Construct using com.pancast.dongle.gaen.Covidshield.OutbreakEventExport.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getLocationsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        startTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        endTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (locationsBuilder_ == null) {
          locations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          locationsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_OutbreakEventExport_descriptor;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.OutbreakEventExport getDefaultInstanceForType() {
        return com.pancast.dongle.gaen.Covidshield.OutbreakEventExport.getDefaultInstance();
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.OutbreakEventExport build() {
        com.pancast.dongle.gaen.Covidshield.OutbreakEventExport result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.OutbreakEventExport buildPartial() {
        com.pancast.dongle.gaen.Covidshield.OutbreakEventExport result = new com.pancast.dongle.gaen.Covidshield.OutbreakEventExport(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.startTimestamp_ = startTimestamp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.endTimestamp_ = endTimestamp_;
        if (locationsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            locations_ = java.util.Collections.unmodifiableList(locations_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.locations_ = locations_;
        } else {
          result.locations_ = locationsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pancast.dongle.gaen.Covidshield.OutbreakEventExport) {
          return mergeFrom((com.pancast.dongle.gaen.Covidshield.OutbreakEventExport)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.pancast.dongle.gaen.Covidshield.OutbreakEventExport other) {
        if (other == com.pancast.dongle.gaen.Covidshield.OutbreakEventExport.getDefaultInstance()) return this;
        if (other.hasStartTimestamp()) {
          setStartTimestamp(other.getStartTimestamp());
        }
        if (other.hasEndTimestamp()) {
          setEndTimestamp(other.getEndTimestamp());
        }
        if (locationsBuilder_ == null) {
          if (!other.locations_.isEmpty()) {
            if (locations_.isEmpty()) {
              locations_ = other.locations_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureLocationsIsMutable();
              locations_.addAll(other.locations_);
            }
            onChanged();
          }
        } else {
          if (!other.locations_.isEmpty()) {
            if (locationsBuilder_.isEmpty()) {
              locationsBuilder_.dispose();
              locationsBuilder_ = null;
              locations_ = other.locations_;
              bitField0_ = (bitField0_ & ~0x00000004);
              locationsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLocationsFieldBuilder() : null;
            } else {
              locationsBuilder_.addAllMessages(other.locations_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.pancast.dongle.gaen.Covidshield.OutbreakEventExport parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.pancast.dongle.gaen.Covidshield.OutbreakEventExport) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long startTimestamp_ ;
      /**
       * <code>optional fixed64 start_timestamp = 1;</code>
       */
      public boolean hasStartTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed64 start_timestamp = 1;</code>
       */
      public long getStartTimestamp() {
        return startTimestamp_;
      }
      /**
       * <code>optional fixed64 start_timestamp = 1;</code>
       */
      public Builder setStartTimestamp(long value) {
        bitField0_ |= 0x00000001;
        startTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 start_timestamp = 1;</code>
       */
      public Builder clearStartTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        startTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private long endTimestamp_ ;
      /**
       * <code>optional fixed64 end_timestamp = 2;</code>
       */
      public boolean hasEndTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional fixed64 end_timestamp = 2;</code>
       */
      public long getEndTimestamp() {
        return endTimestamp_;
      }
      /**
       * <code>optional fixed64 end_timestamp = 2;</code>
       */
      public Builder setEndTimestamp(long value) {
        bitField0_ |= 0x00000002;
        endTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 end_timestamp = 2;</code>
       */
      public Builder clearEndTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        endTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<com.pancast.dongle.gaen.Covidshield.OutbreakEvent> locations_ =
        java.util.Collections.emptyList();
      private void ensureLocationsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          locations_ = new java.util.ArrayList<com.pancast.dongle.gaen.Covidshield.OutbreakEvent>(locations_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.pancast.dongle.gaen.Covidshield.OutbreakEvent, com.pancast.dongle.gaen.Covidshield.OutbreakEvent.Builder, com.pancast.dongle.gaen.Covidshield.OutbreakEventOrBuilder> locationsBuilder_;

      /**
       * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
       */
      public java.util.List<com.pancast.dongle.gaen.Covidshield.OutbreakEvent> getLocationsList() {
        if (locationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(locations_);
        } else {
          return locationsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
       */
      public int getLocationsCount() {
        if (locationsBuilder_ == null) {
          return locations_.size();
        } else {
          return locationsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.OutbreakEvent getLocations(int index) {
        if (locationsBuilder_ == null) {
          return locations_.get(index);
        } else {
          return locationsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
       */
      public Builder setLocations(
          int index, com.pancast.dongle.gaen.Covidshield.OutbreakEvent value) {
        if (locationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocationsIsMutable();
          locations_.set(index, value);
          onChanged();
        } else {
          locationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
       */
      public Builder setLocations(
          int index, com.pancast.dongle.gaen.Covidshield.OutbreakEvent.Builder builderForValue) {
        if (locationsBuilder_ == null) {
          ensureLocationsIsMutable();
          locations_.set(index, builderForValue.build());
          onChanged();
        } else {
          locationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
       */
      public Builder addLocations(com.pancast.dongle.gaen.Covidshield.OutbreakEvent value) {
        if (locationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocationsIsMutable();
          locations_.add(value);
          onChanged();
        } else {
          locationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
       */
      public Builder addLocations(
          int index, com.pancast.dongle.gaen.Covidshield.OutbreakEvent value) {
        if (locationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocationsIsMutable();
          locations_.add(index, value);
          onChanged();
        } else {
          locationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
       */
      public Builder addLocations(
          com.pancast.dongle.gaen.Covidshield.OutbreakEvent.Builder builderForValue) {
        if (locationsBuilder_ == null) {
          ensureLocationsIsMutable();
          locations_.add(builderForValue.build());
          onChanged();
        } else {
          locationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
       */
      public Builder addLocations(
          int index, com.pancast.dongle.gaen.Covidshield.OutbreakEvent.Builder builderForValue) {
        if (locationsBuilder_ == null) {
          ensureLocationsIsMutable();
          locations_.add(index, builderForValue.build());
          onChanged();
        } else {
          locationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
       */
      public Builder addAllLocations(
          java.lang.Iterable<? extends com.pancast.dongle.gaen.Covidshield.OutbreakEvent> values) {
        if (locationsBuilder_ == null) {
          ensureLocationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, locations_);
          onChanged();
        } else {
          locationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
       */
      public Builder clearLocations() {
        if (locationsBuilder_ == null) {
          locations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          locationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
       */
      public Builder removeLocations(int index) {
        if (locationsBuilder_ == null) {
          ensureLocationsIsMutable();
          locations_.remove(index);
          onChanged();
        } else {
          locationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.OutbreakEvent.Builder getLocationsBuilder(
          int index) {
        return getLocationsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.OutbreakEventOrBuilder getLocationsOrBuilder(
          int index) {
        if (locationsBuilder_ == null) {
          return locations_.get(index);  } else {
          return locationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
       */
      public java.util.List<? extends com.pancast.dongle.gaen.Covidshield.OutbreakEventOrBuilder> 
           getLocationsOrBuilderList() {
        if (locationsBuilder_ != null) {
          return locationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(locations_);
        }
      }
      /**
       * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.OutbreakEvent.Builder addLocationsBuilder() {
        return getLocationsFieldBuilder().addBuilder(
            com.pancast.dongle.gaen.Covidshield.OutbreakEvent.getDefaultInstance());
      }
      /**
       * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.OutbreakEvent.Builder addLocationsBuilder(
          int index) {
        return getLocationsFieldBuilder().addBuilder(
            index, com.pancast.dongle.gaen.Covidshield.OutbreakEvent.getDefaultInstance());
      }
      /**
       * <code>repeated .com.pancast.dongle.gaen.OutbreakEvent locations = 3;</code>
       */
      public java.util.List<com.pancast.dongle.gaen.Covidshield.OutbreakEvent.Builder> 
           getLocationsBuilderList() {
        return getLocationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.pancast.dongle.gaen.Covidshield.OutbreakEvent, com.pancast.dongle.gaen.Covidshield.OutbreakEvent.Builder, com.pancast.dongle.gaen.Covidshield.OutbreakEventOrBuilder> 
          getLocationsFieldBuilder() {
        if (locationsBuilder_ == null) {
          locationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.pancast.dongle.gaen.Covidshield.OutbreakEvent, com.pancast.dongle.gaen.Covidshield.OutbreakEvent.Builder, com.pancast.dongle.gaen.Covidshield.OutbreakEventOrBuilder>(
                  locations_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          locations_ = null;
        }
        return locationsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.pancast.dongle.gaen.OutbreakEventExport)
    }

    // @@protoc_insertion_point(class_scope:com.pancast.dongle.gaen.OutbreakEventExport)
    private static final com.pancast.dongle.gaen.Covidshield.OutbreakEventExport DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.pancast.dongle.gaen.Covidshield.OutbreakEventExport();
    }

    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExport getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<OutbreakEventExport>
        PARSER = new com.google.protobuf.AbstractParser<OutbreakEventExport>() {
      @java.lang.Override
      public OutbreakEventExport parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OutbreakEventExport(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OutbreakEventExport> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OutbreakEventExport> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.pancast.dongle.gaen.Covidshield.OutbreakEventExport getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OutbreakEventExportSignatureOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.pancast.dongle.gaen.OutbreakEventExportSignature)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bytes signature = 1;</code>
     */
    boolean hasSignature();
    /**
     * <code>optional bytes signature = 1;</code>
     */
    com.google.protobuf.ByteString getSignature();
  }
  /**
   * Protobuf type {@code com.pancast.dongle.gaen.OutbreakEventExportSignature}
   */
  public  static final class OutbreakEventExportSignature extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.pancast.dongle.gaen.OutbreakEventExportSignature)
      OutbreakEventExportSignatureOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OutbreakEventExportSignature.newBuilder() to construct.
    private OutbreakEventExportSignature(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OutbreakEventExportSignature() {
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OutbreakEventExportSignature(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              bitField0_ |= 0x00000001;
              signature_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_OutbreakEventExportSignature_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_OutbreakEventExportSignature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature.class, com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature.Builder.class);
    }

    private int bitField0_;
    public static final int SIGNATURE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString signature_;
    /**
     * <code>optional bytes signature = 1;</code>
     */
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes signature = 1;</code>
     */
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, signature_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, signature_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature)) {
        return super.equals(obj);
      }
      com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature other = (com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature) obj;

      boolean result = true;
      result = result && (hasSignature() == other.hasSignature());
      if (hasSignature()) {
        result = result && getSignature()
            .equals(other.getSignature());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSignature()) {
        hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
        hash = (53 * hash) + getSignature().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.pancast.dongle.gaen.OutbreakEventExportSignature}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.pancast.dongle.gaen.OutbreakEventExportSignature)
        com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignatureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_OutbreakEventExportSignature_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_OutbreakEventExportSignature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature.class, com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature.Builder.class);
      }

      // Construct using com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        signature_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_OutbreakEventExportSignature_descriptor;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature getDefaultInstanceForType() {
        return com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature.getDefaultInstance();
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature build() {
        com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature buildPartial() {
        com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature result = new com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.signature_ = signature_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature) {
          return mergeFrom((com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature other) {
        if (other == com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature.getDefaultInstance()) return this;
        if (other.hasSignature()) {
          setSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes signature = 1;</code>
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes signature = 1;</code>
       */
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <code>optional bytes signature = 1;</code>
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes signature = 1;</code>
       */
      public Builder clearSignature() {
        bitField0_ = (bitField0_ & ~0x00000001);
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.pancast.dongle.gaen.OutbreakEventExportSignature)
    }

    // @@protoc_insertion_point(class_scope:com.pancast.dongle.gaen.OutbreakEventExportSignature)
    private static final com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature();
    }

    public static com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<OutbreakEventExportSignature>
        PARSER = new com.google.protobuf.AbstractParser<OutbreakEventExportSignature>() {
      @java.lang.Override
      public OutbreakEventExportSignature parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OutbreakEventExportSignature(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OutbreakEventExportSignature> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OutbreakEventExportSignature> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.pancast.dongle.gaen.Covidshield.OutbreakEventExportSignature getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UploadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.pancast.dongle.gaen.Upload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * timestamp is just the current device time at message generation.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
     */
    boolean hasTimestamp();
    /**
     * <pre>
     * timestamp is just the current device time at message generation.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
     */
    com.google.protobuf.Timestamp getTimestamp();
    /**
     * <pre>
     * timestamp is just the current device time at message generation.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
     */
    com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

    /**
     * <pre>
     * keys returns from the ExposureNotification API.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
     */
    java.util.List<com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey> 
        getKeysList();
    /**
     * <pre>
     * keys returns from the ExposureNotification API.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
     */
    com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey getKeys(int index);
    /**
     * <pre>
     * keys returns from the ExposureNotification API.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
     */
    int getKeysCount();
    /**
     * <pre>
     * keys returns from the ExposureNotification API.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
     */
    java.util.List<? extends com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder> 
        getKeysOrBuilderList();
    /**
     * <pre>
     * keys returns from the ExposureNotification API.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
     */
    com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder getKeysOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Upload is the decrypted type of the `payload` field in EncryptedUploadRequest.
   * </pre>
   *
   * Protobuf type {@code com.pancast.dongle.gaen.Upload}
   */
  public  static final class Upload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.pancast.dongle.gaen.Upload)
      UploadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Upload.newBuilder() to construct.
    private Upload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Upload() {
      keys_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Upload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = timestamp_.toBuilder();
              }
              timestamp_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timestamp_);
                timestamp_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                keys_ = new java.util.ArrayList<com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey>();
                mutable_bitField0_ |= 0x00000002;
              }
              keys_.add(
                  input.readMessage(com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          keys_ = java.util.Collections.unmodifiableList(keys_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_Upload_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_Upload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pancast.dongle.gaen.Covidshield.Upload.class, com.pancast.dongle.gaen.Covidshield.Upload.Builder.class);
    }

    private int bitField0_;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private com.google.protobuf.Timestamp timestamp_;
    /**
     * <pre>
     * timestamp is just the current device time at message generation.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * timestamp is just the current device time at message generation.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
     */
    public com.google.protobuf.Timestamp getTimestamp() {
      return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
    }
    /**
     * <pre>
     * timestamp is just the current device time at message generation.
     * </pre>
     *
     * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
      return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
    }

    public static final int KEYS_FIELD_NUMBER = 2;
    private java.util.List<com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey> keys_;
    /**
     * <pre>
     * keys returns from the ExposureNotification API.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
     */
    public java.util.List<com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey> getKeysList() {
      return keys_;
    }
    /**
     * <pre>
     * keys returns from the ExposureNotification API.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
     */
    public java.util.List<? extends com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder> 
        getKeysOrBuilderList() {
      return keys_;
    }
    /**
     * <pre>
     * keys returns from the ExposureNotification API.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
     */
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <pre>
     * keys returns from the ExposureNotification API.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
     */
    public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey getKeys(int index) {
      return keys_.get(index);
    }
    /**
     * <pre>
     * keys returns from the ExposureNotification API.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
     */
    public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder getKeysOrBuilder(
        int index) {
      return keys_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getTimestamp());
      }
      for (int i = 0; i < keys_.size(); i++) {
        output.writeMessage(2, keys_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTimestamp());
      }
      for (int i = 0; i < keys_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, keys_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.pancast.dongle.gaen.Covidshield.Upload)) {
        return super.equals(obj);
      }
      com.pancast.dongle.gaen.Covidshield.Upload other = (com.pancast.dongle.gaen.Covidshield.Upload) obj;

      boolean result = true;
      result = result && (hasTimestamp() == other.hasTimestamp());
      if (hasTimestamp()) {
        result = result && getTimestamp()
            .equals(other.getTimestamp());
      }
      result = result && getKeysList()
          .equals(other.getKeysList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimestamp().hashCode();
      }
      if (getKeysCount() > 0) {
        hash = (37 * hash) + KEYS_FIELD_NUMBER;
        hash = (53 * hash) + getKeysList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.pancast.dongle.gaen.Covidshield.Upload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.Upload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.Upload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.Upload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.Upload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.Upload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.Upload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.Upload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.Upload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.Upload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.Upload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.Upload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.pancast.dongle.gaen.Covidshield.Upload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Upload is the decrypted type of the `payload` field in EncryptedUploadRequest.
     * </pre>
     *
     * Protobuf type {@code com.pancast.dongle.gaen.Upload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.pancast.dongle.gaen.Upload)
        com.pancast.dongle.gaen.Covidshield.UploadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_Upload_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_Upload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.pancast.dongle.gaen.Covidshield.Upload.class, com.pancast.dongle.gaen.Covidshield.Upload.Builder.class);
      }

      // Construct using com.pancast.dongle.gaen.Covidshield.Upload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTimestampFieldBuilder();
          getKeysFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (timestampBuilder_ == null) {
          timestamp_ = null;
        } else {
          timestampBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (keysBuilder_ == null) {
          keys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          keysBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_Upload_descriptor;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.Upload getDefaultInstanceForType() {
        return com.pancast.dongle.gaen.Covidshield.Upload.getDefaultInstance();
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.Upload build() {
        com.pancast.dongle.gaen.Covidshield.Upload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.Upload buildPartial() {
        com.pancast.dongle.gaen.Covidshield.Upload result = new com.pancast.dongle.gaen.Covidshield.Upload(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (timestampBuilder_ == null) {
          result.timestamp_ = timestamp_;
        } else {
          result.timestamp_ = timestampBuilder_.build();
        }
        if (keysBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            keys_ = java.util.Collections.unmodifiableList(keys_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.keys_ = keys_;
        } else {
          result.keys_ = keysBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pancast.dongle.gaen.Covidshield.Upload) {
          return mergeFrom((com.pancast.dongle.gaen.Covidshield.Upload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.pancast.dongle.gaen.Covidshield.Upload other) {
        if (other == com.pancast.dongle.gaen.Covidshield.Upload.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          mergeTimestamp(other.getTimestamp());
        }
        if (keysBuilder_ == null) {
          if (!other.keys_.isEmpty()) {
            if (keys_.isEmpty()) {
              keys_ = other.keys_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureKeysIsMutable();
              keys_.addAll(other.keys_);
            }
            onChanged();
          }
        } else {
          if (!other.keys_.isEmpty()) {
            if (keysBuilder_.isEmpty()) {
              keysBuilder_.dispose();
              keysBuilder_ = null;
              keys_ = other.keys_;
              bitField0_ = (bitField0_ & ~0x00000002);
              keysBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getKeysFieldBuilder() : null;
            } else {
              keysBuilder_.addAllMessages(other.keys_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.pancast.dongle.gaen.Covidshield.Upload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.pancast.dongle.gaen.Covidshield.Upload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Timestamp timestamp_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampBuilder_;
      /**
       * <pre>
       * timestamp is just the current device time at message generation.
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * timestamp is just the current device time at message generation.
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public com.google.protobuf.Timestamp getTimestamp() {
        if (timestampBuilder_ == null) {
          return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        } else {
          return timestampBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * timestamp is just the current device time at message generation.
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder setTimestamp(com.google.protobuf.Timestamp value) {
        if (timestampBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timestamp_ = value;
          onChanged();
        } else {
          timestampBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * timestamp is just the current device time at message generation.
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder setTimestamp(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (timestampBuilder_ == null) {
          timestamp_ = builderForValue.build();
          onChanged();
        } else {
          timestampBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * timestamp is just the current device time at message generation.
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
        if (timestampBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              timestamp_ != null &&
              timestamp_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            timestamp_ =
              com.google.protobuf.Timestamp.newBuilder(timestamp_).mergeFrom(value).buildPartial();
          } else {
            timestamp_ = value;
          }
          onChanged();
        } else {
          timestampBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * timestamp is just the current device time at message generation.
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public Builder clearTimestamp() {
        if (timestampBuilder_ == null) {
          timestamp_ = null;
          onChanged();
        } else {
          timestampBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <pre>
       * timestamp is just the current device time at message generation.
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public com.google.protobuf.Timestamp.Builder getTimestampBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTimestampFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * timestamp is just the current device time at message generation.
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
        if (timestampBuilder_ != null) {
          return timestampBuilder_.getMessageOrBuilder();
        } else {
          return timestamp_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
        }
      }
      /**
       * <pre>
       * timestamp is just the current device time at message generation.
       * </pre>
       *
       * <code>optional .google.protobuf.Timestamp timestamp = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getTimestampFieldBuilder() {
        if (timestampBuilder_ == null) {
          timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getTimestamp(),
                  getParentForChildren(),
                  isClean());
          timestamp_ = null;
        }
        return timestampBuilder_;
      }

      private java.util.List<com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey> keys_ =
        java.util.Collections.emptyList();
      private void ensureKeysIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          keys_ = new java.util.ArrayList<com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey>(keys_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder> keysBuilder_;

      /**
       * <pre>
       * keys returns from the ExposureNotification API.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
       */
      public java.util.List<com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey> getKeysList() {
        if (keysBuilder_ == null) {
          return java.util.Collections.unmodifiableList(keys_);
        } else {
          return keysBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * keys returns from the ExposureNotification API.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
       */
      public int getKeysCount() {
        if (keysBuilder_ == null) {
          return keys_.size();
        } else {
          return keysBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * keys returns from the ExposureNotification API.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey getKeys(int index) {
        if (keysBuilder_ == null) {
          return keys_.get(index);
        } else {
          return keysBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * keys returns from the ExposureNotification API.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
       */
      public Builder setKeys(
          int index, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey value) {
        if (keysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKeysIsMutable();
          keys_.set(index, value);
          onChanged();
        } else {
          keysBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * keys returns from the ExposureNotification API.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
       */
      public Builder setKeys(
          int index, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder builderForValue) {
        if (keysBuilder_ == null) {
          ensureKeysIsMutable();
          keys_.set(index, builderForValue.build());
          onChanged();
        } else {
          keysBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * keys returns from the ExposureNotification API.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
       */
      public Builder addKeys(com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey value) {
        if (keysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKeysIsMutable();
          keys_.add(value);
          onChanged();
        } else {
          keysBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * keys returns from the ExposureNotification API.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
       */
      public Builder addKeys(
          int index, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey value) {
        if (keysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKeysIsMutable();
          keys_.add(index, value);
          onChanged();
        } else {
          keysBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * keys returns from the ExposureNotification API.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
       */
      public Builder addKeys(
          com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder builderForValue) {
        if (keysBuilder_ == null) {
          ensureKeysIsMutable();
          keys_.add(builderForValue.build());
          onChanged();
        } else {
          keysBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * keys returns from the ExposureNotification API.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
       */
      public Builder addKeys(
          int index, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder builderForValue) {
        if (keysBuilder_ == null) {
          ensureKeysIsMutable();
          keys_.add(index, builderForValue.build());
          onChanged();
        } else {
          keysBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * keys returns from the ExposureNotification API.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
       */
      public Builder addAllKeys(
          java.lang.Iterable<? extends com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey> values) {
        if (keysBuilder_ == null) {
          ensureKeysIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, keys_);
          onChanged();
        } else {
          keysBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * keys returns from the ExposureNotification API.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
       */
      public Builder clearKeys() {
        if (keysBuilder_ == null) {
          keys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          keysBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * keys returns from the ExposureNotification API.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
       */
      public Builder removeKeys(int index) {
        if (keysBuilder_ == null) {
          ensureKeysIsMutable();
          keys_.remove(index);
          onChanged();
        } else {
          keysBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * keys returns from the ExposureNotification API.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder getKeysBuilder(
          int index) {
        return getKeysFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * keys returns from the ExposureNotification API.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder getKeysOrBuilder(
          int index) {
        if (keysBuilder_ == null) {
          return keys_.get(index);  } else {
          return keysBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * keys returns from the ExposureNotification API.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
       */
      public java.util.List<? extends com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder> 
           getKeysOrBuilderList() {
        if (keysBuilder_ != null) {
          return keysBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(keys_);
        }
      }
      /**
       * <pre>
       * keys returns from the ExposureNotification API.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder addKeysBuilder() {
        return getKeysFieldBuilder().addBuilder(
            com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.getDefaultInstance());
      }
      /**
       * <pre>
       * keys returns from the ExposureNotification API.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder addKeysBuilder(
          int index) {
        return getKeysFieldBuilder().addBuilder(
            index, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.getDefaultInstance());
      }
      /**
       * <pre>
       * keys returns from the ExposureNotification API.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 2;</code>
       */
      public java.util.List<com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder> 
           getKeysBuilderList() {
        return getKeysFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder> 
          getKeysFieldBuilder() {
        if (keysBuilder_ == null) {
          keysBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder>(
                  keys_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          keys_ = null;
        }
        return keysBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.pancast.dongle.gaen.Upload)
    }

    // @@protoc_insertion_point(class_scope:com.pancast.dongle.gaen.Upload)
    private static final com.pancast.dongle.gaen.Covidshield.Upload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.pancast.dongle.gaen.Covidshield.Upload();
    }

    public static com.pancast.dongle.gaen.Covidshield.Upload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Upload>
        PARSER = new com.google.protobuf.AbstractParser<Upload>() {
      @java.lang.Override
      public Upload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Upload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Upload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Upload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.pancast.dongle.gaen.Covidshield.Upload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TemporaryExposureKeyExportOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.pancast.dongle.gaen.TemporaryExposureKeyExport)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Time window of keys in the file, based on arrival
     * at the server, in UTC seconds.
     * </pre>
     *
     * <code>optional fixed64 start_timestamp = 1;</code>
     */
    boolean hasStartTimestamp();
    /**
     * <pre>
     * Time window of keys in the file, based on arrival
     * at the server, in UTC seconds.
     * </pre>
     *
     * <code>optional fixed64 start_timestamp = 1;</code>
     */
    long getStartTimestamp();

    /**
     * <code>optional fixed64 end_timestamp = 2;</code>
     */
    boolean hasEndTimestamp();
    /**
     * <code>optional fixed64 end_timestamp = 2;</code>
     */
    long getEndTimestamp();

    /**
     * <pre>
     * Region from which these keys came (for example, MCC, however, some schemes
     * use e.g. ISO-3166-2. There's no apparent hard requirement by the protocol
     * for the contents here).
     * </pre>
     *
     * <code>optional string region = 3;</code>
     */
    boolean hasRegion();
    /**
     * <pre>
     * Region from which these keys came (for example, MCC, however, some schemes
     * use e.g. ISO-3166-2. There's no apparent hard requirement by the protocol
     * for the contents here).
     * </pre>
     *
     * <code>optional string region = 3;</code>
     */
    java.lang.String getRegion();
    /**
     * <pre>
     * Region from which these keys came (for example, MCC, however, some schemes
     * use e.g. ISO-3166-2. There's no apparent hard requirement by the protocol
     * for the contents here).
     * </pre>
     *
     * <code>optional string region = 3;</code>
     */
    com.google.protobuf.ByteString
        getRegionBytes();

    /**
     * <pre>
     * Reserved for future use. Both batch_num and batch_size
     * must be set to a value of 1.
     * </pre>
     *
     * <code>optional int32 batch_num = 4;</code>
     */
    boolean hasBatchNum();
    /**
     * <pre>
     * Reserved for future use. Both batch_num and batch_size
     * must be set to a value of 1.
     * </pre>
     *
     * <code>optional int32 batch_num = 4;</code>
     */
    int getBatchNum();

    /**
     * <code>optional int32 batch_size = 5;</code>
     */
    boolean hasBatchSize();
    /**
     * <code>optional int32 batch_size = 5;</code>
     */
    int getBatchSize();

    /**
     * <pre>
     * Information about associated signatures.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
     */
    java.util.List<com.pancast.dongle.gaen.Covidshield.SignatureInfo> 
        getSignatureInfosList();
    /**
     * <pre>
     * Information about associated signatures.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
     */
    com.pancast.dongle.gaen.Covidshield.SignatureInfo getSignatureInfos(int index);
    /**
     * <pre>
     * Information about associated signatures.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
     */
    int getSignatureInfosCount();
    /**
     * <pre>
     * Information about associated signatures.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
     */
    java.util.List<? extends com.pancast.dongle.gaen.Covidshield.SignatureInfoOrBuilder> 
        getSignatureInfosOrBuilderList();
    /**
     * <pre>
     * Information about associated signatures.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
     */
    com.pancast.dongle.gaen.Covidshield.SignatureInfoOrBuilder getSignatureInfosOrBuilder(
        int index);

    /**
     * <pre>
     * The temporary exposure keys themselves.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
     */
    java.util.List<com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey> 
        getKeysList();
    /**
     * <pre>
     * The temporary exposure keys themselves.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
     */
    com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey getKeys(int index);
    /**
     * <pre>
     * The temporary exposure keys themselves.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
     */
    int getKeysCount();
    /**
     * <pre>
     * The temporary exposure keys themselves.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
     */
    java.util.List<? extends com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder> 
        getKeysOrBuilderList();
    /**
     * <pre>
     * The temporary exposure keys themselves.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
     */
    com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder getKeysOrBuilder(
        int index);

    /**
     * <pre>
     * Keys that have changed status from previous key archives,
     * including keys that are being revoked.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
     */
    java.util.List<com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey> 
        getRevisedKeysList();
    /**
     * <pre>
     * Keys that have changed status from previous key archives,
     * including keys that are being revoked.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
     */
    com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey getRevisedKeys(int index);
    /**
     * <pre>
     * Keys that have changed status from previous key archives,
     * including keys that are being revoked.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
     */
    int getRevisedKeysCount();
    /**
     * <pre>
     * Keys that have changed status from previous key archives,
     * including keys that are being revoked.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
     */
    java.util.List<? extends com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder> 
        getRevisedKeysOrBuilderList();
    /**
     * <pre>
     * Keys that have changed status from previous key archives,
     * including keys that are being revoked.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
     */
    com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder getRevisedKeysOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.pancast.dongle.gaen.TemporaryExposureKeyExport}
   */
  public  static final class TemporaryExposureKeyExport extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.pancast.dongle.gaen.TemporaryExposureKeyExport)
      TemporaryExposureKeyExportOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TemporaryExposureKeyExport.newBuilder() to construct.
    private TemporaryExposureKeyExport(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TemporaryExposureKeyExport() {
      startTimestamp_ = 0L;
      endTimestamp_ = 0L;
      region_ = "";
      batchNum_ = 0;
      batchSize_ = 0;
      signatureInfos_ = java.util.Collections.emptyList();
      keys_ = java.util.Collections.emptyList();
      revisedKeys_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TemporaryExposureKeyExport(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 9: {
              bitField0_ |= 0x00000001;
              startTimestamp_ = input.readFixed64();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              endTimestamp_ = input.readFixed64();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              region_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              batchNum_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              batchSize_ = input.readInt32();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                signatureInfos_ = new java.util.ArrayList<com.pancast.dongle.gaen.Covidshield.SignatureInfo>();
                mutable_bitField0_ |= 0x00000020;
              }
              signatureInfos_.add(
                  input.readMessage(com.pancast.dongle.gaen.Covidshield.SignatureInfo.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                keys_ = new java.util.ArrayList<com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey>();
                mutable_bitField0_ |= 0x00000040;
              }
              keys_.add(
                  input.readMessage(com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.PARSER, extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                revisedKeys_ = new java.util.ArrayList<com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey>();
                mutable_bitField0_ |= 0x00000080;
              }
              revisedKeys_.add(
                  input.readMessage(com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          signatureInfos_ = java.util.Collections.unmodifiableList(signatureInfos_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          keys_ = java.util.Collections.unmodifiableList(keys_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          revisedKeys_ = java.util.Collections.unmodifiableList(revisedKeys_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_TemporaryExposureKeyExport_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_TemporaryExposureKeyExport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport.class, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport.Builder.class);
    }

    private int bitField0_;
    public static final int START_TIMESTAMP_FIELD_NUMBER = 1;
    private long startTimestamp_;
    /**
     * <pre>
     * Time window of keys in the file, based on arrival
     * at the server, in UTC seconds.
     * </pre>
     *
     * <code>optional fixed64 start_timestamp = 1;</code>
     */
    public boolean hasStartTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Time window of keys in the file, based on arrival
     * at the server, in UTC seconds.
     * </pre>
     *
     * <code>optional fixed64 start_timestamp = 1;</code>
     */
    public long getStartTimestamp() {
      return startTimestamp_;
    }

    public static final int END_TIMESTAMP_FIELD_NUMBER = 2;
    private long endTimestamp_;
    /**
     * <code>optional fixed64 end_timestamp = 2;</code>
     */
    public boolean hasEndTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional fixed64 end_timestamp = 2;</code>
     */
    public long getEndTimestamp() {
      return endTimestamp_;
    }

    public static final int REGION_FIELD_NUMBER = 3;
    private volatile java.lang.Object region_;
    /**
     * <pre>
     * Region from which these keys came (for example, MCC, however, some schemes
     * use e.g. ISO-3166-2. There's no apparent hard requirement by the protocol
     * for the contents here).
     * </pre>
     *
     * <code>optional string region = 3;</code>
     */
    public boolean hasRegion() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Region from which these keys came (for example, MCC, however, some schemes
     * use e.g. ISO-3166-2. There's no apparent hard requirement by the protocol
     * for the contents here).
     * </pre>
     *
     * <code>optional string region = 3;</code>
     */
    public java.lang.String getRegion() {
      java.lang.Object ref = region_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          region_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Region from which these keys came (for example, MCC, however, some schemes
     * use e.g. ISO-3166-2. There's no apparent hard requirement by the protocol
     * for the contents here).
     * </pre>
     *
     * <code>optional string region = 3;</code>
     */
    public com.google.protobuf.ByteString
        getRegionBytes() {
      java.lang.Object ref = region_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        region_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BATCH_NUM_FIELD_NUMBER = 4;
    private int batchNum_;
    /**
     * <pre>
     * Reserved for future use. Both batch_num and batch_size
     * must be set to a value of 1.
     * </pre>
     *
     * <code>optional int32 batch_num = 4;</code>
     */
    public boolean hasBatchNum() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Reserved for future use. Both batch_num and batch_size
     * must be set to a value of 1.
     * </pre>
     *
     * <code>optional int32 batch_num = 4;</code>
     */
    public int getBatchNum() {
      return batchNum_;
    }

    public static final int BATCH_SIZE_FIELD_NUMBER = 5;
    private int batchSize_;
    /**
     * <code>optional int32 batch_size = 5;</code>
     */
    public boolean hasBatchSize() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 batch_size = 5;</code>
     */
    public int getBatchSize() {
      return batchSize_;
    }

    public static final int SIGNATURE_INFOS_FIELD_NUMBER = 6;
    private java.util.List<com.pancast.dongle.gaen.Covidshield.SignatureInfo> signatureInfos_;
    /**
     * <pre>
     * Information about associated signatures.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
     */
    public java.util.List<com.pancast.dongle.gaen.Covidshield.SignatureInfo> getSignatureInfosList() {
      return signatureInfos_;
    }
    /**
     * <pre>
     * Information about associated signatures.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
     */
    public java.util.List<? extends com.pancast.dongle.gaen.Covidshield.SignatureInfoOrBuilder> 
        getSignatureInfosOrBuilderList() {
      return signatureInfos_;
    }
    /**
     * <pre>
     * Information about associated signatures.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
     */
    public int getSignatureInfosCount() {
      return signatureInfos_.size();
    }
    /**
     * <pre>
     * Information about associated signatures.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
     */
    public com.pancast.dongle.gaen.Covidshield.SignatureInfo getSignatureInfos(int index) {
      return signatureInfos_.get(index);
    }
    /**
     * <pre>
     * Information about associated signatures.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
     */
    public com.pancast.dongle.gaen.Covidshield.SignatureInfoOrBuilder getSignatureInfosOrBuilder(
        int index) {
      return signatureInfos_.get(index);
    }

    public static final int KEYS_FIELD_NUMBER = 7;
    private java.util.List<com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey> keys_;
    /**
     * <pre>
     * The temporary exposure keys themselves.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
     */
    public java.util.List<com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey> getKeysList() {
      return keys_;
    }
    /**
     * <pre>
     * The temporary exposure keys themselves.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
     */
    public java.util.List<? extends com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder> 
        getKeysOrBuilderList() {
      return keys_;
    }
    /**
     * <pre>
     * The temporary exposure keys themselves.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
     */
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <pre>
     * The temporary exposure keys themselves.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
     */
    public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey getKeys(int index) {
      return keys_.get(index);
    }
    /**
     * <pre>
     * The temporary exposure keys themselves.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
     */
    public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder getKeysOrBuilder(
        int index) {
      return keys_.get(index);
    }

    public static final int REVISED_KEYS_FIELD_NUMBER = 8;
    private java.util.List<com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey> revisedKeys_;
    /**
     * <pre>
     * Keys that have changed status from previous key archives,
     * including keys that are being revoked.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
     */
    public java.util.List<com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey> getRevisedKeysList() {
      return revisedKeys_;
    }
    /**
     * <pre>
     * Keys that have changed status from previous key archives,
     * including keys that are being revoked.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
     */
    public java.util.List<? extends com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder> 
        getRevisedKeysOrBuilderList() {
      return revisedKeys_;
    }
    /**
     * <pre>
     * Keys that have changed status from previous key archives,
     * including keys that are being revoked.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
     */
    public int getRevisedKeysCount() {
      return revisedKeys_.size();
    }
    /**
     * <pre>
     * Keys that have changed status from previous key archives,
     * including keys that are being revoked.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
     */
    public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey getRevisedKeys(int index) {
      return revisedKeys_.get(index);
    }
    /**
     * <pre>
     * Keys that have changed status from previous key archives,
     * including keys that are being revoked.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
     */
    public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder getRevisedKeysOrBuilder(
        int index) {
      return revisedKeys_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed64(1, startTimestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFixed64(2, endTimestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, region_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, batchNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, batchSize_);
      }
      for (int i = 0; i < signatureInfos_.size(); i++) {
        output.writeMessage(6, signatureInfos_.get(i));
      }
      for (int i = 0; i < keys_.size(); i++) {
        output.writeMessage(7, keys_.get(i));
      }
      for (int i = 0; i < revisedKeys_.size(); i++) {
        output.writeMessage(8, revisedKeys_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, startTimestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, endTimestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, region_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, batchNum_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, batchSize_);
      }
      for (int i = 0; i < signatureInfos_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, signatureInfos_.get(i));
      }
      for (int i = 0; i < keys_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, keys_.get(i));
      }
      for (int i = 0; i < revisedKeys_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, revisedKeys_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport)) {
        return super.equals(obj);
      }
      com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport other = (com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport) obj;

      boolean result = true;
      result = result && (hasStartTimestamp() == other.hasStartTimestamp());
      if (hasStartTimestamp()) {
        result = result && (getStartTimestamp()
            == other.getStartTimestamp());
      }
      result = result && (hasEndTimestamp() == other.hasEndTimestamp());
      if (hasEndTimestamp()) {
        result = result && (getEndTimestamp()
            == other.getEndTimestamp());
      }
      result = result && (hasRegion() == other.hasRegion());
      if (hasRegion()) {
        result = result && getRegion()
            .equals(other.getRegion());
      }
      result = result && (hasBatchNum() == other.hasBatchNum());
      if (hasBatchNum()) {
        result = result && (getBatchNum()
            == other.getBatchNum());
      }
      result = result && (hasBatchSize() == other.hasBatchSize());
      if (hasBatchSize()) {
        result = result && (getBatchSize()
            == other.getBatchSize());
      }
      result = result && getSignatureInfosList()
          .equals(other.getSignatureInfosList());
      result = result && getKeysList()
          .equals(other.getKeysList());
      result = result && getRevisedKeysList()
          .equals(other.getRevisedKeysList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStartTimestamp()) {
        hash = (37 * hash) + START_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getStartTimestamp());
      }
      if (hasEndTimestamp()) {
        hash = (37 * hash) + END_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getEndTimestamp());
      }
      if (hasRegion()) {
        hash = (37 * hash) + REGION_FIELD_NUMBER;
        hash = (53 * hash) + getRegion().hashCode();
      }
      if (hasBatchNum()) {
        hash = (37 * hash) + BATCH_NUM_FIELD_NUMBER;
        hash = (53 * hash) + getBatchNum();
      }
      if (hasBatchSize()) {
        hash = (37 * hash) + BATCH_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getBatchSize();
      }
      if (getSignatureInfosCount() > 0) {
        hash = (37 * hash) + SIGNATURE_INFOS_FIELD_NUMBER;
        hash = (53 * hash) + getSignatureInfosList().hashCode();
      }
      if (getKeysCount() > 0) {
        hash = (37 * hash) + KEYS_FIELD_NUMBER;
        hash = (53 * hash) + getKeysList().hashCode();
      }
      if (getRevisedKeysCount() > 0) {
        hash = (37 * hash) + REVISED_KEYS_FIELD_NUMBER;
        hash = (53 * hash) + getRevisedKeysList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.pancast.dongle.gaen.TemporaryExposureKeyExport}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.pancast.dongle.gaen.TemporaryExposureKeyExport)
        com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExportOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_TemporaryExposureKeyExport_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_TemporaryExposureKeyExport_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport.class, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport.Builder.class);
      }

      // Construct using com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSignatureInfosFieldBuilder();
          getKeysFieldBuilder();
          getRevisedKeysFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        startTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        endTimestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        region_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        batchNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        batchSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (signatureInfosBuilder_ == null) {
          signatureInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          signatureInfosBuilder_.clear();
        }
        if (keysBuilder_ == null) {
          keys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          keysBuilder_.clear();
        }
        if (revisedKeysBuilder_ == null) {
          revisedKeys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          revisedKeysBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_TemporaryExposureKeyExport_descriptor;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport getDefaultInstanceForType() {
        return com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport.getDefaultInstance();
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport build() {
        com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport buildPartial() {
        com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport result = new com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.startTimestamp_ = startTimestamp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.endTimestamp_ = endTimestamp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.region_ = region_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.batchNum_ = batchNum_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.batchSize_ = batchSize_;
        if (signatureInfosBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            signatureInfos_ = java.util.Collections.unmodifiableList(signatureInfos_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.signatureInfos_ = signatureInfos_;
        } else {
          result.signatureInfos_ = signatureInfosBuilder_.build();
        }
        if (keysBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            keys_ = java.util.Collections.unmodifiableList(keys_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.keys_ = keys_;
        } else {
          result.keys_ = keysBuilder_.build();
        }
        if (revisedKeysBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            revisedKeys_ = java.util.Collections.unmodifiableList(revisedKeys_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.revisedKeys_ = revisedKeys_;
        } else {
          result.revisedKeys_ = revisedKeysBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport) {
          return mergeFrom((com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport other) {
        if (other == com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport.getDefaultInstance()) return this;
        if (other.hasStartTimestamp()) {
          setStartTimestamp(other.getStartTimestamp());
        }
        if (other.hasEndTimestamp()) {
          setEndTimestamp(other.getEndTimestamp());
        }
        if (other.hasRegion()) {
          bitField0_ |= 0x00000004;
          region_ = other.region_;
          onChanged();
        }
        if (other.hasBatchNum()) {
          setBatchNum(other.getBatchNum());
        }
        if (other.hasBatchSize()) {
          setBatchSize(other.getBatchSize());
        }
        if (signatureInfosBuilder_ == null) {
          if (!other.signatureInfos_.isEmpty()) {
            if (signatureInfos_.isEmpty()) {
              signatureInfos_ = other.signatureInfos_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureSignatureInfosIsMutable();
              signatureInfos_.addAll(other.signatureInfos_);
            }
            onChanged();
          }
        } else {
          if (!other.signatureInfos_.isEmpty()) {
            if (signatureInfosBuilder_.isEmpty()) {
              signatureInfosBuilder_.dispose();
              signatureInfosBuilder_ = null;
              signatureInfos_ = other.signatureInfos_;
              bitField0_ = (bitField0_ & ~0x00000020);
              signatureInfosBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSignatureInfosFieldBuilder() : null;
            } else {
              signatureInfosBuilder_.addAllMessages(other.signatureInfos_);
            }
          }
        }
        if (keysBuilder_ == null) {
          if (!other.keys_.isEmpty()) {
            if (keys_.isEmpty()) {
              keys_ = other.keys_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureKeysIsMutable();
              keys_.addAll(other.keys_);
            }
            onChanged();
          }
        } else {
          if (!other.keys_.isEmpty()) {
            if (keysBuilder_.isEmpty()) {
              keysBuilder_.dispose();
              keysBuilder_ = null;
              keys_ = other.keys_;
              bitField0_ = (bitField0_ & ~0x00000040);
              keysBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getKeysFieldBuilder() : null;
            } else {
              keysBuilder_.addAllMessages(other.keys_);
            }
          }
        }
        if (revisedKeysBuilder_ == null) {
          if (!other.revisedKeys_.isEmpty()) {
            if (revisedKeys_.isEmpty()) {
              revisedKeys_ = other.revisedKeys_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureRevisedKeysIsMutable();
              revisedKeys_.addAll(other.revisedKeys_);
            }
            onChanged();
          }
        } else {
          if (!other.revisedKeys_.isEmpty()) {
            if (revisedKeysBuilder_.isEmpty()) {
              revisedKeysBuilder_.dispose();
              revisedKeysBuilder_ = null;
              revisedKeys_ = other.revisedKeys_;
              bitField0_ = (bitField0_ & ~0x00000080);
              revisedKeysBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRevisedKeysFieldBuilder() : null;
            } else {
              revisedKeysBuilder_.addAllMessages(other.revisedKeys_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long startTimestamp_ ;
      /**
       * <pre>
       * Time window of keys in the file, based on arrival
       * at the server, in UTC seconds.
       * </pre>
       *
       * <code>optional fixed64 start_timestamp = 1;</code>
       */
      public boolean hasStartTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Time window of keys in the file, based on arrival
       * at the server, in UTC seconds.
       * </pre>
       *
       * <code>optional fixed64 start_timestamp = 1;</code>
       */
      public long getStartTimestamp() {
        return startTimestamp_;
      }
      /**
       * <pre>
       * Time window of keys in the file, based on arrival
       * at the server, in UTC seconds.
       * </pre>
       *
       * <code>optional fixed64 start_timestamp = 1;</code>
       */
      public Builder setStartTimestamp(long value) {
        bitField0_ |= 0x00000001;
        startTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time window of keys in the file, based on arrival
       * at the server, in UTC seconds.
       * </pre>
       *
       * <code>optional fixed64 start_timestamp = 1;</code>
       */
      public Builder clearStartTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        startTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private long endTimestamp_ ;
      /**
       * <code>optional fixed64 end_timestamp = 2;</code>
       */
      public boolean hasEndTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional fixed64 end_timestamp = 2;</code>
       */
      public long getEndTimestamp() {
        return endTimestamp_;
      }
      /**
       * <code>optional fixed64 end_timestamp = 2;</code>
       */
      public Builder setEndTimestamp(long value) {
        bitField0_ |= 0x00000002;
        endTimestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 end_timestamp = 2;</code>
       */
      public Builder clearEndTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        endTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object region_ = "";
      /**
       * <pre>
       * Region from which these keys came (for example, MCC, however, some schemes
       * use e.g. ISO-3166-2. There's no apparent hard requirement by the protocol
       * for the contents here).
       * </pre>
       *
       * <code>optional string region = 3;</code>
       */
      public boolean hasRegion() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Region from which these keys came (for example, MCC, however, some schemes
       * use e.g. ISO-3166-2. There's no apparent hard requirement by the protocol
       * for the contents here).
       * </pre>
       *
       * <code>optional string region = 3;</code>
       */
      public java.lang.String getRegion() {
        java.lang.Object ref = region_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            region_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Region from which these keys came (for example, MCC, however, some schemes
       * use e.g. ISO-3166-2. There's no apparent hard requirement by the protocol
       * for the contents here).
       * </pre>
       *
       * <code>optional string region = 3;</code>
       */
      public com.google.protobuf.ByteString
          getRegionBytes() {
        java.lang.Object ref = region_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          region_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Region from which these keys came (for example, MCC, however, some schemes
       * use e.g. ISO-3166-2. There's no apparent hard requirement by the protocol
       * for the contents here).
       * </pre>
       *
       * <code>optional string region = 3;</code>
       */
      public Builder setRegion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        region_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Region from which these keys came (for example, MCC, however, some schemes
       * use e.g. ISO-3166-2. There's no apparent hard requirement by the protocol
       * for the contents here).
       * </pre>
       *
       * <code>optional string region = 3;</code>
       */
      public Builder clearRegion() {
        bitField0_ = (bitField0_ & ~0x00000004);
        region_ = getDefaultInstance().getRegion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Region from which these keys came (for example, MCC, however, some schemes
       * use e.g. ISO-3166-2. There's no apparent hard requirement by the protocol
       * for the contents here).
       * </pre>
       *
       * <code>optional string region = 3;</code>
       */
      public Builder setRegionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        region_ = value;
        onChanged();
        return this;
      }

      private int batchNum_ ;
      /**
       * <pre>
       * Reserved for future use. Both batch_num and batch_size
       * must be set to a value of 1.
       * </pre>
       *
       * <code>optional int32 batch_num = 4;</code>
       */
      public boolean hasBatchNum() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Reserved for future use. Both batch_num and batch_size
       * must be set to a value of 1.
       * </pre>
       *
       * <code>optional int32 batch_num = 4;</code>
       */
      public int getBatchNum() {
        return batchNum_;
      }
      /**
       * <pre>
       * Reserved for future use. Both batch_num and batch_size
       * must be set to a value of 1.
       * </pre>
       *
       * <code>optional int32 batch_num = 4;</code>
       */
      public Builder setBatchNum(int value) {
        bitField0_ |= 0x00000008;
        batchNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Reserved for future use. Both batch_num and batch_size
       * must be set to a value of 1.
       * </pre>
       *
       * <code>optional int32 batch_num = 4;</code>
       */
      public Builder clearBatchNum() {
        bitField0_ = (bitField0_ & ~0x00000008);
        batchNum_ = 0;
        onChanged();
        return this;
      }

      private int batchSize_ ;
      /**
       * <code>optional int32 batch_size = 5;</code>
       */
      public boolean hasBatchSize() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 batch_size = 5;</code>
       */
      public int getBatchSize() {
        return batchSize_;
      }
      /**
       * <code>optional int32 batch_size = 5;</code>
       */
      public Builder setBatchSize(int value) {
        bitField0_ |= 0x00000010;
        batchSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 batch_size = 5;</code>
       */
      public Builder clearBatchSize() {
        bitField0_ = (bitField0_ & ~0x00000010);
        batchSize_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.pancast.dongle.gaen.Covidshield.SignatureInfo> signatureInfos_ =
        java.util.Collections.emptyList();
      private void ensureSignatureInfosIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          signatureInfos_ = new java.util.ArrayList<com.pancast.dongle.gaen.Covidshield.SignatureInfo>(signatureInfos_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.pancast.dongle.gaen.Covidshield.SignatureInfo, com.pancast.dongle.gaen.Covidshield.SignatureInfo.Builder, com.pancast.dongle.gaen.Covidshield.SignatureInfoOrBuilder> signatureInfosBuilder_;

      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
       */
      public java.util.List<com.pancast.dongle.gaen.Covidshield.SignatureInfo> getSignatureInfosList() {
        if (signatureInfosBuilder_ == null) {
          return java.util.Collections.unmodifiableList(signatureInfos_);
        } else {
          return signatureInfosBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
       */
      public int getSignatureInfosCount() {
        if (signatureInfosBuilder_ == null) {
          return signatureInfos_.size();
        } else {
          return signatureInfosBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.SignatureInfo getSignatureInfos(int index) {
        if (signatureInfosBuilder_ == null) {
          return signatureInfos_.get(index);
        } else {
          return signatureInfosBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
       */
      public Builder setSignatureInfos(
          int index, com.pancast.dongle.gaen.Covidshield.SignatureInfo value) {
        if (signatureInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignatureInfosIsMutable();
          signatureInfos_.set(index, value);
          onChanged();
        } else {
          signatureInfosBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
       */
      public Builder setSignatureInfos(
          int index, com.pancast.dongle.gaen.Covidshield.SignatureInfo.Builder builderForValue) {
        if (signatureInfosBuilder_ == null) {
          ensureSignatureInfosIsMutable();
          signatureInfos_.set(index, builderForValue.build());
          onChanged();
        } else {
          signatureInfosBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
       */
      public Builder addSignatureInfos(com.pancast.dongle.gaen.Covidshield.SignatureInfo value) {
        if (signatureInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignatureInfosIsMutable();
          signatureInfos_.add(value);
          onChanged();
        } else {
          signatureInfosBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
       */
      public Builder addSignatureInfos(
          int index, com.pancast.dongle.gaen.Covidshield.SignatureInfo value) {
        if (signatureInfosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignatureInfosIsMutable();
          signatureInfos_.add(index, value);
          onChanged();
        } else {
          signatureInfosBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
       */
      public Builder addSignatureInfos(
          com.pancast.dongle.gaen.Covidshield.SignatureInfo.Builder builderForValue) {
        if (signatureInfosBuilder_ == null) {
          ensureSignatureInfosIsMutable();
          signatureInfos_.add(builderForValue.build());
          onChanged();
        } else {
          signatureInfosBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
       */
      public Builder addSignatureInfos(
          int index, com.pancast.dongle.gaen.Covidshield.SignatureInfo.Builder builderForValue) {
        if (signatureInfosBuilder_ == null) {
          ensureSignatureInfosIsMutable();
          signatureInfos_.add(index, builderForValue.build());
          onChanged();
        } else {
          signatureInfosBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
       */
      public Builder addAllSignatureInfos(
          java.lang.Iterable<? extends com.pancast.dongle.gaen.Covidshield.SignatureInfo> values) {
        if (signatureInfosBuilder_ == null) {
          ensureSignatureInfosIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, signatureInfos_);
          onChanged();
        } else {
          signatureInfosBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
       */
      public Builder clearSignatureInfos() {
        if (signatureInfosBuilder_ == null) {
          signatureInfos_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          signatureInfosBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
       */
      public Builder removeSignatureInfos(int index) {
        if (signatureInfosBuilder_ == null) {
          ensureSignatureInfosIsMutable();
          signatureInfos_.remove(index);
          onChanged();
        } else {
          signatureInfosBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.SignatureInfo.Builder getSignatureInfosBuilder(
          int index) {
        return getSignatureInfosFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.SignatureInfoOrBuilder getSignatureInfosOrBuilder(
          int index) {
        if (signatureInfosBuilder_ == null) {
          return signatureInfos_.get(index);  } else {
          return signatureInfosBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
       */
      public java.util.List<? extends com.pancast.dongle.gaen.Covidshield.SignatureInfoOrBuilder> 
           getSignatureInfosOrBuilderList() {
        if (signatureInfosBuilder_ != null) {
          return signatureInfosBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(signatureInfos_);
        }
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.SignatureInfo.Builder addSignatureInfosBuilder() {
        return getSignatureInfosFieldBuilder().addBuilder(
            com.pancast.dongle.gaen.Covidshield.SignatureInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.SignatureInfo.Builder addSignatureInfosBuilder(
          int index) {
        return getSignatureInfosFieldBuilder().addBuilder(
            index, com.pancast.dongle.gaen.Covidshield.SignatureInfo.getDefaultInstance());
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.SignatureInfo signature_infos = 6;</code>
       */
      public java.util.List<com.pancast.dongle.gaen.Covidshield.SignatureInfo.Builder> 
           getSignatureInfosBuilderList() {
        return getSignatureInfosFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.pancast.dongle.gaen.Covidshield.SignatureInfo, com.pancast.dongle.gaen.Covidshield.SignatureInfo.Builder, com.pancast.dongle.gaen.Covidshield.SignatureInfoOrBuilder> 
          getSignatureInfosFieldBuilder() {
        if (signatureInfosBuilder_ == null) {
          signatureInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.pancast.dongle.gaen.Covidshield.SignatureInfo, com.pancast.dongle.gaen.Covidshield.SignatureInfo.Builder, com.pancast.dongle.gaen.Covidshield.SignatureInfoOrBuilder>(
                  signatureInfos_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          signatureInfos_ = null;
        }
        return signatureInfosBuilder_;
      }

      private java.util.List<com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey> keys_ =
        java.util.Collections.emptyList();
      private void ensureKeysIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          keys_ = new java.util.ArrayList<com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey>(keys_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder> keysBuilder_;

      /**
       * <pre>
       * The temporary exposure keys themselves.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
       */
      public java.util.List<com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey> getKeysList() {
        if (keysBuilder_ == null) {
          return java.util.Collections.unmodifiableList(keys_);
        } else {
          return keysBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The temporary exposure keys themselves.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
       */
      public int getKeysCount() {
        if (keysBuilder_ == null) {
          return keys_.size();
        } else {
          return keysBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The temporary exposure keys themselves.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey getKeys(int index) {
        if (keysBuilder_ == null) {
          return keys_.get(index);
        } else {
          return keysBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The temporary exposure keys themselves.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
       */
      public Builder setKeys(
          int index, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey value) {
        if (keysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKeysIsMutable();
          keys_.set(index, value);
          onChanged();
        } else {
          keysBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The temporary exposure keys themselves.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
       */
      public Builder setKeys(
          int index, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder builderForValue) {
        if (keysBuilder_ == null) {
          ensureKeysIsMutable();
          keys_.set(index, builderForValue.build());
          onChanged();
        } else {
          keysBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The temporary exposure keys themselves.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
       */
      public Builder addKeys(com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey value) {
        if (keysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKeysIsMutable();
          keys_.add(value);
          onChanged();
        } else {
          keysBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The temporary exposure keys themselves.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
       */
      public Builder addKeys(
          int index, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey value) {
        if (keysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKeysIsMutable();
          keys_.add(index, value);
          onChanged();
        } else {
          keysBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The temporary exposure keys themselves.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
       */
      public Builder addKeys(
          com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder builderForValue) {
        if (keysBuilder_ == null) {
          ensureKeysIsMutable();
          keys_.add(builderForValue.build());
          onChanged();
        } else {
          keysBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The temporary exposure keys themselves.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
       */
      public Builder addKeys(
          int index, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder builderForValue) {
        if (keysBuilder_ == null) {
          ensureKeysIsMutable();
          keys_.add(index, builderForValue.build());
          onChanged();
        } else {
          keysBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The temporary exposure keys themselves.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
       */
      public Builder addAllKeys(
          java.lang.Iterable<? extends com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey> values) {
        if (keysBuilder_ == null) {
          ensureKeysIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, keys_);
          onChanged();
        } else {
          keysBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The temporary exposure keys themselves.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
       */
      public Builder clearKeys() {
        if (keysBuilder_ == null) {
          keys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          keysBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The temporary exposure keys themselves.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
       */
      public Builder removeKeys(int index) {
        if (keysBuilder_ == null) {
          ensureKeysIsMutable();
          keys_.remove(index);
          onChanged();
        } else {
          keysBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The temporary exposure keys themselves.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder getKeysBuilder(
          int index) {
        return getKeysFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The temporary exposure keys themselves.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder getKeysOrBuilder(
          int index) {
        if (keysBuilder_ == null) {
          return keys_.get(index);  } else {
          return keysBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The temporary exposure keys themselves.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
       */
      public java.util.List<? extends com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder> 
           getKeysOrBuilderList() {
        if (keysBuilder_ != null) {
          return keysBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(keys_);
        }
      }
      /**
       * <pre>
       * The temporary exposure keys themselves.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder addKeysBuilder() {
        return getKeysFieldBuilder().addBuilder(
            com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.getDefaultInstance());
      }
      /**
       * <pre>
       * The temporary exposure keys themselves.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder addKeysBuilder(
          int index) {
        return getKeysFieldBuilder().addBuilder(
            index, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.getDefaultInstance());
      }
      /**
       * <pre>
       * The temporary exposure keys themselves.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey keys = 7;</code>
       */
      public java.util.List<com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder> 
           getKeysBuilderList() {
        return getKeysFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder> 
          getKeysFieldBuilder() {
        if (keysBuilder_ == null) {
          keysBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder>(
                  keys_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          keys_ = null;
        }
        return keysBuilder_;
      }

      private java.util.List<com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey> revisedKeys_ =
        java.util.Collections.emptyList();
      private void ensureRevisedKeysIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          revisedKeys_ = new java.util.ArrayList<com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey>(revisedKeys_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder> revisedKeysBuilder_;

      /**
       * <pre>
       * Keys that have changed status from previous key archives,
       * including keys that are being revoked.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
       */
      public java.util.List<com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey> getRevisedKeysList() {
        if (revisedKeysBuilder_ == null) {
          return java.util.Collections.unmodifiableList(revisedKeys_);
        } else {
          return revisedKeysBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Keys that have changed status from previous key archives,
       * including keys that are being revoked.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
       */
      public int getRevisedKeysCount() {
        if (revisedKeysBuilder_ == null) {
          return revisedKeys_.size();
        } else {
          return revisedKeysBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Keys that have changed status from previous key archives,
       * including keys that are being revoked.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey getRevisedKeys(int index) {
        if (revisedKeysBuilder_ == null) {
          return revisedKeys_.get(index);
        } else {
          return revisedKeysBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Keys that have changed status from previous key archives,
       * including keys that are being revoked.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
       */
      public Builder setRevisedKeys(
          int index, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey value) {
        if (revisedKeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRevisedKeysIsMutable();
          revisedKeys_.set(index, value);
          onChanged();
        } else {
          revisedKeysBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Keys that have changed status from previous key archives,
       * including keys that are being revoked.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
       */
      public Builder setRevisedKeys(
          int index, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder builderForValue) {
        if (revisedKeysBuilder_ == null) {
          ensureRevisedKeysIsMutable();
          revisedKeys_.set(index, builderForValue.build());
          onChanged();
        } else {
          revisedKeysBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Keys that have changed status from previous key archives,
       * including keys that are being revoked.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
       */
      public Builder addRevisedKeys(com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey value) {
        if (revisedKeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRevisedKeysIsMutable();
          revisedKeys_.add(value);
          onChanged();
        } else {
          revisedKeysBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Keys that have changed status from previous key archives,
       * including keys that are being revoked.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
       */
      public Builder addRevisedKeys(
          int index, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey value) {
        if (revisedKeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRevisedKeysIsMutable();
          revisedKeys_.add(index, value);
          onChanged();
        } else {
          revisedKeysBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Keys that have changed status from previous key archives,
       * including keys that are being revoked.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
       */
      public Builder addRevisedKeys(
          com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder builderForValue) {
        if (revisedKeysBuilder_ == null) {
          ensureRevisedKeysIsMutable();
          revisedKeys_.add(builderForValue.build());
          onChanged();
        } else {
          revisedKeysBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Keys that have changed status from previous key archives,
       * including keys that are being revoked.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
       */
      public Builder addRevisedKeys(
          int index, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder builderForValue) {
        if (revisedKeysBuilder_ == null) {
          ensureRevisedKeysIsMutable();
          revisedKeys_.add(index, builderForValue.build());
          onChanged();
        } else {
          revisedKeysBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Keys that have changed status from previous key archives,
       * including keys that are being revoked.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
       */
      public Builder addAllRevisedKeys(
          java.lang.Iterable<? extends com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey> values) {
        if (revisedKeysBuilder_ == null) {
          ensureRevisedKeysIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, revisedKeys_);
          onChanged();
        } else {
          revisedKeysBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Keys that have changed status from previous key archives,
       * including keys that are being revoked.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
       */
      public Builder clearRevisedKeys() {
        if (revisedKeysBuilder_ == null) {
          revisedKeys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          revisedKeysBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Keys that have changed status from previous key archives,
       * including keys that are being revoked.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
       */
      public Builder removeRevisedKeys(int index) {
        if (revisedKeysBuilder_ == null) {
          ensureRevisedKeysIsMutable();
          revisedKeys_.remove(index);
          onChanged();
        } else {
          revisedKeysBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Keys that have changed status from previous key archives,
       * including keys that are being revoked.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder getRevisedKeysBuilder(
          int index) {
        return getRevisedKeysFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Keys that have changed status from previous key archives,
       * including keys that are being revoked.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder getRevisedKeysOrBuilder(
          int index) {
        if (revisedKeysBuilder_ == null) {
          return revisedKeys_.get(index);  } else {
          return revisedKeysBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Keys that have changed status from previous key archives,
       * including keys that are being revoked.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
       */
      public java.util.List<? extends com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder> 
           getRevisedKeysOrBuilderList() {
        if (revisedKeysBuilder_ != null) {
          return revisedKeysBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(revisedKeys_);
        }
      }
      /**
       * <pre>
       * Keys that have changed status from previous key archives,
       * including keys that are being revoked.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder addRevisedKeysBuilder() {
        return getRevisedKeysFieldBuilder().addBuilder(
            com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.getDefaultInstance());
      }
      /**
       * <pre>
       * Keys that have changed status from previous key archives,
       * including keys that are being revoked.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder addRevisedKeysBuilder(
          int index) {
        return getRevisedKeysFieldBuilder().addBuilder(
            index, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.getDefaultInstance());
      }
      /**
       * <pre>
       * Keys that have changed status from previous key archives,
       * including keys that are being revoked.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TemporaryExposureKey revised_keys = 8;</code>
       */
      public java.util.List<com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder> 
           getRevisedKeysBuilderList() {
        return getRevisedKeysFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder> 
          getRevisedKeysFieldBuilder() {
        if (revisedKeysBuilder_ == null) {
          revisedKeysBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder>(
                  revisedKeys_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          revisedKeys_ = null;
        }
        return revisedKeysBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.pancast.dongle.gaen.TemporaryExposureKeyExport)
    }

    // @@protoc_insertion_point(class_scope:com.pancast.dongle.gaen.TemporaryExposureKeyExport)
    private static final com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport();
    }

    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TemporaryExposureKeyExport>
        PARSER = new com.google.protobuf.AbstractParser<TemporaryExposureKeyExport>() {
      @java.lang.Override
      public TemporaryExposureKeyExport parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TemporaryExposureKeyExport(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TemporaryExposureKeyExport> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TemporaryExposureKeyExport> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyExport getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignatureInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.pancast.dongle.gaen.SignatureInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Key version in case the EN server signing key is rotated.
     * </pre>
     *
     * <code>optional string verification_key_version = 3;</code>
     */
    boolean hasVerificationKeyVersion();
    /**
     * <pre>
     * Key version in case the EN server signing key is rotated.
     * </pre>
     *
     * <code>optional string verification_key_version = 3;</code>
     */
    java.lang.String getVerificationKeyVersion();
    /**
     * <pre>
     * Key version in case the EN server signing key is rotated.
     * </pre>
     *
     * <code>optional string verification_key_version = 3;</code>
     */
    com.google.protobuf.ByteString
        getVerificationKeyVersionBytes();

    /**
     * <pre>
     * Additional information to uniquely identify the public key associated with
     * the EN server's signing key (for example, the EN server might serve the
     * app from different countries with different keys).
     *
     * Three-digit mobile country code (MCC) for validating the key file.
     * If a region has more than one MCC, the server can choose
     * which MCC to use. This value does not have to match the client's MCC,
     * but must correspond to one of the supported MCCs for its region.
     * </pre>
     *
     * <code>optional string verification_key_id = 4;</code>
     */
    boolean hasVerificationKeyId();
    /**
     * <pre>
     * Additional information to uniquely identify the public key associated with
     * the EN server's signing key (for example, the EN server might serve the
     * app from different countries with different keys).
     *
     * Three-digit mobile country code (MCC) for validating the key file.
     * If a region has more than one MCC, the server can choose
     * which MCC to use. This value does not have to match the client's MCC,
     * but must correspond to one of the supported MCCs for its region.
     * </pre>
     *
     * <code>optional string verification_key_id = 4;</code>
     */
    java.lang.String getVerificationKeyId();
    /**
     * <pre>
     * Additional information to uniquely identify the public key associated with
     * the EN server's signing key (for example, the EN server might serve the
     * app from different countries with different keys).
     *
     * Three-digit mobile country code (MCC) for validating the key file.
     * If a region has more than one MCC, the server can choose
     * which MCC to use. This value does not have to match the client's MCC,
     * but must correspond to one of the supported MCCs for its region.
     * </pre>
     *
     * <code>optional string verification_key_id = 4;</code>
     */
    com.google.protobuf.ByteString
        getVerificationKeyIdBytes();

    /**
     * <pre>
     * All keys must be signed using the SHA-256 with ECDSA algorithm.
     * This field must contain the string "1.2.840.10045.4.3.2".
     * </pre>
     *
     * <code>optional string signature_algorithm = 5;</code>
     */
    boolean hasSignatureAlgorithm();
    /**
     * <pre>
     * All keys must be signed using the SHA-256 with ECDSA algorithm.
     * This field must contain the string "1.2.840.10045.4.3.2".
     * </pre>
     *
     * <code>optional string signature_algorithm = 5;</code>
     */
    java.lang.String getSignatureAlgorithm();
    /**
     * <pre>
     * All keys must be signed using the SHA-256 with ECDSA algorithm.
     * This field must contain the string "1.2.840.10045.4.3.2".
     * </pre>
     *
     * <code>optional string signature_algorithm = 5;</code>
     */
    com.google.protobuf.ByteString
        getSignatureAlgorithmBytes();
  }
  /**
   * Protobuf type {@code com.pancast.dongle.gaen.SignatureInfo}
   */
  public  static final class SignatureInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.pancast.dongle.gaen.SignatureInfo)
      SignatureInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignatureInfo.newBuilder() to construct.
    private SignatureInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignatureInfo() {
      verificationKeyVersion_ = "";
      verificationKeyId_ = "";
      signatureAlgorithm_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignatureInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              verificationKeyVersion_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              verificationKeyId_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              signatureAlgorithm_ = bs;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_SignatureInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_SignatureInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pancast.dongle.gaen.Covidshield.SignatureInfo.class, com.pancast.dongle.gaen.Covidshield.SignatureInfo.Builder.class);
    }

    private int bitField0_;
    public static final int VERIFICATION_KEY_VERSION_FIELD_NUMBER = 3;
    private volatile java.lang.Object verificationKeyVersion_;
    /**
     * <pre>
     * Key version in case the EN server signing key is rotated.
     * </pre>
     *
     * <code>optional string verification_key_version = 3;</code>
     */
    public boolean hasVerificationKeyVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Key version in case the EN server signing key is rotated.
     * </pre>
     *
     * <code>optional string verification_key_version = 3;</code>
     */
    public java.lang.String getVerificationKeyVersion() {
      java.lang.Object ref = verificationKeyVersion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          verificationKeyVersion_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Key version in case the EN server signing key is rotated.
     * </pre>
     *
     * <code>optional string verification_key_version = 3;</code>
     */
    public com.google.protobuf.ByteString
        getVerificationKeyVersionBytes() {
      java.lang.Object ref = verificationKeyVersion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        verificationKeyVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERIFICATION_KEY_ID_FIELD_NUMBER = 4;
    private volatile java.lang.Object verificationKeyId_;
    /**
     * <pre>
     * Additional information to uniquely identify the public key associated with
     * the EN server's signing key (for example, the EN server might serve the
     * app from different countries with different keys).
     *
     * Three-digit mobile country code (MCC) for validating the key file.
     * If a region has more than one MCC, the server can choose
     * which MCC to use. This value does not have to match the client's MCC,
     * but must correspond to one of the supported MCCs for its region.
     * </pre>
     *
     * <code>optional string verification_key_id = 4;</code>
     */
    public boolean hasVerificationKeyId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Additional information to uniquely identify the public key associated with
     * the EN server's signing key (for example, the EN server might serve the
     * app from different countries with different keys).
     *
     * Three-digit mobile country code (MCC) for validating the key file.
     * If a region has more than one MCC, the server can choose
     * which MCC to use. This value does not have to match the client's MCC,
     * but must correspond to one of the supported MCCs for its region.
     * </pre>
     *
     * <code>optional string verification_key_id = 4;</code>
     */
    public java.lang.String getVerificationKeyId() {
      java.lang.Object ref = verificationKeyId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          verificationKeyId_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Additional information to uniquely identify the public key associated with
     * the EN server's signing key (for example, the EN server might serve the
     * app from different countries with different keys).
     *
     * Three-digit mobile country code (MCC) for validating the key file.
     * If a region has more than one MCC, the server can choose
     * which MCC to use. This value does not have to match the client's MCC,
     * but must correspond to one of the supported MCCs for its region.
     * </pre>
     *
     * <code>optional string verification_key_id = 4;</code>
     */
    public com.google.protobuf.ByteString
        getVerificationKeyIdBytes() {
      java.lang.Object ref = verificationKeyId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        verificationKeyId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SIGNATURE_ALGORITHM_FIELD_NUMBER = 5;
    private volatile java.lang.Object signatureAlgorithm_;
    /**
     * <pre>
     * All keys must be signed using the SHA-256 with ECDSA algorithm.
     * This field must contain the string "1.2.840.10045.4.3.2".
     * </pre>
     *
     * <code>optional string signature_algorithm = 5;</code>
     */
    public boolean hasSignatureAlgorithm() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * All keys must be signed using the SHA-256 with ECDSA algorithm.
     * This field must contain the string "1.2.840.10045.4.3.2".
     * </pre>
     *
     * <code>optional string signature_algorithm = 5;</code>
     */
    public java.lang.String getSignatureAlgorithm() {
      java.lang.Object ref = signatureAlgorithm_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          signatureAlgorithm_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * All keys must be signed using the SHA-256 with ECDSA algorithm.
     * This field must contain the string "1.2.840.10045.4.3.2".
     * </pre>
     *
     * <code>optional string signature_algorithm = 5;</code>
     */
    public com.google.protobuf.ByteString
        getSignatureAlgorithmBytes() {
      java.lang.Object ref = signatureAlgorithm_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        signatureAlgorithm_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, verificationKeyVersion_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, verificationKeyId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, signatureAlgorithm_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, verificationKeyVersion_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, verificationKeyId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, signatureAlgorithm_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.pancast.dongle.gaen.Covidshield.SignatureInfo)) {
        return super.equals(obj);
      }
      com.pancast.dongle.gaen.Covidshield.SignatureInfo other = (com.pancast.dongle.gaen.Covidshield.SignatureInfo) obj;

      boolean result = true;
      result = result && (hasVerificationKeyVersion() == other.hasVerificationKeyVersion());
      if (hasVerificationKeyVersion()) {
        result = result && getVerificationKeyVersion()
            .equals(other.getVerificationKeyVersion());
      }
      result = result && (hasVerificationKeyId() == other.hasVerificationKeyId());
      if (hasVerificationKeyId()) {
        result = result && getVerificationKeyId()
            .equals(other.getVerificationKeyId());
      }
      result = result && (hasSignatureAlgorithm() == other.hasSignatureAlgorithm());
      if (hasSignatureAlgorithm()) {
        result = result && getSignatureAlgorithm()
            .equals(other.getSignatureAlgorithm());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasVerificationKeyVersion()) {
        hash = (37 * hash) + VERIFICATION_KEY_VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getVerificationKeyVersion().hashCode();
      }
      if (hasVerificationKeyId()) {
        hash = (37 * hash) + VERIFICATION_KEY_ID_FIELD_NUMBER;
        hash = (53 * hash) + getVerificationKeyId().hashCode();
      }
      if (hasSignatureAlgorithm()) {
        hash = (37 * hash) + SIGNATURE_ALGORITHM_FIELD_NUMBER;
        hash = (53 * hash) + getSignatureAlgorithm().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.pancast.dongle.gaen.Covidshield.SignatureInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.SignatureInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.SignatureInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.SignatureInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.SignatureInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.SignatureInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.SignatureInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.SignatureInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.SignatureInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.SignatureInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.SignatureInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.SignatureInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.pancast.dongle.gaen.Covidshield.SignatureInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.pancast.dongle.gaen.SignatureInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.pancast.dongle.gaen.SignatureInfo)
        com.pancast.dongle.gaen.Covidshield.SignatureInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_SignatureInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_SignatureInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.pancast.dongle.gaen.Covidshield.SignatureInfo.class, com.pancast.dongle.gaen.Covidshield.SignatureInfo.Builder.class);
      }

      // Construct using com.pancast.dongle.gaen.Covidshield.SignatureInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        verificationKeyVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        verificationKeyId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        signatureAlgorithm_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_SignatureInfo_descriptor;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.SignatureInfo getDefaultInstanceForType() {
        return com.pancast.dongle.gaen.Covidshield.SignatureInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.SignatureInfo build() {
        com.pancast.dongle.gaen.Covidshield.SignatureInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.SignatureInfo buildPartial() {
        com.pancast.dongle.gaen.Covidshield.SignatureInfo result = new com.pancast.dongle.gaen.Covidshield.SignatureInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.verificationKeyVersion_ = verificationKeyVersion_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.verificationKeyId_ = verificationKeyId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.signatureAlgorithm_ = signatureAlgorithm_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pancast.dongle.gaen.Covidshield.SignatureInfo) {
          return mergeFrom((com.pancast.dongle.gaen.Covidshield.SignatureInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.pancast.dongle.gaen.Covidshield.SignatureInfo other) {
        if (other == com.pancast.dongle.gaen.Covidshield.SignatureInfo.getDefaultInstance()) return this;
        if (other.hasVerificationKeyVersion()) {
          bitField0_ |= 0x00000001;
          verificationKeyVersion_ = other.verificationKeyVersion_;
          onChanged();
        }
        if (other.hasVerificationKeyId()) {
          bitField0_ |= 0x00000002;
          verificationKeyId_ = other.verificationKeyId_;
          onChanged();
        }
        if (other.hasSignatureAlgorithm()) {
          bitField0_ |= 0x00000004;
          signatureAlgorithm_ = other.signatureAlgorithm_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.pancast.dongle.gaen.Covidshield.SignatureInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.pancast.dongle.gaen.Covidshield.SignatureInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object verificationKeyVersion_ = "";
      /**
       * <pre>
       * Key version in case the EN server signing key is rotated.
       * </pre>
       *
       * <code>optional string verification_key_version = 3;</code>
       */
      public boolean hasVerificationKeyVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Key version in case the EN server signing key is rotated.
       * </pre>
       *
       * <code>optional string verification_key_version = 3;</code>
       */
      public java.lang.String getVerificationKeyVersion() {
        java.lang.Object ref = verificationKeyVersion_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            verificationKeyVersion_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Key version in case the EN server signing key is rotated.
       * </pre>
       *
       * <code>optional string verification_key_version = 3;</code>
       */
      public com.google.protobuf.ByteString
          getVerificationKeyVersionBytes() {
        java.lang.Object ref = verificationKeyVersion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          verificationKeyVersion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Key version in case the EN server signing key is rotated.
       * </pre>
       *
       * <code>optional string verification_key_version = 3;</code>
       */
      public Builder setVerificationKeyVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        verificationKeyVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Key version in case the EN server signing key is rotated.
       * </pre>
       *
       * <code>optional string verification_key_version = 3;</code>
       */
      public Builder clearVerificationKeyVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        verificationKeyVersion_ = getDefaultInstance().getVerificationKeyVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Key version in case the EN server signing key is rotated.
       * </pre>
       *
       * <code>optional string verification_key_version = 3;</code>
       */
      public Builder setVerificationKeyVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        verificationKeyVersion_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object verificationKeyId_ = "";
      /**
       * <pre>
       * Additional information to uniquely identify the public key associated with
       * the EN server's signing key (for example, the EN server might serve the
       * app from different countries with different keys).
       *
       * Three-digit mobile country code (MCC) for validating the key file.
       * If a region has more than one MCC, the server can choose
       * which MCC to use. This value does not have to match the client's MCC,
       * but must correspond to one of the supported MCCs for its region.
       * </pre>
       *
       * <code>optional string verification_key_id = 4;</code>
       */
      public boolean hasVerificationKeyId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Additional information to uniquely identify the public key associated with
       * the EN server's signing key (for example, the EN server might serve the
       * app from different countries with different keys).
       *
       * Three-digit mobile country code (MCC) for validating the key file.
       * If a region has more than one MCC, the server can choose
       * which MCC to use. This value does not have to match the client's MCC,
       * but must correspond to one of the supported MCCs for its region.
       * </pre>
       *
       * <code>optional string verification_key_id = 4;</code>
       */
      public java.lang.String getVerificationKeyId() {
        java.lang.Object ref = verificationKeyId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            verificationKeyId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Additional information to uniquely identify the public key associated with
       * the EN server's signing key (for example, the EN server might serve the
       * app from different countries with different keys).
       *
       * Three-digit mobile country code (MCC) for validating the key file.
       * If a region has more than one MCC, the server can choose
       * which MCC to use. This value does not have to match the client's MCC,
       * but must correspond to one of the supported MCCs for its region.
       * </pre>
       *
       * <code>optional string verification_key_id = 4;</code>
       */
      public com.google.protobuf.ByteString
          getVerificationKeyIdBytes() {
        java.lang.Object ref = verificationKeyId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          verificationKeyId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Additional information to uniquely identify the public key associated with
       * the EN server's signing key (for example, the EN server might serve the
       * app from different countries with different keys).
       *
       * Three-digit mobile country code (MCC) for validating the key file.
       * If a region has more than one MCC, the server can choose
       * which MCC to use. This value does not have to match the client's MCC,
       * but must correspond to one of the supported MCCs for its region.
       * </pre>
       *
       * <code>optional string verification_key_id = 4;</code>
       */
      public Builder setVerificationKeyId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        verificationKeyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Additional information to uniquely identify the public key associated with
       * the EN server's signing key (for example, the EN server might serve the
       * app from different countries with different keys).
       *
       * Three-digit mobile country code (MCC) for validating the key file.
       * If a region has more than one MCC, the server can choose
       * which MCC to use. This value does not have to match the client's MCC,
       * but must correspond to one of the supported MCCs for its region.
       * </pre>
       *
       * <code>optional string verification_key_id = 4;</code>
       */
      public Builder clearVerificationKeyId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        verificationKeyId_ = getDefaultInstance().getVerificationKeyId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Additional information to uniquely identify the public key associated with
       * the EN server's signing key (for example, the EN server might serve the
       * app from different countries with different keys).
       *
       * Three-digit mobile country code (MCC) for validating the key file.
       * If a region has more than one MCC, the server can choose
       * which MCC to use. This value does not have to match the client's MCC,
       * but must correspond to one of the supported MCCs for its region.
       * </pre>
       *
       * <code>optional string verification_key_id = 4;</code>
       */
      public Builder setVerificationKeyIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        verificationKeyId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object signatureAlgorithm_ = "";
      /**
       * <pre>
       * All keys must be signed using the SHA-256 with ECDSA algorithm.
       * This field must contain the string "1.2.840.10045.4.3.2".
       * </pre>
       *
       * <code>optional string signature_algorithm = 5;</code>
       */
      public boolean hasSignatureAlgorithm() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * All keys must be signed using the SHA-256 with ECDSA algorithm.
       * This field must contain the string "1.2.840.10045.4.3.2".
       * </pre>
       *
       * <code>optional string signature_algorithm = 5;</code>
       */
      public java.lang.String getSignatureAlgorithm() {
        java.lang.Object ref = signatureAlgorithm_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            signatureAlgorithm_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * All keys must be signed using the SHA-256 with ECDSA algorithm.
       * This field must contain the string "1.2.840.10045.4.3.2".
       * </pre>
       *
       * <code>optional string signature_algorithm = 5;</code>
       */
      public com.google.protobuf.ByteString
          getSignatureAlgorithmBytes() {
        java.lang.Object ref = signatureAlgorithm_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          signatureAlgorithm_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * All keys must be signed using the SHA-256 with ECDSA algorithm.
       * This field must contain the string "1.2.840.10045.4.3.2".
       * </pre>
       *
       * <code>optional string signature_algorithm = 5;</code>
       */
      public Builder setSignatureAlgorithm(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        signatureAlgorithm_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All keys must be signed using the SHA-256 with ECDSA algorithm.
       * This field must contain the string "1.2.840.10045.4.3.2".
       * </pre>
       *
       * <code>optional string signature_algorithm = 5;</code>
       */
      public Builder clearSignatureAlgorithm() {
        bitField0_ = (bitField0_ & ~0x00000004);
        signatureAlgorithm_ = getDefaultInstance().getSignatureAlgorithm();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * All keys must be signed using the SHA-256 with ECDSA algorithm.
       * This field must contain the string "1.2.840.10045.4.3.2".
       * </pre>
       *
       * <code>optional string signature_algorithm = 5;</code>
       */
      public Builder setSignatureAlgorithmBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        signatureAlgorithm_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.pancast.dongle.gaen.SignatureInfo)
    }

    // @@protoc_insertion_point(class_scope:com.pancast.dongle.gaen.SignatureInfo)
    private static final com.pancast.dongle.gaen.Covidshield.SignatureInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.pancast.dongle.gaen.Covidshield.SignatureInfo();
    }

    public static com.pancast.dongle.gaen.Covidshield.SignatureInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SignatureInfo>
        PARSER = new com.google.protobuf.AbstractParser<SignatureInfo>() {
      @java.lang.Override
      public SignatureInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignatureInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignatureInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignatureInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.pancast.dongle.gaen.Covidshield.SignatureInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TemporaryExposureKeyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.pancast.dongle.gaen.TemporaryExposureKey)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Temporary exposure key.
     * </pre>
     *
     * <code>optional bytes key_data = 1;</code>
     */
    boolean hasKeyData();
    /**
     * <pre>
     * Temporary exposure key.
     * </pre>
     *
     * <code>optional bytes key_data = 1;</code>
     */
    com.google.protobuf.ByteString getKeyData();

    /**
     * <pre>
     * Varying risk associated with a key depending on the diagnosis method.
     * </pre>
     *
     * <code>optional int32 transmission_risk_level = 2;</code>
     */
    boolean hasTransmissionRiskLevel();
    /**
     * <pre>
     * Varying risk associated with a key depending on the diagnosis method.
     * </pre>
     *
     * <code>optional int32 transmission_risk_level = 2;</code>
     */
    int getTransmissionRiskLevel();

    /**
     * <pre>
     * Number representing the beginning interval for temporary exposure
     * key validity (ENIntervalNumber).
     * </pre>
     *
     * <code>optional int32 rolling_start_interval_number = 3;</code>
     */
    boolean hasRollingStartIntervalNumber();
    /**
     * <pre>
     * Number representing the beginning interval for temporary exposure
     * key validity (ENIntervalNumber).
     * </pre>
     *
     * <code>optional int32 rolling_start_interval_number = 3;</code>
     */
    int getRollingStartIntervalNumber();

    /**
     * <pre>
     * Number of intervals in a period.
     * </pre>
     *
     * <code>optional int32 rolling_period = 4 [default = 144];</code>
     */
    boolean hasRollingPeriod();
    /**
     * <pre>
     * Number of intervals in a period.
     * </pre>
     *
     * <code>optional int32 rolling_period = 4 [default = 144];</code>
     */
    int getRollingPeriod();

    /**
     * <pre>
     * Type of diagnosis associated with a key.
     * </pre>
     *
     * <code>optional .com.pancast.dongle.gaen.TemporaryExposureKey.ReportType report_type = 5;</code>
     */
    boolean hasReportType();
    /**
     * <pre>
     * Type of diagnosis associated with a key.
     * </pre>
     *
     * <code>optional .com.pancast.dongle.gaen.TemporaryExposureKey.ReportType report_type = 5;</code>
     */
    com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.ReportType getReportType();

    /**
     * <pre>
     * Number of days elapsed between symptom onset and the TEK being used.
     * E.g. 2 means TEK is from 2 days after onset of symptoms.
     * Valid values range is from -14 to 14.
     * </pre>
     *
     * <code>optional sint32 days_since_onset_of_symptoms = 6;</code>
     */
    boolean hasDaysSinceOnsetOfSymptoms();
    /**
     * <pre>
     * Number of days elapsed between symptom onset and the TEK being used.
     * E.g. 2 means TEK is from 2 days after onset of symptoms.
     * Valid values range is from -14 to 14.
     * </pre>
     *
     * <code>optional sint32 days_since_onset_of_symptoms = 6;</code>
     */
    int getDaysSinceOnsetOfSymptoms();
  }
  /**
   * Protobuf type {@code com.pancast.dongle.gaen.TemporaryExposureKey}
   */
  public  static final class TemporaryExposureKey extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.pancast.dongle.gaen.TemporaryExposureKey)
      TemporaryExposureKeyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TemporaryExposureKey.newBuilder() to construct.
    private TemporaryExposureKey(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TemporaryExposureKey() {
      keyData_ = com.google.protobuf.ByteString.EMPTY;
      transmissionRiskLevel_ = 0;
      rollingStartIntervalNumber_ = 0;
      rollingPeriod_ = 144;
      reportType_ = 0;
      daysSinceOnsetOfSymptoms_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TemporaryExposureKey(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              bitField0_ |= 0x00000001;
              keyData_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              transmissionRiskLevel_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              rollingStartIntervalNumber_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              rollingPeriod_ = input.readInt32();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.ReportType value = com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.ReportType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                reportType_ = rawValue;
              }
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              daysSinceOnsetOfSymptoms_ = input.readSInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_TemporaryExposureKey_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_TemporaryExposureKey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.class, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder.class);
    }

    /**
     * <pre>
     * Data type that represents why this key was published.
     * </pre>
     *
     * Protobuf enum {@code com.pancast.dongle.gaen.TemporaryExposureKey.ReportType}
     */
    public enum ReportType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Never returned by the client API.
       * </pre>
       *
       * <code>UNKNOWN = 0;</code>
       */
      UNKNOWN(0),
      /**
       * <code>CONFIRMED_TEST = 1;</code>
       */
      CONFIRMED_TEST(1),
      /**
       * <code>CONFIRMED_CLINICAL_DIAGNOSIS = 2;</code>
       */
      CONFIRMED_CLINICAL_DIAGNOSIS(2),
      /**
       * <code>SELF_REPORT = 3;</code>
       */
      SELF_REPORT(3),
      /**
       * <pre>
       * Reserved for future use.
       * </pre>
       *
       * <code>RECURSIVE = 4;</code>
       */
      RECURSIVE(4),
      /**
       * <pre>
       * Used to revoke a key, never returned by client API.
       * </pre>
       *
       * <code>REVOKED = 5;</code>
       */
      REVOKED(5),
      ;

      /**
       * <pre>
       * Never returned by the client API.
       * </pre>
       *
       * <code>UNKNOWN = 0;</code>
       */
      public static final int UNKNOWN_VALUE = 0;
      /**
       * <code>CONFIRMED_TEST = 1;</code>
       */
      public static final int CONFIRMED_TEST_VALUE = 1;
      /**
       * <code>CONFIRMED_CLINICAL_DIAGNOSIS = 2;</code>
       */
      public static final int CONFIRMED_CLINICAL_DIAGNOSIS_VALUE = 2;
      /**
       * <code>SELF_REPORT = 3;</code>
       */
      public static final int SELF_REPORT_VALUE = 3;
      /**
       * <pre>
       * Reserved for future use.
       * </pre>
       *
       * <code>RECURSIVE = 4;</code>
       */
      public static final int RECURSIVE_VALUE = 4;
      /**
       * <pre>
       * Used to revoke a key, never returned by client API.
       * </pre>
       *
       * <code>REVOKED = 5;</code>
       */
      public static final int REVOKED_VALUE = 5;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ReportType valueOf(int value) {
        return forNumber(value);
      }

      public static ReportType forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN;
          case 1: return CONFIRMED_TEST;
          case 2: return CONFIRMED_CLINICAL_DIAGNOSIS;
          case 3: return SELF_REPORT;
          case 4: return RECURSIVE;
          case 5: return REVOKED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ReportType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ReportType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ReportType>() {
              public ReportType findValueByNumber(int number) {
                return ReportType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.getDescriptor().getEnumTypes().get(0);
      }

      private static final ReportType[] VALUES = values();

      public static ReportType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ReportType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.pancast.dongle.gaen.TemporaryExposureKey.ReportType)
    }

    private int bitField0_;
    public static final int KEY_DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString keyData_;
    /**
     * <pre>
     * Temporary exposure key.
     * </pre>
     *
     * <code>optional bytes key_data = 1;</code>
     */
    public boolean hasKeyData() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Temporary exposure key.
     * </pre>
     *
     * <code>optional bytes key_data = 1;</code>
     */
    public com.google.protobuf.ByteString getKeyData() {
      return keyData_;
    }

    public static final int TRANSMISSION_RISK_LEVEL_FIELD_NUMBER = 2;
    private int transmissionRiskLevel_;
    /**
     * <pre>
     * Varying risk associated with a key depending on the diagnosis method.
     * </pre>
     *
     * <code>optional int32 transmission_risk_level = 2;</code>
     */
    public boolean hasTransmissionRiskLevel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Varying risk associated with a key depending on the diagnosis method.
     * </pre>
     *
     * <code>optional int32 transmission_risk_level = 2;</code>
     */
    public int getTransmissionRiskLevel() {
      return transmissionRiskLevel_;
    }

    public static final int ROLLING_START_INTERVAL_NUMBER_FIELD_NUMBER = 3;
    private int rollingStartIntervalNumber_;
    /**
     * <pre>
     * Number representing the beginning interval for temporary exposure
     * key validity (ENIntervalNumber).
     * </pre>
     *
     * <code>optional int32 rolling_start_interval_number = 3;</code>
     */
    public boolean hasRollingStartIntervalNumber() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Number representing the beginning interval for temporary exposure
     * key validity (ENIntervalNumber).
     * </pre>
     *
     * <code>optional int32 rolling_start_interval_number = 3;</code>
     */
    public int getRollingStartIntervalNumber() {
      return rollingStartIntervalNumber_;
    }

    public static final int ROLLING_PERIOD_FIELD_NUMBER = 4;
    private int rollingPeriod_;
    /**
     * <pre>
     * Number of intervals in a period.
     * </pre>
     *
     * <code>optional int32 rolling_period = 4 [default = 144];</code>
     */
    public boolean hasRollingPeriod() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Number of intervals in a period.
     * </pre>
     *
     * <code>optional int32 rolling_period = 4 [default = 144];</code>
     */
    public int getRollingPeriod() {
      return rollingPeriod_;
    }

    public static final int REPORT_TYPE_FIELD_NUMBER = 5;
    private int reportType_;
    /**
     * <pre>
     * Type of diagnosis associated with a key.
     * </pre>
     *
     * <code>optional .com.pancast.dongle.gaen.TemporaryExposureKey.ReportType report_type = 5;</code>
     */
    public boolean hasReportType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * Type of diagnosis associated with a key.
     * </pre>
     *
     * <code>optional .com.pancast.dongle.gaen.TemporaryExposureKey.ReportType report_type = 5;</code>
     */
    public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.ReportType getReportType() {
      @SuppressWarnings("deprecation")
      com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.ReportType result = com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.ReportType.valueOf(reportType_);
      return result == null ? com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.ReportType.UNKNOWN : result;
    }

    public static final int DAYS_SINCE_ONSET_OF_SYMPTOMS_FIELD_NUMBER = 6;
    private int daysSinceOnsetOfSymptoms_;
    /**
     * <pre>
     * Number of days elapsed between symptom onset and the TEK being used.
     * E.g. 2 means TEK is from 2 days after onset of symptoms.
     * Valid values range is from -14 to 14.
     * </pre>
     *
     * <code>optional sint32 days_since_onset_of_symptoms = 6;</code>
     */
    public boolean hasDaysSinceOnsetOfSymptoms() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <pre>
     * Number of days elapsed between symptom onset and the TEK being used.
     * E.g. 2 means TEK is from 2 days after onset of symptoms.
     * Valid values range is from -14 to 14.
     * </pre>
     *
     * <code>optional sint32 days_since_onset_of_symptoms = 6;</code>
     */
    public int getDaysSinceOnsetOfSymptoms() {
      return daysSinceOnsetOfSymptoms_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, keyData_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, transmissionRiskLevel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, rollingStartIntervalNumber_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, rollingPeriod_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, reportType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeSInt32(6, daysSinceOnsetOfSymptoms_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, keyData_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, transmissionRiskLevel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, rollingStartIntervalNumber_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, rollingPeriod_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, reportType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(6, daysSinceOnsetOfSymptoms_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey)) {
        return super.equals(obj);
      }
      com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey other = (com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey) obj;

      boolean result = true;
      result = result && (hasKeyData() == other.hasKeyData());
      if (hasKeyData()) {
        result = result && getKeyData()
            .equals(other.getKeyData());
      }
      result = result && (hasTransmissionRiskLevel() == other.hasTransmissionRiskLevel());
      if (hasTransmissionRiskLevel()) {
        result = result && (getTransmissionRiskLevel()
            == other.getTransmissionRiskLevel());
      }
      result = result && (hasRollingStartIntervalNumber() == other.hasRollingStartIntervalNumber());
      if (hasRollingStartIntervalNumber()) {
        result = result && (getRollingStartIntervalNumber()
            == other.getRollingStartIntervalNumber());
      }
      result = result && (hasRollingPeriod() == other.hasRollingPeriod());
      if (hasRollingPeriod()) {
        result = result && (getRollingPeriod()
            == other.getRollingPeriod());
      }
      result = result && (hasReportType() == other.hasReportType());
      if (hasReportType()) {
        result = result && reportType_ == other.reportType_;
      }
      result = result && (hasDaysSinceOnsetOfSymptoms() == other.hasDaysSinceOnsetOfSymptoms());
      if (hasDaysSinceOnsetOfSymptoms()) {
        result = result && (getDaysSinceOnsetOfSymptoms()
            == other.getDaysSinceOnsetOfSymptoms());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasKeyData()) {
        hash = (37 * hash) + KEY_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getKeyData().hashCode();
      }
      if (hasTransmissionRiskLevel()) {
        hash = (37 * hash) + TRANSMISSION_RISK_LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getTransmissionRiskLevel();
      }
      if (hasRollingStartIntervalNumber()) {
        hash = (37 * hash) + ROLLING_START_INTERVAL_NUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getRollingStartIntervalNumber();
      }
      if (hasRollingPeriod()) {
        hash = (37 * hash) + ROLLING_PERIOD_FIELD_NUMBER;
        hash = (53 * hash) + getRollingPeriod();
      }
      if (hasReportType()) {
        hash = (37 * hash) + REPORT_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + reportType_;
      }
      if (hasDaysSinceOnsetOfSymptoms()) {
        hash = (37 * hash) + DAYS_SINCE_ONSET_OF_SYMPTOMS_FIELD_NUMBER;
        hash = (53 * hash) + getDaysSinceOnsetOfSymptoms();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.pancast.dongle.gaen.TemporaryExposureKey}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.pancast.dongle.gaen.TemporaryExposureKey)
        com.pancast.dongle.gaen.Covidshield.TemporaryExposureKeyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_TemporaryExposureKey_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_TemporaryExposureKey_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.class, com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.Builder.class);
      }

      // Construct using com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        keyData_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        transmissionRiskLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        rollingStartIntervalNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        rollingPeriod_ = 144;
        bitField0_ = (bitField0_ & ~0x00000008);
        reportType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        daysSinceOnsetOfSymptoms_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_TemporaryExposureKey_descriptor;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey getDefaultInstanceForType() {
        return com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.getDefaultInstance();
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey build() {
        com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey buildPartial() {
        com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey result = new com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.keyData_ = keyData_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.transmissionRiskLevel_ = transmissionRiskLevel_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rollingStartIntervalNumber_ = rollingStartIntervalNumber_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rollingPeriod_ = rollingPeriod_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.reportType_ = reportType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.daysSinceOnsetOfSymptoms_ = daysSinceOnsetOfSymptoms_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey) {
          return mergeFrom((com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey other) {
        if (other == com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.getDefaultInstance()) return this;
        if (other.hasKeyData()) {
          setKeyData(other.getKeyData());
        }
        if (other.hasTransmissionRiskLevel()) {
          setTransmissionRiskLevel(other.getTransmissionRiskLevel());
        }
        if (other.hasRollingStartIntervalNumber()) {
          setRollingStartIntervalNumber(other.getRollingStartIntervalNumber());
        }
        if (other.hasRollingPeriod()) {
          setRollingPeriod(other.getRollingPeriod());
        }
        if (other.hasReportType()) {
          setReportType(other.getReportType());
        }
        if (other.hasDaysSinceOnsetOfSymptoms()) {
          setDaysSinceOnsetOfSymptoms(other.getDaysSinceOnsetOfSymptoms());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString keyData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Temporary exposure key.
       * </pre>
       *
       * <code>optional bytes key_data = 1;</code>
       */
      public boolean hasKeyData() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Temporary exposure key.
       * </pre>
       *
       * <code>optional bytes key_data = 1;</code>
       */
      public com.google.protobuf.ByteString getKeyData() {
        return keyData_;
      }
      /**
       * <pre>
       * Temporary exposure key.
       * </pre>
       *
       * <code>optional bytes key_data = 1;</code>
       */
      public Builder setKeyData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        keyData_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Temporary exposure key.
       * </pre>
       *
       * <code>optional bytes key_data = 1;</code>
       */
      public Builder clearKeyData() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyData_ = getDefaultInstance().getKeyData();
        onChanged();
        return this;
      }

      private int transmissionRiskLevel_ ;
      /**
       * <pre>
       * Varying risk associated with a key depending on the diagnosis method.
       * </pre>
       *
       * <code>optional int32 transmission_risk_level = 2;</code>
       */
      public boolean hasTransmissionRiskLevel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Varying risk associated with a key depending on the diagnosis method.
       * </pre>
       *
       * <code>optional int32 transmission_risk_level = 2;</code>
       */
      public int getTransmissionRiskLevel() {
        return transmissionRiskLevel_;
      }
      /**
       * <pre>
       * Varying risk associated with a key depending on the diagnosis method.
       * </pre>
       *
       * <code>optional int32 transmission_risk_level = 2;</code>
       */
      public Builder setTransmissionRiskLevel(int value) {
        bitField0_ |= 0x00000002;
        transmissionRiskLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Varying risk associated with a key depending on the diagnosis method.
       * </pre>
       *
       * <code>optional int32 transmission_risk_level = 2;</code>
       */
      public Builder clearTransmissionRiskLevel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        transmissionRiskLevel_ = 0;
        onChanged();
        return this;
      }

      private int rollingStartIntervalNumber_ ;
      /**
       * <pre>
       * Number representing the beginning interval for temporary exposure
       * key validity (ENIntervalNumber).
       * </pre>
       *
       * <code>optional int32 rolling_start_interval_number = 3;</code>
       */
      public boolean hasRollingStartIntervalNumber() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       * Number representing the beginning interval for temporary exposure
       * key validity (ENIntervalNumber).
       * </pre>
       *
       * <code>optional int32 rolling_start_interval_number = 3;</code>
       */
      public int getRollingStartIntervalNumber() {
        return rollingStartIntervalNumber_;
      }
      /**
       * <pre>
       * Number representing the beginning interval for temporary exposure
       * key validity (ENIntervalNumber).
       * </pre>
       *
       * <code>optional int32 rolling_start_interval_number = 3;</code>
       */
      public Builder setRollingStartIntervalNumber(int value) {
        bitField0_ |= 0x00000004;
        rollingStartIntervalNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number representing the beginning interval for temporary exposure
       * key validity (ENIntervalNumber).
       * </pre>
       *
       * <code>optional int32 rolling_start_interval_number = 3;</code>
       */
      public Builder clearRollingStartIntervalNumber() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rollingStartIntervalNumber_ = 0;
        onChanged();
        return this;
      }

      private int rollingPeriod_ = 144;
      /**
       * <pre>
       * Number of intervals in a period.
       * </pre>
       *
       * <code>optional int32 rolling_period = 4 [default = 144];</code>
       */
      public boolean hasRollingPeriod() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Number of intervals in a period.
       * </pre>
       *
       * <code>optional int32 rolling_period = 4 [default = 144];</code>
       */
      public int getRollingPeriod() {
        return rollingPeriod_;
      }
      /**
       * <pre>
       * Number of intervals in a period.
       * </pre>
       *
       * <code>optional int32 rolling_period = 4 [default = 144];</code>
       */
      public Builder setRollingPeriod(int value) {
        bitField0_ |= 0x00000008;
        rollingPeriod_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of intervals in a period.
       * </pre>
       *
       * <code>optional int32 rolling_period = 4 [default = 144];</code>
       */
      public Builder clearRollingPeriod() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rollingPeriod_ = 144;
        onChanged();
        return this;
      }

      private int reportType_ = 0;
      /**
       * <pre>
       * Type of diagnosis associated with a key.
       * </pre>
       *
       * <code>optional .com.pancast.dongle.gaen.TemporaryExposureKey.ReportType report_type = 5;</code>
       */
      public boolean hasReportType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       * Type of diagnosis associated with a key.
       * </pre>
       *
       * <code>optional .com.pancast.dongle.gaen.TemporaryExposureKey.ReportType report_type = 5;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.ReportType getReportType() {
        @SuppressWarnings("deprecation")
        com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.ReportType result = com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.ReportType.valueOf(reportType_);
        return result == null ? com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.ReportType.UNKNOWN : result;
      }
      /**
       * <pre>
       * Type of diagnosis associated with a key.
       * </pre>
       *
       * <code>optional .com.pancast.dongle.gaen.TemporaryExposureKey.ReportType report_type = 5;</code>
       */
      public Builder setReportType(com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey.ReportType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        reportType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Type of diagnosis associated with a key.
       * </pre>
       *
       * <code>optional .com.pancast.dongle.gaen.TemporaryExposureKey.ReportType report_type = 5;</code>
       */
      public Builder clearReportType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        reportType_ = 0;
        onChanged();
        return this;
      }

      private int daysSinceOnsetOfSymptoms_ ;
      /**
       * <pre>
       * Number of days elapsed between symptom onset and the TEK being used.
       * E.g. 2 means TEK is from 2 days after onset of symptoms.
       * Valid values range is from -14 to 14.
       * </pre>
       *
       * <code>optional sint32 days_since_onset_of_symptoms = 6;</code>
       */
      public boolean hasDaysSinceOnsetOfSymptoms() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       * Number of days elapsed between symptom onset and the TEK being used.
       * E.g. 2 means TEK is from 2 days after onset of symptoms.
       * Valid values range is from -14 to 14.
       * </pre>
       *
       * <code>optional sint32 days_since_onset_of_symptoms = 6;</code>
       */
      public int getDaysSinceOnsetOfSymptoms() {
        return daysSinceOnsetOfSymptoms_;
      }
      /**
       * <pre>
       * Number of days elapsed between symptom onset and the TEK being used.
       * E.g. 2 means TEK is from 2 days after onset of symptoms.
       * Valid values range is from -14 to 14.
       * </pre>
       *
       * <code>optional sint32 days_since_onset_of_symptoms = 6;</code>
       */
      public Builder setDaysSinceOnsetOfSymptoms(int value) {
        bitField0_ |= 0x00000020;
        daysSinceOnsetOfSymptoms_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of days elapsed between symptom onset and the TEK being used.
       * E.g. 2 means TEK is from 2 days after onset of symptoms.
       * Valid values range is from -14 to 14.
       * </pre>
       *
       * <code>optional sint32 days_since_onset_of_symptoms = 6;</code>
       */
      public Builder clearDaysSinceOnsetOfSymptoms() {
        bitField0_ = (bitField0_ & ~0x00000020);
        daysSinceOnsetOfSymptoms_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.pancast.dongle.gaen.TemporaryExposureKey)
    }

    // @@protoc_insertion_point(class_scope:com.pancast.dongle.gaen.TemporaryExposureKey)
    private static final com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey();
    }

    public static com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TemporaryExposureKey>
        PARSER = new com.google.protobuf.AbstractParser<TemporaryExposureKey>() {
      @java.lang.Override
      public TemporaryExposureKey parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TemporaryExposureKey(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TemporaryExposureKey> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TemporaryExposureKey> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.pancast.dongle.gaen.Covidshield.TemporaryExposureKey getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TEKSignatureListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.pancast.dongle.gaen.TEKSignatureList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Information about associated signatures.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
     */
    java.util.List<com.pancast.dongle.gaen.Covidshield.TEKSignature> 
        getSignaturesList();
    /**
     * <pre>
     * Information about associated signatures.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
     */
    com.pancast.dongle.gaen.Covidshield.TEKSignature getSignatures(int index);
    /**
     * <pre>
     * Information about associated signatures.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
     */
    int getSignaturesCount();
    /**
     * <pre>
     * Information about associated signatures.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
     */
    java.util.List<? extends com.pancast.dongle.gaen.Covidshield.TEKSignatureOrBuilder> 
        getSignaturesOrBuilderList();
    /**
     * <pre>
     * Information about associated signatures.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
     */
    com.pancast.dongle.gaen.Covidshield.TEKSignatureOrBuilder getSignaturesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.pancast.dongle.gaen.TEKSignatureList}
   */
  public  static final class TEKSignatureList extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.pancast.dongle.gaen.TEKSignatureList)
      TEKSignatureListOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TEKSignatureList.newBuilder() to construct.
    private TEKSignatureList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TEKSignatureList() {
      signatures_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TEKSignatureList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                signatures_ = new java.util.ArrayList<com.pancast.dongle.gaen.Covidshield.TEKSignature>();
                mutable_bitField0_ |= 0x00000001;
              }
              signatures_.add(
                  input.readMessage(com.pancast.dongle.gaen.Covidshield.TEKSignature.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          signatures_ = java.util.Collections.unmodifiableList(signatures_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_TEKSignatureList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_TEKSignatureList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pancast.dongle.gaen.Covidshield.TEKSignatureList.class, com.pancast.dongle.gaen.Covidshield.TEKSignatureList.Builder.class);
    }

    public static final int SIGNATURES_FIELD_NUMBER = 1;
    private java.util.List<com.pancast.dongle.gaen.Covidshield.TEKSignature> signatures_;
    /**
     * <pre>
     * Information about associated signatures.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
     */
    public java.util.List<com.pancast.dongle.gaen.Covidshield.TEKSignature> getSignaturesList() {
      return signatures_;
    }
    /**
     * <pre>
     * Information about associated signatures.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
     */
    public java.util.List<? extends com.pancast.dongle.gaen.Covidshield.TEKSignatureOrBuilder> 
        getSignaturesOrBuilderList() {
      return signatures_;
    }
    /**
     * <pre>
     * Information about associated signatures.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
     */
    public int getSignaturesCount() {
      return signatures_.size();
    }
    /**
     * <pre>
     * Information about associated signatures.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
     */
    public com.pancast.dongle.gaen.Covidshield.TEKSignature getSignatures(int index) {
      return signatures_.get(index);
    }
    /**
     * <pre>
     * Information about associated signatures.
     * </pre>
     *
     * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
     */
    public com.pancast.dongle.gaen.Covidshield.TEKSignatureOrBuilder getSignaturesOrBuilder(
        int index) {
      return signatures_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < signatures_.size(); i++) {
        output.writeMessage(1, signatures_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < signatures_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, signatures_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.pancast.dongle.gaen.Covidshield.TEKSignatureList)) {
        return super.equals(obj);
      }
      com.pancast.dongle.gaen.Covidshield.TEKSignatureList other = (com.pancast.dongle.gaen.Covidshield.TEKSignatureList) obj;

      boolean result = true;
      result = result && getSignaturesList()
          .equals(other.getSignaturesList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSignaturesCount() > 0) {
        hash = (37 * hash) + SIGNATURES_FIELD_NUMBER;
        hash = (53 * hash) + getSignaturesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.pancast.dongle.gaen.Covidshield.TEKSignatureList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.TEKSignatureList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.TEKSignatureList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.TEKSignatureList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.TEKSignatureList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.TEKSignatureList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.TEKSignatureList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.TEKSignatureList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.TEKSignatureList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.TEKSignatureList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.TEKSignatureList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.TEKSignatureList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.pancast.dongle.gaen.Covidshield.TEKSignatureList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.pancast.dongle.gaen.TEKSignatureList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.pancast.dongle.gaen.TEKSignatureList)
        com.pancast.dongle.gaen.Covidshield.TEKSignatureListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_TEKSignatureList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_TEKSignatureList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.pancast.dongle.gaen.Covidshield.TEKSignatureList.class, com.pancast.dongle.gaen.Covidshield.TEKSignatureList.Builder.class);
      }

      // Construct using com.pancast.dongle.gaen.Covidshield.TEKSignatureList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSignaturesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (signaturesBuilder_ == null) {
          signatures_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          signaturesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_TEKSignatureList_descriptor;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.TEKSignatureList getDefaultInstanceForType() {
        return com.pancast.dongle.gaen.Covidshield.TEKSignatureList.getDefaultInstance();
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.TEKSignatureList build() {
        com.pancast.dongle.gaen.Covidshield.TEKSignatureList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.TEKSignatureList buildPartial() {
        com.pancast.dongle.gaen.Covidshield.TEKSignatureList result = new com.pancast.dongle.gaen.Covidshield.TEKSignatureList(this);
        int from_bitField0_ = bitField0_;
        if (signaturesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            signatures_ = java.util.Collections.unmodifiableList(signatures_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.signatures_ = signatures_;
        } else {
          result.signatures_ = signaturesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pancast.dongle.gaen.Covidshield.TEKSignatureList) {
          return mergeFrom((com.pancast.dongle.gaen.Covidshield.TEKSignatureList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.pancast.dongle.gaen.Covidshield.TEKSignatureList other) {
        if (other == com.pancast.dongle.gaen.Covidshield.TEKSignatureList.getDefaultInstance()) return this;
        if (signaturesBuilder_ == null) {
          if (!other.signatures_.isEmpty()) {
            if (signatures_.isEmpty()) {
              signatures_ = other.signatures_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSignaturesIsMutable();
              signatures_.addAll(other.signatures_);
            }
            onChanged();
          }
        } else {
          if (!other.signatures_.isEmpty()) {
            if (signaturesBuilder_.isEmpty()) {
              signaturesBuilder_.dispose();
              signaturesBuilder_ = null;
              signatures_ = other.signatures_;
              bitField0_ = (bitField0_ & ~0x00000001);
              signaturesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSignaturesFieldBuilder() : null;
            } else {
              signaturesBuilder_.addAllMessages(other.signatures_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.pancast.dongle.gaen.Covidshield.TEKSignatureList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.pancast.dongle.gaen.Covidshield.TEKSignatureList) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.pancast.dongle.gaen.Covidshield.TEKSignature> signatures_ =
        java.util.Collections.emptyList();
      private void ensureSignaturesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          signatures_ = new java.util.ArrayList<com.pancast.dongle.gaen.Covidshield.TEKSignature>(signatures_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.pancast.dongle.gaen.Covidshield.TEKSignature, com.pancast.dongle.gaen.Covidshield.TEKSignature.Builder, com.pancast.dongle.gaen.Covidshield.TEKSignatureOrBuilder> signaturesBuilder_;

      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
       */
      public java.util.List<com.pancast.dongle.gaen.Covidshield.TEKSignature> getSignaturesList() {
        if (signaturesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(signatures_);
        } else {
          return signaturesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
       */
      public int getSignaturesCount() {
        if (signaturesBuilder_ == null) {
          return signatures_.size();
        } else {
          return signaturesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.TEKSignature getSignatures(int index) {
        if (signaturesBuilder_ == null) {
          return signatures_.get(index);
        } else {
          return signaturesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
       */
      public Builder setSignatures(
          int index, com.pancast.dongle.gaen.Covidshield.TEKSignature value) {
        if (signaturesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignaturesIsMutable();
          signatures_.set(index, value);
          onChanged();
        } else {
          signaturesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
       */
      public Builder setSignatures(
          int index, com.pancast.dongle.gaen.Covidshield.TEKSignature.Builder builderForValue) {
        if (signaturesBuilder_ == null) {
          ensureSignaturesIsMutable();
          signatures_.set(index, builderForValue.build());
          onChanged();
        } else {
          signaturesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
       */
      public Builder addSignatures(com.pancast.dongle.gaen.Covidshield.TEKSignature value) {
        if (signaturesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignaturesIsMutable();
          signatures_.add(value);
          onChanged();
        } else {
          signaturesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
       */
      public Builder addSignatures(
          int index, com.pancast.dongle.gaen.Covidshield.TEKSignature value) {
        if (signaturesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignaturesIsMutable();
          signatures_.add(index, value);
          onChanged();
        } else {
          signaturesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
       */
      public Builder addSignatures(
          com.pancast.dongle.gaen.Covidshield.TEKSignature.Builder builderForValue) {
        if (signaturesBuilder_ == null) {
          ensureSignaturesIsMutable();
          signatures_.add(builderForValue.build());
          onChanged();
        } else {
          signaturesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
       */
      public Builder addSignatures(
          int index, com.pancast.dongle.gaen.Covidshield.TEKSignature.Builder builderForValue) {
        if (signaturesBuilder_ == null) {
          ensureSignaturesIsMutable();
          signatures_.add(index, builderForValue.build());
          onChanged();
        } else {
          signaturesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
       */
      public Builder addAllSignatures(
          java.lang.Iterable<? extends com.pancast.dongle.gaen.Covidshield.TEKSignature> values) {
        if (signaturesBuilder_ == null) {
          ensureSignaturesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, signatures_);
          onChanged();
        } else {
          signaturesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
       */
      public Builder clearSignatures() {
        if (signaturesBuilder_ == null) {
          signatures_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          signaturesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
       */
      public Builder removeSignatures(int index) {
        if (signaturesBuilder_ == null) {
          ensureSignaturesIsMutable();
          signatures_.remove(index);
          onChanged();
        } else {
          signaturesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.TEKSignature.Builder getSignaturesBuilder(
          int index) {
        return getSignaturesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.TEKSignatureOrBuilder getSignaturesOrBuilder(
          int index) {
        if (signaturesBuilder_ == null) {
          return signatures_.get(index);  } else {
          return signaturesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
       */
      public java.util.List<? extends com.pancast.dongle.gaen.Covidshield.TEKSignatureOrBuilder> 
           getSignaturesOrBuilderList() {
        if (signaturesBuilder_ != null) {
          return signaturesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(signatures_);
        }
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.TEKSignature.Builder addSignaturesBuilder() {
        return getSignaturesFieldBuilder().addBuilder(
            com.pancast.dongle.gaen.Covidshield.TEKSignature.getDefaultInstance());
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.TEKSignature.Builder addSignaturesBuilder(
          int index) {
        return getSignaturesFieldBuilder().addBuilder(
            index, com.pancast.dongle.gaen.Covidshield.TEKSignature.getDefaultInstance());
      }
      /**
       * <pre>
       * Information about associated signatures.
       * </pre>
       *
       * <code>repeated .com.pancast.dongle.gaen.TEKSignature signatures = 1;</code>
       */
      public java.util.List<com.pancast.dongle.gaen.Covidshield.TEKSignature.Builder> 
           getSignaturesBuilderList() {
        return getSignaturesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.pancast.dongle.gaen.Covidshield.TEKSignature, com.pancast.dongle.gaen.Covidshield.TEKSignature.Builder, com.pancast.dongle.gaen.Covidshield.TEKSignatureOrBuilder> 
          getSignaturesFieldBuilder() {
        if (signaturesBuilder_ == null) {
          signaturesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.pancast.dongle.gaen.Covidshield.TEKSignature, com.pancast.dongle.gaen.Covidshield.TEKSignature.Builder, com.pancast.dongle.gaen.Covidshield.TEKSignatureOrBuilder>(
                  signatures_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          signatures_ = null;
        }
        return signaturesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.pancast.dongle.gaen.TEKSignatureList)
    }

    // @@protoc_insertion_point(class_scope:com.pancast.dongle.gaen.TEKSignatureList)
    private static final com.pancast.dongle.gaen.Covidshield.TEKSignatureList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.pancast.dongle.gaen.Covidshield.TEKSignatureList();
    }

    public static com.pancast.dongle.gaen.Covidshield.TEKSignatureList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TEKSignatureList>
        PARSER = new com.google.protobuf.AbstractParser<TEKSignatureList>() {
      @java.lang.Override
      public TEKSignatureList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TEKSignatureList(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TEKSignatureList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TEKSignatureList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.pancast.dongle.gaen.Covidshield.TEKSignatureList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TEKSignatureOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.pancast.dongle.gaen.TEKSignature)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Information to uniquely identify the public key associated 
     * with the EN server's signing key.
     * </pre>
     *
     * <code>optional .com.pancast.dongle.gaen.SignatureInfo signature_info = 1;</code>
     */
    boolean hasSignatureInfo();
    /**
     * <pre>
     * Information to uniquely identify the public key associated 
     * with the EN server's signing key.
     * </pre>
     *
     * <code>optional .com.pancast.dongle.gaen.SignatureInfo signature_info = 1;</code>
     */
    com.pancast.dongle.gaen.Covidshield.SignatureInfo getSignatureInfo();
    /**
     * <pre>
     * Information to uniquely identify the public key associated 
     * with the EN server's signing key.
     * </pre>
     *
     * <code>optional .com.pancast.dongle.gaen.SignatureInfo signature_info = 1;</code>
     */
    com.pancast.dongle.gaen.Covidshield.SignatureInfoOrBuilder getSignatureInfoOrBuilder();

    /**
     * <pre>
     * Reserved for future use. Both batch_num and batch_size
     * must be set to a value of 1.
     * </pre>
     *
     * <code>optional int32 batch_num = 2;</code>
     */
    boolean hasBatchNum();
    /**
     * <pre>
     * Reserved for future use. Both batch_num and batch_size
     * must be set to a value of 1.
     * </pre>
     *
     * <code>optional int32 batch_num = 2;</code>
     */
    int getBatchNum();

    /**
     * <code>optional int32 batch_size = 3;</code>
     */
    boolean hasBatchSize();
    /**
     * <code>optional int32 batch_size = 3;</code>
     */
    int getBatchSize();

    /**
     * <pre>
     * Signature in X9.62 format (ASN.1 SEQUENCE of two INTEGER fields).
     * </pre>
     *
     * <code>optional bytes signature = 4;</code>
     */
    boolean hasSignature();
    /**
     * <pre>
     * Signature in X9.62 format (ASN.1 SEQUENCE of two INTEGER fields).
     * </pre>
     *
     * <code>optional bytes signature = 4;</code>
     */
    com.google.protobuf.ByteString getSignature();
  }
  /**
   * Protobuf type {@code com.pancast.dongle.gaen.TEKSignature}
   */
  public  static final class TEKSignature extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.pancast.dongle.gaen.TEKSignature)
      TEKSignatureOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TEKSignature.newBuilder() to construct.
    private TEKSignature(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TEKSignature() {
      batchNum_ = 0;
      batchSize_ = 0;
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TEKSignature(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.pancast.dongle.gaen.Covidshield.SignatureInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = signatureInfo_.toBuilder();
              }
              signatureInfo_ = input.readMessage(com.pancast.dongle.gaen.Covidshield.SignatureInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(signatureInfo_);
                signatureInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              batchNum_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              batchSize_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              signature_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_TEKSignature_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_TEKSignature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.pancast.dongle.gaen.Covidshield.TEKSignature.class, com.pancast.dongle.gaen.Covidshield.TEKSignature.Builder.class);
    }

    private int bitField0_;
    public static final int SIGNATURE_INFO_FIELD_NUMBER = 1;
    private com.pancast.dongle.gaen.Covidshield.SignatureInfo signatureInfo_;
    /**
     * <pre>
     * Information to uniquely identify the public key associated 
     * with the EN server's signing key.
     * </pre>
     *
     * <code>optional .com.pancast.dongle.gaen.SignatureInfo signature_info = 1;</code>
     */
    public boolean hasSignatureInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * Information to uniquely identify the public key associated 
     * with the EN server's signing key.
     * </pre>
     *
     * <code>optional .com.pancast.dongle.gaen.SignatureInfo signature_info = 1;</code>
     */
    public com.pancast.dongle.gaen.Covidshield.SignatureInfo getSignatureInfo() {
      return signatureInfo_ == null ? com.pancast.dongle.gaen.Covidshield.SignatureInfo.getDefaultInstance() : signatureInfo_;
    }
    /**
     * <pre>
     * Information to uniquely identify the public key associated 
     * with the EN server's signing key.
     * </pre>
     *
     * <code>optional .com.pancast.dongle.gaen.SignatureInfo signature_info = 1;</code>
     */
    public com.pancast.dongle.gaen.Covidshield.SignatureInfoOrBuilder getSignatureInfoOrBuilder() {
      return signatureInfo_ == null ? com.pancast.dongle.gaen.Covidshield.SignatureInfo.getDefaultInstance() : signatureInfo_;
    }

    public static final int BATCH_NUM_FIELD_NUMBER = 2;
    private int batchNum_;
    /**
     * <pre>
     * Reserved for future use. Both batch_num and batch_size
     * must be set to a value of 1.
     * </pre>
     *
     * <code>optional int32 batch_num = 2;</code>
     */
    public boolean hasBatchNum() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     * Reserved for future use. Both batch_num and batch_size
     * must be set to a value of 1.
     * </pre>
     *
     * <code>optional int32 batch_num = 2;</code>
     */
    public int getBatchNum() {
      return batchNum_;
    }

    public static final int BATCH_SIZE_FIELD_NUMBER = 3;
    private int batchSize_;
    /**
     * <code>optional int32 batch_size = 3;</code>
     */
    public boolean hasBatchSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 batch_size = 3;</code>
     */
    public int getBatchSize() {
      return batchSize_;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString signature_;
    /**
     * <pre>
     * Signature in X9.62 format (ASN.1 SEQUENCE of two INTEGER fields).
     * </pre>
     *
     * <code>optional bytes signature = 4;</code>
     */
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Signature in X9.62 format (ASN.1 SEQUENCE of two INTEGER fields).
     * </pre>
     *
     * <code>optional bytes signature = 4;</code>
     */
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, getSignatureInfo());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, batchNum_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, batchSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, signature_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSignatureInfo());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, batchNum_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, batchSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, signature_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.pancast.dongle.gaen.Covidshield.TEKSignature)) {
        return super.equals(obj);
      }
      com.pancast.dongle.gaen.Covidshield.TEKSignature other = (com.pancast.dongle.gaen.Covidshield.TEKSignature) obj;

      boolean result = true;
      result = result && (hasSignatureInfo() == other.hasSignatureInfo());
      if (hasSignatureInfo()) {
        result = result && getSignatureInfo()
            .equals(other.getSignatureInfo());
      }
      result = result && (hasBatchNum() == other.hasBatchNum());
      if (hasBatchNum()) {
        result = result && (getBatchNum()
            == other.getBatchNum());
      }
      result = result && (hasBatchSize() == other.hasBatchSize());
      if (hasBatchSize()) {
        result = result && (getBatchSize()
            == other.getBatchSize());
      }
      result = result && (hasSignature() == other.hasSignature());
      if (hasSignature()) {
        result = result && getSignature()
            .equals(other.getSignature());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSignatureInfo()) {
        hash = (37 * hash) + SIGNATURE_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getSignatureInfo().hashCode();
      }
      if (hasBatchNum()) {
        hash = (37 * hash) + BATCH_NUM_FIELD_NUMBER;
        hash = (53 * hash) + getBatchNum();
      }
      if (hasBatchSize()) {
        hash = (37 * hash) + BATCH_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getBatchSize();
      }
      if (hasSignature()) {
        hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
        hash = (53 * hash) + getSignature().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.pancast.dongle.gaen.Covidshield.TEKSignature parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.TEKSignature parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.TEKSignature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.TEKSignature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.TEKSignature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.pancast.dongle.gaen.Covidshield.TEKSignature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.TEKSignature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.TEKSignature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.TEKSignature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.TEKSignature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.pancast.dongle.gaen.Covidshield.TEKSignature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.pancast.dongle.gaen.Covidshield.TEKSignature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.pancast.dongle.gaen.Covidshield.TEKSignature prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.pancast.dongle.gaen.TEKSignature}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.pancast.dongle.gaen.TEKSignature)
        com.pancast.dongle.gaen.Covidshield.TEKSignatureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_TEKSignature_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_TEKSignature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.pancast.dongle.gaen.Covidshield.TEKSignature.class, com.pancast.dongle.gaen.Covidshield.TEKSignature.Builder.class);
      }

      // Construct using com.pancast.dongle.gaen.Covidshield.TEKSignature.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSignatureInfoFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (signatureInfoBuilder_ == null) {
          signatureInfo_ = null;
        } else {
          signatureInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        batchNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        batchSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        signature_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.pancast.dongle.gaen.Covidshield.internal_static_com_pancast_dongle_gaen_TEKSignature_descriptor;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.TEKSignature getDefaultInstanceForType() {
        return com.pancast.dongle.gaen.Covidshield.TEKSignature.getDefaultInstance();
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.TEKSignature build() {
        com.pancast.dongle.gaen.Covidshield.TEKSignature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.pancast.dongle.gaen.Covidshield.TEKSignature buildPartial() {
        com.pancast.dongle.gaen.Covidshield.TEKSignature result = new com.pancast.dongle.gaen.Covidshield.TEKSignature(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (signatureInfoBuilder_ == null) {
          result.signatureInfo_ = signatureInfo_;
        } else {
          result.signatureInfo_ = signatureInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.batchNum_ = batchNum_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.batchSize_ = batchSize_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.signature_ = signature_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.pancast.dongle.gaen.Covidshield.TEKSignature) {
          return mergeFrom((com.pancast.dongle.gaen.Covidshield.TEKSignature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.pancast.dongle.gaen.Covidshield.TEKSignature other) {
        if (other == com.pancast.dongle.gaen.Covidshield.TEKSignature.getDefaultInstance()) return this;
        if (other.hasSignatureInfo()) {
          mergeSignatureInfo(other.getSignatureInfo());
        }
        if (other.hasBatchNum()) {
          setBatchNum(other.getBatchNum());
        }
        if (other.hasBatchSize()) {
          setBatchSize(other.getBatchSize());
        }
        if (other.hasSignature()) {
          setSignature(other.getSignature());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.pancast.dongle.gaen.Covidshield.TEKSignature parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.pancast.dongle.gaen.Covidshield.TEKSignature) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.pancast.dongle.gaen.Covidshield.SignatureInfo signatureInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.pancast.dongle.gaen.Covidshield.SignatureInfo, com.pancast.dongle.gaen.Covidshield.SignatureInfo.Builder, com.pancast.dongle.gaen.Covidshield.SignatureInfoOrBuilder> signatureInfoBuilder_;
      /**
       * <pre>
       * Information to uniquely identify the public key associated 
       * with the EN server's signing key.
       * </pre>
       *
       * <code>optional .com.pancast.dongle.gaen.SignatureInfo signature_info = 1;</code>
       */
      public boolean hasSignatureInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       * Information to uniquely identify the public key associated 
       * with the EN server's signing key.
       * </pre>
       *
       * <code>optional .com.pancast.dongle.gaen.SignatureInfo signature_info = 1;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.SignatureInfo getSignatureInfo() {
        if (signatureInfoBuilder_ == null) {
          return signatureInfo_ == null ? com.pancast.dongle.gaen.Covidshield.SignatureInfo.getDefaultInstance() : signatureInfo_;
        } else {
          return signatureInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Information to uniquely identify the public key associated 
       * with the EN server's signing key.
       * </pre>
       *
       * <code>optional .com.pancast.dongle.gaen.SignatureInfo signature_info = 1;</code>
       */
      public Builder setSignatureInfo(com.pancast.dongle.gaen.Covidshield.SignatureInfo value) {
        if (signatureInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          signatureInfo_ = value;
          onChanged();
        } else {
          signatureInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Information to uniquely identify the public key associated 
       * with the EN server's signing key.
       * </pre>
       *
       * <code>optional .com.pancast.dongle.gaen.SignatureInfo signature_info = 1;</code>
       */
      public Builder setSignatureInfo(
          com.pancast.dongle.gaen.Covidshield.SignatureInfo.Builder builderForValue) {
        if (signatureInfoBuilder_ == null) {
          signatureInfo_ = builderForValue.build();
          onChanged();
        } else {
          signatureInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Information to uniquely identify the public key associated 
       * with the EN server's signing key.
       * </pre>
       *
       * <code>optional .com.pancast.dongle.gaen.SignatureInfo signature_info = 1;</code>
       */
      public Builder mergeSignatureInfo(com.pancast.dongle.gaen.Covidshield.SignatureInfo value) {
        if (signatureInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              signatureInfo_ != null &&
              signatureInfo_ != com.pancast.dongle.gaen.Covidshield.SignatureInfo.getDefaultInstance()) {
            signatureInfo_ =
              com.pancast.dongle.gaen.Covidshield.SignatureInfo.newBuilder(signatureInfo_).mergeFrom(value).buildPartial();
          } else {
            signatureInfo_ = value;
          }
          onChanged();
        } else {
          signatureInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Information to uniquely identify the public key associated 
       * with the EN server's signing key.
       * </pre>
       *
       * <code>optional .com.pancast.dongle.gaen.SignatureInfo signature_info = 1;</code>
       */
      public Builder clearSignatureInfo() {
        if (signatureInfoBuilder_ == null) {
          signatureInfo_ = null;
          onChanged();
        } else {
          signatureInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <pre>
       * Information to uniquely identify the public key associated 
       * with the EN server's signing key.
       * </pre>
       *
       * <code>optional .com.pancast.dongle.gaen.SignatureInfo signature_info = 1;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.SignatureInfo.Builder getSignatureInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSignatureInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Information to uniquely identify the public key associated 
       * with the EN server's signing key.
       * </pre>
       *
       * <code>optional .com.pancast.dongle.gaen.SignatureInfo signature_info = 1;</code>
       */
      public com.pancast.dongle.gaen.Covidshield.SignatureInfoOrBuilder getSignatureInfoOrBuilder() {
        if (signatureInfoBuilder_ != null) {
          return signatureInfoBuilder_.getMessageOrBuilder();
        } else {
          return signatureInfo_ == null ?
              com.pancast.dongle.gaen.Covidshield.SignatureInfo.getDefaultInstance() : signatureInfo_;
        }
      }
      /**
       * <pre>
       * Information to uniquely identify the public key associated 
       * with the EN server's signing key.
       * </pre>
       *
       * <code>optional .com.pancast.dongle.gaen.SignatureInfo signature_info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.pancast.dongle.gaen.Covidshield.SignatureInfo, com.pancast.dongle.gaen.Covidshield.SignatureInfo.Builder, com.pancast.dongle.gaen.Covidshield.SignatureInfoOrBuilder> 
          getSignatureInfoFieldBuilder() {
        if (signatureInfoBuilder_ == null) {
          signatureInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.pancast.dongle.gaen.Covidshield.SignatureInfo, com.pancast.dongle.gaen.Covidshield.SignatureInfo.Builder, com.pancast.dongle.gaen.Covidshield.SignatureInfoOrBuilder>(
                  getSignatureInfo(),
                  getParentForChildren(),
                  isClean());
          signatureInfo_ = null;
        }
        return signatureInfoBuilder_;
      }

      private int batchNum_ ;
      /**
       * <pre>
       * Reserved for future use. Both batch_num and batch_size
       * must be set to a value of 1.
       * </pre>
       *
       * <code>optional int32 batch_num = 2;</code>
       */
      public boolean hasBatchNum() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       * Reserved for future use. Both batch_num and batch_size
       * must be set to a value of 1.
       * </pre>
       *
       * <code>optional int32 batch_num = 2;</code>
       */
      public int getBatchNum() {
        return batchNum_;
      }
      /**
       * <pre>
       * Reserved for future use. Both batch_num and batch_size
       * must be set to a value of 1.
       * </pre>
       *
       * <code>optional int32 batch_num = 2;</code>
       */
      public Builder setBatchNum(int value) {
        bitField0_ |= 0x00000002;
        batchNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Reserved for future use. Both batch_num and batch_size
       * must be set to a value of 1.
       * </pre>
       *
       * <code>optional int32 batch_num = 2;</code>
       */
      public Builder clearBatchNum() {
        bitField0_ = (bitField0_ & ~0x00000002);
        batchNum_ = 0;
        onChanged();
        return this;
      }

      private int batchSize_ ;
      /**
       * <code>optional int32 batch_size = 3;</code>
       */
      public boolean hasBatchSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 batch_size = 3;</code>
       */
      public int getBatchSize() {
        return batchSize_;
      }
      /**
       * <code>optional int32 batch_size = 3;</code>
       */
      public Builder setBatchSize(int value) {
        bitField0_ |= 0x00000004;
        batchSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 batch_size = 3;</code>
       */
      public Builder clearBatchSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        batchSize_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Signature in X9.62 format (ASN.1 SEQUENCE of two INTEGER fields).
       * </pre>
       *
       * <code>optional bytes signature = 4;</code>
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       * Signature in X9.62 format (ASN.1 SEQUENCE of two INTEGER fields).
       * </pre>
       *
       * <code>optional bytes signature = 4;</code>
       */
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <pre>
       * Signature in X9.62 format (ASN.1 SEQUENCE of two INTEGER fields).
       * </pre>
       *
       * <code>optional bytes signature = 4;</code>
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Signature in X9.62 format (ASN.1 SEQUENCE of two INTEGER fields).
       * </pre>
       *
       * <code>optional bytes signature = 4;</code>
       */
      public Builder clearSignature() {
        bitField0_ = (bitField0_ & ~0x00000008);
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.pancast.dongle.gaen.TEKSignature)
    }

    // @@protoc_insertion_point(class_scope:com.pancast.dongle.gaen.TEKSignature)
    private static final com.pancast.dongle.gaen.Covidshield.TEKSignature DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.pancast.dongle.gaen.Covidshield.TEKSignature();
    }

    public static com.pancast.dongle.gaen.Covidshield.TEKSignature getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TEKSignature>
        PARSER = new com.google.protobuf.AbstractParser<TEKSignature>() {
      @java.lang.Override
      public TEKSignature parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TEKSignature(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TEKSignature> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TEKSignature> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.pancast.dongle.gaen.Covidshield.TEKSignature getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_pancast_dongle_gaen_KeyClaimRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_pancast_dongle_gaen_KeyClaimRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_pancast_dongle_gaen_KeyClaimResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_pancast_dongle_gaen_KeyClaimResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_pancast_dongle_gaen_EncryptedUploadRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_pancast_dongle_gaen_EncryptedUploadRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_pancast_dongle_gaen_EncryptedUploadResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_pancast_dongle_gaen_EncryptedUploadResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_pancast_dongle_gaen_OutbreakEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_pancast_dongle_gaen_OutbreakEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_pancast_dongle_gaen_OutbreakEventResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_pancast_dongle_gaen_OutbreakEventResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_pancast_dongle_gaen_OutbreakEventExport_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_pancast_dongle_gaen_OutbreakEventExport_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_pancast_dongle_gaen_OutbreakEventExportSignature_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_pancast_dongle_gaen_OutbreakEventExportSignature_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_pancast_dongle_gaen_Upload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_pancast_dongle_gaen_Upload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_pancast_dongle_gaen_TemporaryExposureKeyExport_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_pancast_dongle_gaen_TemporaryExposureKeyExport_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_pancast_dongle_gaen_SignatureInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_pancast_dongle_gaen_SignatureInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_pancast_dongle_gaen_TemporaryExposureKey_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_pancast_dongle_gaen_TemporaryExposureKey_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_pancast_dongle_gaen_TEKSignatureList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_pancast_dongle_gaen_TEKSignatureList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_pancast_dongle_gaen_TEKSignature_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_pancast_dongle_gaen_TEKSignature_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n%pancast/dongle/gaen/covidshield.proto\022" +
      "\027com.pancast.dongle.gaen\032\037google/protobu" +
      "f/timestamp.proto\032\036google/protobuf/durat" +
      "ion.proto\"@\n\017KeyClaimRequest\022\025\n\rone_time" +
      "_code\030\001 \001(\t\022\026\n\016app_public_key\030\002 \001(\014\"\272\002\n\020" +
      "KeyClaimResponse\022B\n\005error\030\001 \001(\01623.com.pa" +
      "ncast.dongle.gaen.KeyClaimResponse.Error" +
      "Code\022\031\n\021server_public_key\030\002 \001(\014\022\027\n\017tries" +
      "_remaining\030\003 \001(\r\0229\n\026remaining_ban_durati" +
      "on\030\004 \001(\0132\031.google.protobuf.Duration\"s\n\tE" +
      "rrorCode\022\010\n\004NONE\020\000\022\013\n\007UNKNOWN\020\001\022\031\n\025INVAL" +
      "ID_ONE_TIME_CODE\020\002\022\020\n\014SERVER_ERROR\020\003\022\017\n\013" +
      "INVALID_KEY\020\004\022\021\n\rTEMPORARY_BAN\020\005\"k\n\026Encr" +
      "yptedUploadRequest\022\031\n\021server_public_key\030" +
      "\001 \001(\014\022\026\n\016app_public_key\030\002 \001(\014\022\r\n\005nonce\030\003" +
      " \001(\014\022\017\n\007payload\030\004 \001(\014\"\277\003\n\027EncryptedUploa" +
      "dResponse\022I\n\005error\030\001 \001(\0162:.com.pancast.d" +
      "ongle.gaen.EncryptedUploadResponse.Error" +
      "Code\"\330\002\n\tErrorCode\022\010\n\004NONE\020\000\022\013\n\007UNKNOWN\020" +
      "\001\022\023\n\017INVALID_KEYPAIR\020\002\022\025\n\021DECRYPTION_FAI" +
      "LED\020\003\022\023\n\017INVALID_PAYLOAD\020\004\022\020\n\014SERVER_ERR" +
      "OR\020\005\022\035\n\031INVALID_CRYPTO_PARAMETERS\020\006\022\021\n\rT" +
      "OO_MANY_KEYS\020\007\022\025\n\021INVALID_TIMESTAMP\020\010\022\032\n" +
      "\026INVALID_ROLLING_PERIOD\020\n\022\024\n\020INVALID_KEY" +
      "_DATA\020\013\022)\n%INVALID_ROLLING_START_INTERVA" +
      "L_NUMBER\020\014\022#\n\037INVALID_TRANSMISSION_RISK_" +
      "LEVEL\020\r\022\026\n\022NO_KEYS_IN_PAYLOAD\020\016\"\224\001\n\rOutb" +
      "reakEvent\022\023\n\013location_id\030\001 \001(\t\022.\n\nstart_" +
      "time\030\002 \001(\0132\032.google.protobuf.Timestamp\022," +
      "\n\010end_time\030\003 \001(\0132\032.google.protobuf.Times" +
      "tamp\022\020\n\010severity\030\004 \001(\r\"\321\001\n\025OutbreakEvent" +
      "Response\022G\n\005error\030\001 \001(\01628.com.pancast.do" +
      "ngle.gaen.OutbreakEventResponse.ErrorCod" +
      "e\"o\n\tErrorCode\022\010\n\004NONE\020\000\022\013\n\007UNKNOWN\020\001\022\016\n" +
      "\nINVALID_ID\020\002\022\025\n\021MISSING_TIMESTAMP\020\003\022\022\n\016" +
      "PERIOD_INVALID\020\004\022\020\n\014SERVER_ERROR\020\005\"\200\001\n\023O" +
      "utbreakEventExport\022\027\n\017start_timestamp\030\001 " +
      "\001(\006\022\025\n\rend_timestamp\030\002 \001(\006\0229\n\tlocations\030" +
      "\003 \003(\0132&.com.pancast.dongle.gaen.Outbreak" +
      "Event\"1\n\034OutbreakEventExportSignature\022\021\n" +
      "\tsignature\030\001 \001(\014\"t\n\006Upload\022-\n\ttimestamp\030" +
      "\001 \001(\0132\032.google.protobuf.Timestamp\022;\n\004key" +
      "s\030\002 \003(\0132-.com.pancast.dongle.gaen.Tempor" +
      "aryExposureKey\"\306\002\n\032TemporaryExposureKeyE" +
      "xport\022\027\n\017start_timestamp\030\001 \001(\006\022\025\n\rend_ti" +
      "mestamp\030\002 \001(\006\022\016\n\006region\030\003 \001(\t\022\021\n\tbatch_n" +
      "um\030\004 \001(\005\022\022\n\nbatch_size\030\005 \001(\005\022?\n\017signatur" +
      "e_infos\030\006 \003(\0132&.com.pancast.dongle.gaen." +
      "SignatureInfo\022;\n\004keys\030\007 \003(\0132-.com.pancas" +
      "t.dongle.gaen.TemporaryExposureKey\022C\n\014re" +
      "vised_keys\030\010 \003(\0132-.com.pancast.dongle.ga" +
      "en.TemporaryExposureKey\"\227\001\n\rSignatureInf" +
      "o\022 \n\030verification_key_version\030\003 \001(\t\022\033\n\023v" +
      "erification_key_id\030\004 \001(\t\022\033\n\023signature_al" +
      "gorithm\030\005 \001(\tJ\004\010\001\020\002J\004\010\002\020\003R\rapp_bundle_id" +
      "R\017android_package\"\200\003\n\024TemporaryExposureK" +
      "ey\022\020\n\010key_data\030\001 \001(\014\022\037\n\027transmission_ris" +
      "k_level\030\002 \001(\005\022%\n\035rolling_start_interval_" +
      "number\030\003 \001(\005\022\033\n\016rolling_period\030\004 \001(\005:\00314" +
      "4\022M\n\013report_type\030\005 \001(\01628.com.pancast.don" +
      "gle.gaen.TemporaryExposureKey.ReportType" +
      "\022$\n\034days_since_onset_of_symptoms\030\006 \001(\021\"|" +
      "\n\nReportType\022\013\n\007UNKNOWN\020\000\022\022\n\016CONFIRMED_T" +
      "EST\020\001\022 \n\034CONFIRMED_CLINICAL_DIAGNOSIS\020\002\022" +
      "\017\n\013SELF_REPORT\020\003\022\r\n\tRECURSIVE\020\004\022\013\n\007REVOK" +
      "ED\020\005\"M\n\020TEKSignatureList\0229\n\nsignatures\030\001" +
      " \003(\0132%.com.pancast.dongle.gaen.TEKSignat" +
      "ure\"\210\001\n\014TEKSignature\022>\n\016signature_info\030\001" +
      " \001(\0132&.com.pancast.dongle.gaen.Signature" +
      "Info\022\021\n\tbatch_num\030\002 \001(\005\022\022\n\nbatch_size\030\003 " +
      "\001(\005\022\021\n\tsignature\030\004 \001(\014"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
        }, assigner);
    internal_static_com_pancast_dongle_gaen_KeyClaimRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_pancast_dongle_gaen_KeyClaimRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_pancast_dongle_gaen_KeyClaimRequest_descriptor,
        new java.lang.String[] { "OneTimeCode", "AppPublicKey", });
    internal_static_com_pancast_dongle_gaen_KeyClaimResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_pancast_dongle_gaen_KeyClaimResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_pancast_dongle_gaen_KeyClaimResponse_descriptor,
        new java.lang.String[] { "Error", "ServerPublicKey", "TriesRemaining", "RemainingBanDuration", });
    internal_static_com_pancast_dongle_gaen_EncryptedUploadRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_pancast_dongle_gaen_EncryptedUploadRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_pancast_dongle_gaen_EncryptedUploadRequest_descriptor,
        new java.lang.String[] { "ServerPublicKey", "AppPublicKey", "Nonce", "Payload", });
    internal_static_com_pancast_dongle_gaen_EncryptedUploadResponse_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_pancast_dongle_gaen_EncryptedUploadResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_pancast_dongle_gaen_EncryptedUploadResponse_descriptor,
        new java.lang.String[] { "Error", });
    internal_static_com_pancast_dongle_gaen_OutbreakEvent_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_com_pancast_dongle_gaen_OutbreakEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_pancast_dongle_gaen_OutbreakEvent_descriptor,
        new java.lang.String[] { "LocationId", "StartTime", "EndTime", "Severity", });
    internal_static_com_pancast_dongle_gaen_OutbreakEventResponse_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_com_pancast_dongle_gaen_OutbreakEventResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_pancast_dongle_gaen_OutbreakEventResponse_descriptor,
        new java.lang.String[] { "Error", });
    internal_static_com_pancast_dongle_gaen_OutbreakEventExport_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_com_pancast_dongle_gaen_OutbreakEventExport_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_pancast_dongle_gaen_OutbreakEventExport_descriptor,
        new java.lang.String[] { "StartTimestamp", "EndTimestamp", "Locations", });
    internal_static_com_pancast_dongle_gaen_OutbreakEventExportSignature_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_com_pancast_dongle_gaen_OutbreakEventExportSignature_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_pancast_dongle_gaen_OutbreakEventExportSignature_descriptor,
        new java.lang.String[] { "Signature", });
    internal_static_com_pancast_dongle_gaen_Upload_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_com_pancast_dongle_gaen_Upload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_pancast_dongle_gaen_Upload_descriptor,
        new java.lang.String[] { "Timestamp", "Keys", });
    internal_static_com_pancast_dongle_gaen_TemporaryExposureKeyExport_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_com_pancast_dongle_gaen_TemporaryExposureKeyExport_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_pancast_dongle_gaen_TemporaryExposureKeyExport_descriptor,
        new java.lang.String[] { "StartTimestamp", "EndTimestamp", "Region", "BatchNum", "BatchSize", "SignatureInfos", "Keys", "RevisedKeys", });
    internal_static_com_pancast_dongle_gaen_SignatureInfo_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_com_pancast_dongle_gaen_SignatureInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_pancast_dongle_gaen_SignatureInfo_descriptor,
        new java.lang.String[] { "VerificationKeyVersion", "VerificationKeyId", "SignatureAlgorithm", });
    internal_static_com_pancast_dongle_gaen_TemporaryExposureKey_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_com_pancast_dongle_gaen_TemporaryExposureKey_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_pancast_dongle_gaen_TemporaryExposureKey_descriptor,
        new java.lang.String[] { "KeyData", "TransmissionRiskLevel", "RollingStartIntervalNumber", "RollingPeriod", "ReportType", "DaysSinceOnsetOfSymptoms", });
    internal_static_com_pancast_dongle_gaen_TEKSignatureList_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_com_pancast_dongle_gaen_TEKSignatureList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_pancast_dongle_gaen_TEKSignatureList_descriptor,
        new java.lang.String[] { "Signatures", });
    internal_static_com_pancast_dongle_gaen_TEKSignature_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_com_pancast_dongle_gaen_TEKSignature_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_pancast_dongle_gaen_TEKSignature_descriptor,
        new java.lang.String[] { "SignatureInfo", "BatchNum", "BatchSize", "Signature", });
    com.google.protobuf.TimestampProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
